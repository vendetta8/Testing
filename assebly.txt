.textbss:00371000 ;
.textbss:00371000 ; +-------------------------------------------------------------------------+
.textbss:00371000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.textbss:00371000 ; |           Copyright (c) 2023 Hex-Rays, <support@hex-rays.com>           |
.textbss:00371000 ; |                            Freeware version                             |
.textbss:00371000 ; +-------------------------------------------------------------------------+
.textbss:00371000 ;
.textbss:00371000 ; Input SHA256 : 4ACC365A43650A75E1FB305B4EB2D43694D2FD8B9CDD237B2F54AE14F1607920
.textbss:00371000 ; Input MD5    : 61690437253B380AFAD3DD97B7B14621
.textbss:00371000 ; Input CRC32  : B1FDC84B
.textbss:00371000
.textbss:00371000 ; File Name   : C:\Users\IEUser\Desktop\Malware\Assignment_1_2023\Assignment_1_2023.exe
.textbss:00371000 ; Format      : Portable executable for 80386 (PE)
.textbss:00371000 ; Imagebase   : 400000
.textbss:00371000 ; Timestamp   : 6400B1C5 (Thu Mar 02 14:25:09 2023)
.textbss:00371000 ; Section 1. (virtual address 00001000)
.textbss:00371000 ; Virtual size                  : 00010000 (  65536.)
.textbss:00371000 ; Section size in file          : 00000000 (      0.)
.textbss:00371000 ; Offset to raw data for section: 00000000
.textbss:00371000 ; Flags E00000A0: Text Bss Executable Readable Writable
.textbss:00371000 ; Alignment     : default
.textbss:00371000 ; PDB File Name : C:\Users\Dylan.Smyth\source\repos\Malware Reverse Engineering Assignment 1 2023\Debug\Malware Reverse Engineering Assignment 1 2023.pdb
.textbss:00371000 ; OS type         :  MS Windows
.textbss:00371000 ; Application type:  Executable 32bit
.textbss:00371000
.textbss:00371000                 .686p
.textbss:00371000                 .mmx
.textbss:00371000                 .model flat
.textbss:00371000
.textbss:00371000 ; ===========================================================================
.textbss:00371000
.textbss:00371000 ; Segment type: Pure code
.textbss:00371000 ; Segment permissions: Read/Write/Execute
.textbss:00371000 _textbss        segment para public 'CODE' use32
.textbss:00371000                 assume cs:_textbss
.textbss:00371000                 ;org 371000h
.textbss:00371000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.textbss:00371000                 dd 4000h dup(?)
.textbss:00371000 _textbss        ends
.textbss:00371000
.text:00381000 ; Section 2. (virtual address 00011000)
.text:00381000 ; Virtual size                  : 00005AEC (  23276.)
.text:00381000 ; Section size in file          : 00005C00 (  23552.)
.text:00381000 ; Offset to raw data for section: 00000400
.text:00381000 ; Flags 60000020: Text Executable Readable
.text:00381000 ; Alignment     : default
.text:00381000 ; ===========================================================================
.text:00381000
.text:00381000 ; Segment type: Pure code
.text:00381000 ; Segment permissions: Read/Execute
.text:00381000 _text           segment para public 'CODE' use32
.text:00381000                 assume cs:_text
.text:00381000                 ;org 381000h
.text:00381000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00381000                 db 5 dup(0CCh)
.text:00381005 ; [00000005 BYTES: COLLAPSED FUNCTION j_terminate. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038100A ; [00000005 BYTES: COLLAPSED FUNCTION sub_38100A. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038100F
.text:0038100F ; =============== S U B R O U T I N E =======================================
.text:0038100F
.text:0038100F ; Attributes: thunk
.text:0038100F
.text:0038100F sub_38100F      proc near               ; CODE XREF: sub_382110+D↓p
.text:0038100F                 jmp     sub_382580      ; Jump
.text:0038100F sub_38100F      endp
.text:0038100F
.text:00381014 ; ---------------------------------------------------------------------------
.text:00381014                 jmp     loc_385527      ; Jump
.text:00381019
.text:00381019 ; =============== S U B R O U T I N E =======================================
.text:00381019
.text:00381019 ; Attributes: thunk
.text:00381019
.text:00381019 ; int __cdecl j__register_onexit_function(_onexit_table_t *Table, _onexit_t Function)
.text:00381019 j__register_onexit_function proc near   ; CODE XREF: sub_3839C0+43↓p
.text:00381019                                         ; .text:00383A73↓p
.text:00381019
.text:00381019 Table           = dword ptr  4
.text:00381019 Function        = dword ptr  8
.text:00381019
.text:00381019                 jmp     _register_onexit_function ; Jump
.text:00381019 j__register_onexit_function endp
.text:00381019
.text:0038101E
.text:0038101E ; =============== S U B R O U T I N E =======================================
.text:0038101E
.text:0038101E ; Attributes: thunk
.text:0038101E
.text:0038101E sub_38101E      proc near               ; CODE XREF: sub_383650+33↓p
.text:0038101E                                         ; sub_383970+2C↓p
.text:0038101E                 jmp     sub_385580      ; Jump
.text:0038101E sub_38101E      endp
.text:0038101E
.text:00381023 ; [00000005 BYTES: COLLAPSED FUNCTION start. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381028 ; ---------------------------------------------------------------------------
.text:00381028                 jmp     loc_3854EB      ; Jump
.text:0038102D
.text:0038102D ; =============== S U B R O U T I N E =======================================
.text:0038102D
.text:0038102D ; Attributes: thunk
.text:0038102D
.text:0038102D sub_38102D      proc near               ; CODE XREF: __security_check_cookie(x):loc_382079↓j
.text:0038102D                 jmp     sub_382E50      ; Jump
.text:0038102D sub_38102D      endp
.text:0038102D
.text:00381032 ; ---------------------------------------------------------------------------
.text:00381032                 jmp     loc_383270      ; Jump
.text:00381037
.text:00381037 ; =============== S U B R O U T I N E =======================================
.text:00381037
.text:00381037 ; Attributes: thunk
.text:00381037
.text:00381037 sub_381037      proc near               ; CODE XREF: sub_382240:loc_382361↓p
.text:00381037                 jmp     sub_383DA0      ; Jump
.text:00381037 sub_381037      endp
.text:00381037
.text:0038103C
.text:0038103C ; =============== S U B R O U T I N E =======================================
.text:0038103C
.text:0038103C ; Attributes: thunk
.text:0038103C
.text:0038103C sub_38103C      proc near               ; CODE XREF: sub_382110+6E↓p
.text:0038103C                 jmp     sub_383CF0      ; Jump
.text:0038103C sub_38103C      endp
.text:0038103C
.text:00381041
.text:00381041 ; =============== S U B R O U T I N E =======================================
.text:00381041
.text:00381041 ; Attributes: thunk
.text:00381041
.text:00381041 ; int __cdecl j_strcmp(const char *Str1, const char *Str2)
.text:00381041 j_strcmp        proc near               ; CODE XREF: sub_3818A0+98↓p
.text:00381041
.text:00381041 Str1            = dword ptr  4
.text:00381041 Str2            = dword ptr  8
.text:00381041
.text:00381041                 jmp     strcmp          ; Jump
.text:00381041 j_strcmp        endp
.text:00381041
.text:00381046 ; ---------------------------------------------------------------------------
.text:00381046                 jmp     loc_385509      ; Jump
.text:0038104B ; ---------------------------------------------------------------------------
.text:0038104B                 jmp     loc_382FA0      ; Jump
.text:00381050
.text:00381050 ; =============== S U B R O U T I N E =======================================
.text:00381050
.text:00381050 ; Attributes: thunk
.text:00381050
.text:00381050 sub_381050      proc near               ; CODE XREF: sub_382240+DE↓p
.text:00381050                 jmp     sub_383D90      ; Jump
.text:00381050 sub_381050      endp
.text:00381050
.text:00381055 ; ---------------------------------------------------------------------------
.text:00381055                 jmp     loc_3844C0      ; Jump
.text:0038105A
.text:0038105A ; =============== S U B R O U T I N E =======================================
.text:0038105A
.text:0038105A ; Attributes: thunk
.text:0038105A
.text:0038105A sub_38105A      proc near               ; CODE XREF: sub_383F90+3↓p
.text:0038105A                 jmp     sub_384080      ; Jump
.text:0038105A sub_38105A      endp
.text:0038105A
.text:0038105F ; [00000005 BYTES: COLLAPSED FUNCTION j__crt_at_quick_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381064 ; ---------------------------------------------------------------------------
.text:00381064                 jmp     loc_383630      ; Jump
.text:00381069 ; [00000005 BYTES: COLLAPSED FUNCTION j___p___argc. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038106E ; ---------------------------------------------------------------------------
.text:0038106E                 jmp     sub_3855A0      ; Jump
.text:00381073 ; ---------------------------------------------------------------------------
.text:00381073                 jmp     loc_3842C0      ; Jump
.text:00381078 ; [00000005 BYTES: COLLAPSED FUNCTION j__initterm_e. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038107D
.text:0038107D ; =============== S U B R O U T I N E =======================================
.text:0038107D
.text:0038107D ; Attributes: thunk
.text:0038107D
.text:0038107D sub_38107D      proc near               ; CODE XREF: sub_3829A0+110↓p
.text:0038107D                 jmp     sub_384AA0      ; Jump
.text:0038107D sub_38107D      endp
.text:0038107D
.text:00381082 ; [00000005 BYTES: COLLAPSED FUNCTION j__initialize_narrow_environment. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381087
.text:00381087 ; =============== S U B R O U T I N E =======================================
.text:00381087
.text:00381087 ; Attributes: thunk
.text:00381087
.text:00381087 sub_381087      proc near               ; CODE XREF: sub_3829A0+45↓p
.text:00381087                 jmp     sub_383230      ; Jump
.text:00381087 sub_381087      endp
.text:00381087
.text:0038108C ; [00000005 BYTES: COLLAPSED FUNCTION j__initialize_onexit_table. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381091
.text:00381091 ; =============== S U B R O U T I N E =======================================
.text:00381091
.text:00381091 ; Attributes: thunk
.text:00381091
.text:00381091 sub_381091      proc near               ; CODE XREF: sub_382110:loc_38215E↓p
.text:00381091                 jmp     sub_383C60      ; Jump
.text:00381091 sub_381091      endp
.text:00381091
.text:00381096 ; [00000005 BYTES: COLLAPSED FUNCTION j___stdio_common_vsprintf_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038109B
.text:0038109B ; =============== S U B R O U T I N E =======================================
.text:0038109B
.text:0038109B ; Attributes: thunk
.text:0038109B
.text:0038109B sub_38109B      proc near               ; CODE XREF: .text:003844C9↓p
.text:0038109B                 jmp     sub_384250      ; Jump
.text:0038109B sub_38109B      endp
.text:0038109B
.text:003810A0 ; [00000005 BYTES: COLLAPSED FUNCTION j__execute_onexit_table. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003810A5 ; ---------------------------------------------------------------------------
.text:003810A5                 jmp     sub_385580      ; Jump
.text:003810AA
.text:003810AA ; =============== S U B R O U T I N E =======================================
.text:003810AA
.text:003810AA ; Attributes: thunk
.text:003810AA
.text:003810AA sub_3810AA      proc near               ; CODE XREF: sub_382110+3↓p
.text:003810AA                 jmp     sub_382560      ; Jump
.text:003810AA sub_3810AA      endp
.text:003810AA
.text:003810AF ; [00000005 BYTES: COLLAPSED FUNCTION j__wsplitpath_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003810B4 ; ---------------------------------------------------------------------------
.text:003810B4                 jmp     loc_383500      ; Jump
.text:003810B9 ; ---------------------------------------------------------------------------
.text:003810B9                 jmp     loc_383F40      ; Jump
.text:003810BE ; [00000005 BYTES: COLLAPSED FUNCTION j_Module32FirstW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003810C3 ; [00000005 BYTES: COLLAPSED FUNCTION j___current_exception. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003810C8
.text:003810C8 ; =============== S U B R O U T I N E =======================================
.text:003810C8
.text:003810C8 ; Attributes: thunk
.text:003810C8
.text:003810C8 sub_3810C8      proc near               ; CODE XREF: .text:003820CA↓p
.text:003810C8                                         ; sub_3820F0+A↓p
.text:003810C8                 jmp     sub_3820A0      ; Jump
.text:003810C8 sub_3810C8      endp
.text:003810C8
.text:003810CD ; ---------------------------------------------------------------------------
.text:003810CD                 jmp     loc_385533      ; Jump
.text:003810D2 ; ---------------------------------------------------------------------------
.text:003810D2                 jmp     loc_3854C7      ; Jump
.text:003810D7
.text:003810D7 ; =============== S U B R O U T I N E =======================================
.text:003810D7
.text:003810D7 ; Attributes: thunk
.text:003810D7
.text:003810D7 ; int __cdecl sub_3810D7(char *Format, char)
.text:003810D7 sub_3810D7      proc near               ; CODE XREF: sub_3818A0+CC↓p
.text:003810D7                                         ; sub_3818A0+DB↓p ...
.text:003810D7
.text:003810D7 Format          = dword ptr  4
.text:003810D7
.text:003810D7                 jmp     sub_381D70      ; Jump
.text:003810D7 sub_3810D7      endp
.text:003810D7
.text:003810DC
.text:003810DC ; =============== S U B R O U T I N E =======================================
.text:003810DC
.text:003810DC ; Attributes: thunk
.text:003810DC
.text:003810DC sub_3810DC      proc near               ; CODE XREF: sub_3825A0+3↓p
.text:003810DC                 jmp     sub_383C30      ; Jump
.text:003810DC sub_3810DC      endp
.text:003810DC
.text:003810E1 ; [00000005 BYTES: COLLAPSED FUNCTION j__CrtDbgReportW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003810E6
.text:003810E6 ; =============== S U B R O U T I N E =======================================
.text:003810E6
.text:003810E6 ; Attributes: thunk
.text:003810E6
.text:003810E6 sub_3810E6      proc near               ; CODE XREF: sub_381FF0+14↓p
.text:003810E6                 jmp     sub_3827A0      ; Jump
.text:003810E6 sub_3810E6      endp
.text:003810E6
.text:003810EB ; ---------------------------------------------------------------------------
.text:003810EB                 jmp     loc_385503      ; Jump
.text:003810F0 ; ---------------------------------------------------------------------------
.text:003810F0                 jmp     loc_38553F      ; Jump
.text:003810F5 ; [00000005 BYTES: COLLAPSED FUNCTION j__set_app_type. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003810FA ; ---------------------------------------------------------------------------
.text:003810FA                 jmp     loc_381E0B      ; Jump
.text:003810FF ; ---------------------------------------------------------------------------
.text:003810FF                 jmp     loc_383590      ; Jump
.text:00381104
.text:00381104 ; =============== S U B R O U T I N E =======================================
.text:00381104
.text:00381104 ; Attributes: thunk
.text:00381104
.text:00381104 ; int __cdecl UserMathErrorFunction(struct _exception *)
.text:00381104 UserMathErrorFunction proc near         ; DATA XREF: sub_382110+5C↓o
.text:00381104                 jmp     sub_383C00      ; Jump
.text:00381104 UserMathErrorFunction endp
.text:00381104
.text:00381109 ; ---------------------------------------------------------------------------
.text:00381109                 jmp     loc_3853F5      ; Jump
.text:0038110E ; [00000005 BYTES: COLLAPSED FUNCTION j__register_thread_local_exe_atexit_callback. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381113 ; ---------------------------------------------------------------------------
.text:00381113                 jmp     loc_3835F0      ; Jump
.text:00381118 ; [00000005 BYTES: COLLAPSED FUNCTION j__crt_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038111D
.text:0038111D ; =============== S U B R O U T I N E =======================================
.text:0038111D
.text:0038111D ; Attributes: thunk
.text:0038111D
.text:0038111D sub_38111D      proc near               ; CODE XREF: .text:0038354F↓p
.text:0038111D                                         ; .text:00383578↓p
.text:0038111D                 jmp     sub_385570      ; Jump
.text:0038111D sub_38111D      endp
.text:0038111D
.text:00381122 ; [00000005 BYTES: COLLAPSED FUNCTION j__seh_filter_exe. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381127 ; ---------------------------------------------------------------------------
.text:00381127                 jmp     loc_38551B      ; Jump
.text:0038112C
.text:0038112C ; =============== S U B R O U T I N E =======================================
.text:0038112C
.text:0038112C ; Attributes: thunk
.text:0038112C
.text:0038112C sub_38112C      proc near               ; CODE XREF: sub_382580+4↓p
.text:0038112C                 jmp     sub_383C20      ; Jump
.text:0038112C sub_38112C      endp
.text:0038112C
.text:00381131
.text:00381131 ; =============== S U B R O U T I N E =======================================
.text:00381131
.text:00381131 ; Attributes: thunk
.text:00381131
.text:00381131 sub_381131      proc near               ; CODE XREF: sub_382240+F2↓p
.text:00381131                                         ; sub_382240+135↓p
.text:00381131                 jmp     sub_3837C0      ; Jump
.text:00381131 sub_381131      endp
.text:00381131
.text:00381136 ; ---------------------------------------------------------------------------
.text:00381136                 jmp     loc_3853EF      ; Jump
.text:0038113B
.text:0038113B ; =============== S U B R O U T I N E =======================================
.text:0038113B
.text:0038113B ; Attributes: thunk
.text:0038113B
.text:0038113B sub_38113B      proc near               ; CODE XREF: sub_383970+1F↓p
.text:0038113B                 jmp     sub_385580      ; Jump
.text:0038113B sub_38113B      endp
.text:0038113B
.text:00381140
.text:00381140 ; =============== S U B R O U T I N E =======================================
.text:00381140
.text:00381140 ; Attributes: thunk
.text:00381140
.text:00381140 sub_381140      proc near               ; CODE XREF: sub_382110+92↓p
.text:00381140                                         ; .text:loc_3834E0↓p
.text:00381140                 jmp     sub_382500      ; Jump
.text:00381140 sub_381140      endp
.text:00381140
.text:00381145
.text:00381145 ; =============== S U B R O U T I N E =======================================
.text:00381145
.text:00381145 ; Attributes: thunk
.text:00381145
.text:00381145 sub_381145      proc near               ; CODE XREF: sub_382110+14↓p
.text:00381145                                         ; .text:00383505↓p
.text:00381145                 jmp     sub_3836B0      ; Jump
.text:00381145 sub_381145      endp
.text:00381145
.text:0038114A ; [00000005 BYTES: COLLAPSED FUNCTION j_CreateToolhelp32Snapshot. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038114F ; [00000005 BYTES: COLLAPSED FUNCTION j___p__commode. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381154 ; ---------------------------------------------------------------------------
.text:00381154                 jmp     loc_3834C0      ; Jump
.text:00381159
.text:00381159 ; =============== S U B R O U T I N E =======================================
.text:00381159
.text:00381159 ; Attributes: thunk
.text:00381159
.text:00381159 sub_381159      proc near               ; CODE XREF: sub_382200+8↓p
.text:00381159                 jmp     sub_383C40      ; Jump
.text:00381159 sub_381159      endp
.text:00381159
.text:0038115E ; [00000005 BYTES: COLLAPSED FUNCTION __security_check_cookie(x). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381163 ; [00000005 BYTES: COLLAPSED FUNCTION j_memset. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381168 ; ---------------------------------------------------------------------------
.text:00381168                 jmp     loc_383250      ; Jump
.text:0038116D ; ---------------------------------------------------------------------------
.text:0038116D                 jmp     loc_3832E0      ; Jump
.text:00381172 ; [00000005 BYTES: COLLAPSED FUNCTION j___vcrt_GetModuleHandleW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381177 ; ---------------------------------------------------------------------------
.text:00381177                 jmp     loc_382090      ; Jump
.text:0038117C ; [00000005 BYTES: COLLAPSED FUNCTION j_Process32NextW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381181 ; [00000005 BYTES: COLLAPSED FUNCTION j__seh_filter_dll. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381186
.text:00381186 ; =============== S U B R O U T I N E =======================================
.text:00381186
.text:00381186 ; Attributes: thunk
.text:00381186
.text:00381186 sub_381186      proc near               ; CODE XREF: sub_3821F0+3↓p
.text:00381186                 jmp     sub_383D10      ; Jump
.text:00381186 sub_381186      endp
.text:00381186
.text:0038118B
.text:0038118B ; =============== S U B R O U T I N E =======================================
.text:0038118B
.text:0038118B ; Attributes: thunk
.text:0038118B
.text:0038118B sub_38118B      proc near               ; CODE XREF: sub_382240+D6↓p
.text:0038118B                 jmp     sub_383940      ; Jump
.text:0038118B sub_38118B      endp
.text:0038118B
.text:00381190 ; ---------------------------------------------------------------------------
.text:00381190                 jmp     loc_3854CD      ; Jump
.text:00381195 ; ---------------------------------------------------------------------------
.text:00381195                 jmp     loc_3854FD      ; Jump
.text:0038119A
.text:0038119A ; =============== S U B R O U T I N E =======================================
.text:0038119A
.text:0038119A ; Attributes: thunk
.text:0038119A
.text:0038119A sub_38119A      proc near               ; CODE XREF: sub_382240+180↓p
.text:0038119A                 jmp     sub_383970      ; Jump
.text:0038119A sub_38119A      endp
.text:0038119A
.text:0038119F
.text:0038119F ; =============== S U B R O U T I N E =======================================
.text:0038119F
.text:0038119F ; Attributes: thunk
.text:0038119F
.text:0038119F sub_38119F      proc near               ; CODE XREF: .text:00381F11↓p
.text:0038119F                                         ; .text:00381F2C↓p
.text:0038119F                 jmp     sub_382680      ; Jump
.text:0038119F sub_38119F      endp
.text:0038119F
.text:003811A4 ; ---------------------------------------------------------------------------
.text:003811A4                 jmp     loc_3854D9      ; Jump
.text:003811A9
.text:003811A9 ; =============== S U B R O U T I N E =======================================
.text:003811A9
.text:003811A9 ; Attributes: thunk
.text:003811A9
.text:003811A9 sub_3811A9      proc near               ; CODE XREF: .text:00383573↓p
.text:003811A9                 jmp     sub_385570      ; Jump
.text:003811A9 sub_3811A9      endp
.text:003811A9
.text:003811AE ; ---------------------------------------------------------------------------
.text:003811AE                 jmp     loc_383280      ; Jump
.text:003811B3
.text:003811B3 ; =============== S U B R O U T I N E =======================================
.text:003811B3
.text:003811B3 ; Attributes: thunk
.text:003811B3
.text:003811B3 ; void __cdecl Function()
.text:003811B3 Function        proc near               ; DATA XREF: sub_382110+31↓o
.text:003811B3                 jmp     sub_384190      ; Jump
.text:003811B3 Function        endp
.text:003811B3
.text:003811B8 ; ---------------------------------------------------------------------------
.text:003811B8                 jmp     loc_385545      ; Jump
.text:003811BD
.text:003811BD ; =============== S U B R O U T I N E =======================================
.text:003811BD
.text:003811BD ; Attributes: thunk
.text:003811BD
.text:003811BD sub_3811BD      proc near               ; CODE XREF: sub_383460+6↓p
.text:003811BD                                         ; .text:003834C3↓p ...
.text:003811BD                 jmp     sub_385380      ; Jump
.text:003811BD sub_3811BD      endp
.text:003811BD
.text:003811C2
.text:003811C2 ; =============== S U B R O U T I N E =======================================
.text:003811C2
.text:003811C2 ; Attributes: thunk
.text:003811C2
.text:003811C2 sub_3811C2      proc near               ; CODE XREF: .text:003834CC↓p
.text:003811C2                                         ; sub_383650:loc_383660↓p
.text:003811C2                 jmp     sub_384F80      ; Jump
.text:003811C2 sub_3811C2      endp
.text:003811C2
.text:003811C7 ; ---------------------------------------------------------------------------
.text:003811C7                 jmp     sub_385590      ; Jump
.text:003811CC ; ---------------------------------------------------------------------------
.text:003811CC                 jmp     loc_3830C0      ; Jump
.text:003811D1 ; ---------------------------------------------------------------------------
.text:003811D1                 jmp     loc_385539      ; Jump
.text:003811D6 ; [00000005 BYTES: COLLAPSED FUNCTION j_wcscpy_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003811DB ; ---------------------------------------------------------------------------
.text:003811DB                 jmp     loc_3853E9      ; Jump
.text:003811E0
.text:003811E0 ; =============== S U B R O U T I N E =======================================
.text:003811E0
.text:003811E0 ; Attributes: thunk
.text:003811E0
.text:003811E0 ; int __cdecl sub_3811E0(char *Buffer, size_t BufferCount, char *Format, _locale_t Locale, va_list ArgList)
.text:003811E0 sub_3811E0      proc near               ; CODE XREF: sub_382DE0+12↓p
.text:003811E0
.text:003811E0 Buffer          = dword ptr  4
.text:003811E0 BufferCount     = dword ptr  8
.text:003811E0 Format          = dword ptr  0Ch
.text:003811E0 Locale          = dword ptr  10h
.text:003811E0 ArgList         = dword ptr  14h
.text:003811E0
.text:003811E0                 jmp     sub_382DA0      ; Jump
.text:003811E0 sub_3811E0      endp
.text:003811E0
.text:003811E5 ; ---------------------------------------------------------------------------
.text:003811E5                 jmp     loc_3854F7      ; Jump
.text:003811EA ; [00000005 BYTES: COLLAPSED FUNCTION j__set_new_mode. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003811EF
.text:003811EF ; =============== S U B R O U T I N E =======================================
.text:003811EF
.text:003811EF ; Attributes: thunk
.text:003811EF
.text:003811EF sub_3811EF      proc near               ; CODE XREF: sub_382110+25↓p
.text:003811EF                                         ; sub_382110+49↓p ...
.text:003811EF                 jmp     sub_383DB0      ; Jump
.text:003811EF sub_3811EF      endp
.text:003811EF
.text:003811F4 ; [00000005 BYTES: COLLAPSED FUNCTION j___vcrt_LoadLibraryExW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003811F9 ; ---------------------------------------------------------------------------
.text:003811F9                 jmp     loc_3854E5      ; Jump
.text:003811FE
.text:003811FE ; =============== S U B R O U T I N E =======================================
.text:003811FE
.text:003811FE ; Attributes: thunk
.text:003811FE
.text:003811FE sub_3811FE      proc near               ; CODE XREF: sub_3818A0+11D↓p
.text:003811FE                                         ; _main_0+19B↓p
.text:003811FE                 jmp     sub_381F80      ; Jump
.text:003811FE sub_3811FE      endp
.text:003811FE
.text:00381203 ; [00000005 BYTES: COLLAPSED FUNCTION j__except_handler4_common. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381208
.text:00381208 ; =============== S U B R O U T I N E =======================================
.text:00381208
.text:00381208 ; Attributes: thunk
.text:00381208
.text:00381208 sub_381208      proc near               ; CODE XREF: .text:loc_38360B↓p
.text:00381208                 jmp     sub_3855A0      ; Jump
.text:00381208 sub_381208      endp
.text:00381208
.text:0038120D
.text:0038120D ; =============== S U B R O U T I N E =======================================
.text:0038120D
.text:0038120D ; Attributes: thunk
.text:0038120D
.text:0038120D ; int __cdecl sub_38120D(_PVFV Function)
.text:0038120D sub_38120D      proc near               ; CODE XREF: sub_382110+36↓p
.text:0038120D
.text:0038120D Function        = dword ptr  4
.text:0038120D
.text:0038120D                 jmp     sub_383A90      ; Jump
.text:0038120D sub_38120D      endp
.text:0038120D
.text:00381212 ; ---------------------------------------------------------------------------
.text:00381212                 jmp     loc_381E05      ; Jump
.text:00381217 ; ---------------------------------------------------------------------------
.text:00381217                 jmp     loc_384290      ; Jump
.text:0038121C ; [00000005 BYTES: COLLAPSED FUNCTION j_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381221
.text:00381221 ; =============== S U B R O U T I N E =======================================
.text:00381221
.text:00381221 ; Attributes: thunk
.text:00381221
.text:00381221 sub_381221      proc near               ; CODE XREF: sub_382110+3E↓p
.text:00381221                                         ; .text:loc_3834D3↓p
.text:00381221                 jmp     sub_3824E0      ; Jump
.text:00381221 sub_381221      endp
.text:00381221
.text:00381226
.text:00381226 ; =============== S U B R O U T I N E =======================================
.text:00381226
.text:00381226 ; Attributes: thunk
.text:00381226
.text:00381226 sub_381226      proc near               ; CODE XREF: sub_382110+53↓p
.text:00381226                 jmp     sub_383D60      ; Jump
.text:00381226 sub_381226      endp
.text:00381226
.text:0038122B
.text:0038122B ; =============== S U B R O U T I N E =======================================
.text:0038122B
.text:0038122B ; Attributes: thunk
.text:0038122B
.text:0038122B ; int __cdecl sub_38122B(_PVFV Function)
.text:0038122B sub_38122B      proc near               ; CODE XREF: sub_383A90+8↓p
.text:0038122B
.text:0038122B Function        = dword ptr  4
.text:0038122B
.text:0038122B                 jmp     sub_3839C0      ; Jump
.text:0038122B sub_38122B      endp
.text:0038122B
.text:00381230
.text:00381230 ; =============== S U B R O U T I N E =======================================
.text:00381230
.text:00381230 ; Attributes: thunk
.text:00381230
.text:00381230 sub_381230      proc near               ; CODE XREF: sub_382110+9C↓p
.text:00381230                 jmp     sub_383F90      ; Jump
.text:00381230 sub_381230      endp
.text:00381230
.text:00381235
.text:00381235 ; =============== S U B R O U T I N E =======================================
.text:00381235
.text:00381235 ; Attributes: thunk
.text:00381235
.text:00381235 ; int __cdecl sub_381235(DWORD dwProcessId)
.text:00381235 sub_381235      proc near               ; CODE XREF: sub_3818A0+BB↓p
.text:00381235
.text:00381235 dwProcessId     = dword ptr  4
.text:00381235
.text:00381235                 jmp     sub_3817D0      ; Jump
.text:00381235 sub_381235      endp
.text:00381235
.text:0038123A ; ---------------------------------------------------------------------------
.text:0038123A                 jmp     loc_383A40      ; Jump
.text:0038123F ; ---------------------------------------------------------------------------
.text:0038123F                 jmp     sub_384080      ; Jump
.text:00381244 ; [00000005 BYTES: COLLAPSED FUNCTION j__c_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381249 ; [00000005 BYTES: COLLAPSED FUNCTION j__wmakepath_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038124E ; ---------------------------------------------------------------------------
.text:0038124E                 jmp     loc_383530      ; Jump
.text:00381253 ; ---------------------------------------------------------------------------
.text:00381253                 jmp     loc_3854DF      ; Jump
.text:00381258 ; ---------------------------------------------------------------------------
.text:00381258                 jmp     sub_3855B0      ; Jump
.text:0038125D ; ---------------------------------------------------------------------------
.text:0038125D
.text:0038125D loc_38125D:                             ; DATA XREF: .rdata:00388EA8↓o
.text:0038125D                 jmp     loc_3820B0      ; Jump
.text:00381262
.text:00381262 ; =============== S U B R O U T I N E =======================================
.text:00381262
.text:00381262 ; Attributes: thunk
.text:00381262
.text:00381262 sub_381262      proc near               ; CODE XREF: sub_3817D0+49↓p
.text:00381262                                         ; sub_3817D0+6B↓p ...
.text:00381262                 jmp     sub_381FF0      ; Jump
.text:00381262 sub_381262      endp
.text:00381262
.text:00381267
.text:00381267 ; =============== S U B R O U T I N E =======================================
.text:00381267
.text:00381267 ; Attributes: thunk
.text:00381267
.text:00381267 sub_381267      proc near               ; CODE XREF: .text:00383533↓p
.text:00381267                 jmp     sub_385560      ; Jump
.text:00381267 sub_381267      endp
.text:00381267
.text:0038126C
.text:0038126C ; =============== S U B R O U T I N E =======================================
.text:0038126C
.text:0038126C ; Attributes: thunk
.text:0038126C
.text:0038126C ; int __cdecl j__configthreadlocale(int Flag)
.text:0038126C j__configthreadlocale proc near         ; CODE XREF: sub_382110+7E↓p
.text:0038126C
.text:0038126C Flag            = dword ptr  4
.text:0038126C
.text:0038126C                 jmp     _configthreadlocale ; Jump
.text:0038126C j__configthreadlocale endp
.text:0038126C
.text:00381271
.text:00381271 ; =============== S U B R O U T I N E =======================================
.text:00381271
.text:00381271 ; Attributes: thunk
.text:00381271
.text:00381271 sub_381271      proc near               ; CODE XREF: .text:0038363D↓p
.text:00381271                 jmp     sub_385590      ; Jump
.text:00381271 sub_381271      endp
.text:00381271
.text:00381276 ; ---------------------------------------------------------------------------
.text:00381276                 jmp     sub_385550      ; Jump
.text:0038127B ; ---------------------------------------------------------------------------
.text:0038127B                 jmp     loc_383C80      ; Jump
.text:00381280 ; ---------------------------------------------------------------------------
.text:00381280                 jmp     loc_383570      ; Jump
.text:00381285
.text:00381285 ; =============== S U B R O U T I N E =======================================
.text:00381285
.text:00381285 ; Attributes: thunk
.text:00381285
.text:00381285 sub_381285      proc near               ; CODE XREF: _main_0+12E↓p
.text:00381285                 jmp     sub_3818A0      ; Jump
.text:00381285 sub_381285      endp
.text:00381285
.text:0038128A
.text:0038128A ; =============== S U B R O U T I N E =======================================
.text:0038128A
.text:0038128A ; Attributes: thunk
.text:0038128A
.text:0038128A sub_38128A      proc near               ; CODE XREF: .text:loc_383543↓p
.text:0038128A                 jmp     sub_385560      ; Jump
.text:0038128A sub_38128A      endp
.text:0038128A
.text:0038128F
.text:0038128F ; =============== S U B R O U T I N E =======================================
.text:0038128F
.text:0038128F ; Attributes: thunk
.text:0038128F
.text:0038128F sub_38128F      proc near               ; CODE XREF: sub_382240+118↓p
.text:0038128F                                         ; sub_3829A0+141↓p ...
.text:0038128F                 jmp     sub_384220      ; Jump
.text:0038128F sub_38128F      endp
.text:0038128F
.text:00381294
.text:00381294 ; =============== S U B R O U T I N E =======================================
.text:00381294
.text:00381294 ; Attributes: thunk
.text:00381294
.text:00381294 sub_381294      proc near               ; CODE XREF: sub_382110+78↓p
.text:00381294                 jmp     sub_383C50      ; Jump
.text:00381294 sub_381294      endp
.text:00381294
.text:00381299
.text:00381299 ; =============== S U B R O U T I N E =======================================
.text:00381299
.text:00381299 ; Attributes: thunk
.text:00381299
.text:00381299 sub_381299      proc near               ; CODE XREF: sub_382110:loc_3821A7↓p
.text:00381299                 jmp     sub_383FA0      ; Jump
.text:00381299 sub_381299      endp
.text:00381299
.text:0038129E
.text:0038129E ; =============== S U B R O U T I N E =======================================
.text:0038129E
.text:0038129E ; Attributes: thunk
.text:0038129E
.text:0038129E sub_38129E      proc near               ; CODE XREF: sub_383650+15↓p
.text:0038129E                 jmp     sub_385550      ; Jump
.text:0038129E sub_38129E      endp
.text:0038129E
.text:003812A3
.text:003812A3 ; =============== S U B R O U T I N E =======================================
.text:003812A3
.text:003812A3 ; Attributes: thunk
.text:003812A3
.text:003812A3 sub_3812A3      proc near               ; CODE XREF: sub_383650:loc_383675↓p
.text:003812A3                 jmp     sub_385550      ; Jump
.text:003812A3 sub_3812A3      endp
.text:003812A3
.text:003812A8 ; ---------------------------------------------------------------------------
.text:003812A8                 jmp     loc_384410      ; Jump
.text:003812AD ; ---------------------------------------------------------------------------
.text:003812AD                 jmp     loc_381E30      ; Jump
.text:003812B2
.text:003812B2 ; =============== S U B R O U T I N E =======================================
.text:003812B2
.text:003812B2 ; Attributes: thunk
.text:003812B2
.text:003812B2 sub_3812B2      proc near               ; CODE XREF: sub_3824E0+3↓p
.text:003812B2                 jmp     sub_383C10      ; Jump
.text:003812B2 sub_3812B2      endp
.text:003812B2
.text:003812B7 ; ---------------------------------------------------------------------------
.text:003812B7                 jmp     loc_384270      ; Jump
.text:003812BC ; [00000005 BYTES: COLLAPSED FUNCTION j__get_initial_narrow_environment. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003812C1
.text:003812C1 ; =============== S U B R O U T I N E =======================================
.text:003812C1
.text:003812C1 ; Attributes: thunk
.text:003812C1
.text:003812C1 sub_3812C1      proc near               ; CODE XREF: sub_383DB0+1C↓p
.text:003812C1                                         ; sub_383DB0+12A↓p
.text:003812C1                 jmp     sub_384130      ; Jump
.text:003812C1 sub_3812C1      endp
.text:003812C1
.text:003812C6 ; [00000005 BYTES: COLLAPSED FUNCTION j___p___argv. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003812CB
.text:003812CB ; =============== S U B R O U T I N E =======================================
.text:003812CB
.text:003812CB ; Attributes: thunk
.text:003812CB
.text:003812CB sub_3812CB      proc near               ; CODE XREF: sub_382240+35↓p
.text:003812CB                 jmp     sub_383650      ; Jump
.text:003812CB sub_3812CB      endp
.text:003812CB
.text:003812D0 ; ---------------------------------------------------------------------------
.text:003812D0                 jmp     loc_384380      ; Jump
.text:003812D5 ; ---------------------------------------------------------------------------
.text:003812D5                 jmp     loc_3842D0      ; Jump
.text:003812DA ; ---------------------------------------------------------------------------
.text:003812DA                 jmp     loc_385521      ; Jump
.text:003812DF ; ---------------------------------------------------------------------------
.text:003812DF                 jmp     loc_3843C0      ; Jump
.text:003812E4 ; [00000005 BYTES: COLLAPSED FUNCTION j___setusermatherr. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003812E9 ; ---------------------------------------------------------------------------
.text:003812E9                 jmp     sub_385560      ; Jump
.text:003812EE
.text:003812EE ; =============== S U B R O U T I N E =======================================
.text:003812EE
.text:003812EE ; Attributes: thunk
.text:003812EE
.text:003812EE ; int __cdecl sub_3812EE(char *Buffer, size_t BufferCount, char *Format, char ArgList)
.text:003812EE sub_3812EE      proc near               ; CODE XREF: sub_382680+B5↓p
.text:003812EE                                         ; sub_3828F0+44↓p
.text:003812EE
.text:003812EE Buffer          = dword ptr  4
.text:003812EE BufferCount     = dword ptr  8
.text:003812EE Format          = dword ptr  0Ch
.text:003812EE ArgList         = byte ptr  10h
.text:003812EE
.text:003812EE                 jmp     sub_382DE0      ; Jump
.text:003812EE sub_3812EE      endp
.text:003812EE
.text:003812F3
.text:003812F3 ; =============== S U B R O U T I N E =======================================
.text:003812F3
.text:003812F3 ; Attributes: thunk
.text:003812F3
.text:003812F3 ; BOOL __stdcall j_Process32FirstW(HANDLE hSnapshot, LPPROCESSENTRY32W lppe)
.text:003812F3 j_Process32FirstW proc near             ; CODE XREF: _main_0+FD↓p
.text:003812F3
.text:003812F3 hSnapshot       = dword ptr  4
.text:003812F3 lppe            = dword ptr  8
.text:003812F3
.text:003812F3                 jmp     Process32FirstW ; Jump
.text:003812F3 j_Process32FirstW endp
.text:003812F3
.text:003812F8 ; [00000005 BYTES: COLLAPSED FUNCTION _main. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003812FD
.text:003812FD ; =============== S U B R O U T I N E =======================================
.text:003812FD
.text:003812FD ; Attributes: thunk
.text:003812FD
.text:003812FD sub_3812FD      proc near               ; CODE XREF: sub_382110+8↓p
.text:003812FD                 jmp     sub_3825A0      ; Jump
.text:003812FD sub_3812FD      endp
.text:003812FD
.text:00381302
.text:00381302 ; =============== S U B R O U T I N E =======================================
.text:00381302
.text:00381302 ; Attributes: thunk
.text:00381302
.text:00381302 sub_381302      proc near               ; CODE XREF: sub_382240+56↓p
.text:00381302                 jmp     sub_383460      ; Jump
.text:00381302 sub_381302      endp
.text:00381302
.text:00381307 ; [00000005 BYTES: COLLAPSED FUNCTION j___std_type_info_destroy_list. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038130C
.text:0038130C ; =============== S U B R O U T I N E =======================================
.text:0038130C
.text:0038130C ; Attributes: thunk
.text:0038130C
.text:0038130C sub_38130C      proc near               ; CODE XREF: sub_382110+86↓p
.text:0038130C                 jmp     sub_383CA0      ; Jump
.text:0038130C sub_38130C      endp
.text:0038130C
.text:00381311
.text:00381311 ; =============== S U B R O U T I N E =======================================
.text:00381311
.text:00381311 ; Attributes: thunk
.text:00381311
.text:00381311 sub_381311      proc near               ; DATA XREF: .rdata:003891B4↓o
.text:00381311                 jmp     sub_3820F0      ; Jump
.text:00381311 sub_381311      endp
.text:00381311
.text:00381316
.text:00381316 ; =============== S U B R O U T I N E =======================================
.text:00381316
.text:00381316 ; Attributes: thunk
.text:00381316
.text:00381316 sub_381316      proc near               ; CODE XREF: sub_382240+15A↓p
.text:00381316                                         ; sub_382240+1C7↓p
.text:00381316                 jmp     sub_383FB0      ; Jump
.text:00381316 sub_381316      endp
.text:00381316
.text:0038131B
.text:0038131B ; =============== S U B R O U T I N E =======================================
.text:0038131B
.text:0038131B ; Attributes: thunk
.text:0038131B
.text:0038131B sub_38131B      proc near               ; CODE XREF: sub_381AC0+33↓p
.text:0038131B                                         ; sub_382DA0+3↓p ...
.text:0038131B                 jmp     sub_381A70      ; Jump
.text:0038131B sub_38131B      endp
.text:0038131B
.text:00381320 ; ---------------------------------------------------------------------------
.text:00381320                 jmp     loc_3854D3      ; Jump
.text:00381325 ; ---------------------------------------------------------------------------
.text:00381325                 jmp     loc_382CC0      ; Jump
.text:0038132A ; [00000005 BYTES: COLLAPSED FUNCTION j__controlfp_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038132F ; ---------------------------------------------------------------------------
.text:0038132F                 jmp     sub_385570      ; Jump
.text:00381334
.text:00381334 ; =============== S U B R O U T I N E =======================================
.text:00381334
.text:00381334 ; Attributes: thunk
.text:00381334
.text:00381334 ; LONG __stdcall TopLevelExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:00381334 TopLevelExceptionFilter proc near       ; DATA XREF: sub_384060+3↓o
.text:00381334
.text:00381334 ExceptionInfo   = dword ptr  4
.text:00381334
.text:00381334                 jmp     sub_384090      ; Jump
.text:00381334 TopLevelExceptionFilter endp
.text:00381334
.text:00381339
.text:00381339 ; =============== S U B R O U T I N E =======================================
.text:00381339
.text:00381339 ; Attributes: thunk
.text:00381339
.text:00381339 sub_381339      proc near               ; CODE XREF: sub_384250+7↓p
.text:00381339                 jmp     sub_384230      ; Jump
.text:00381339 sub_381339      endp
.text:00381339
.text:0038133E ; ---------------------------------------------------------------------------
.text:0038133E                 jmp     loc_3854F1      ; Jump
.text:00381343
.text:00381343 ; =============== S U B R O U T I N E =======================================
.text:00381343
.text:00381343 ; Attributes: thunk
.text:00381343
.text:00381343 sub_381343      proc near               ; CODE XREF: sub_3817D0+20↓p
.text:00381343                                         ; sub_3818A0+2D↓p ...
.text:00381343                 jmp     sub_382020      ; Jump
.text:00381343 sub_381343      endp
.text:00381343
.text:00381348
.text:00381348 ; =============== S U B R O U T I N E =======================================
.text:00381348
.text:00381348 ; Attributes: thunk
.text:00381348
.text:00381348 sub_381348      proc near               ; CODE XREF: sub_382110+73↓p
.text:00381348                 jmp     sub_383CB0      ; Jump
.text:00381348 sub_381348      endp
.text:00381348
.text:0038134D
.text:0038134D ; =============== S U B R O U T I N E =======================================
.text:0038134D
.text:0038134D ; Attributes: thunk
.text:0038134D
.text:0038134D sub_38134D      proc near               ; CODE XREF: sub_382200+3↓p
.text:0038134D                 jmp     sub_384060      ; Jump
.text:0038134D sub_38134D      endp
.text:0038134D
.text:00381352
.text:00381352 ; =============== S U B R O U T I N E =======================================
.text:00381352
.text:00381352 ; Attributes: thunk
.text:00381352
.text:00381352 sub_381352      proc near               ; CODE XREF: .text:003820D0↓p
.text:00381352                 jmp     sub_3832B0      ; Jump
.text:00381352 sub_381352      endp
.text:00381352
.text:00381357 ; ---------------------------------------------------------------------------
.text:00381357                 jmp     loc_381E70      ; Jump
.text:0038135C ; [00000005 BYTES: COLLAPSED FUNCTION j_Module32NextW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381361 ; ---------------------------------------------------------------------------
.text:00381361                 jmp     loc_385515      ; Jump
.text:00381366 ; [00000005 BYTES: COLLAPSED FUNCTION j_strcat_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038136B
.text:0038136B ; =============== S U B R O U T I N E =======================================
.text:0038136B
.text:0038136B ; Attributes: thunk
.text:0038136B
.text:0038136B ; int __cdecl sub_38136B(int, char *Source)
.text:0038136B sub_38136B      proc near               ; CODE XREF: .text:00381EBD↓p
.text:0038136B                                         ; sub_381F80+41↓p
.text:0038136B
.text:0038136B Source          = dword ptr  8
.text:0038136B
.text:0038136B                 jmp     sub_382810      ; Jump
.text:0038136B sub_38136B      endp
.text:0038136B
.text:00381370 ; [00000005 BYTES: COLLAPSED FUNCTION j__CrtDbgReport. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381375 ; ---------------------------------------------------------------------------
.text:00381375                 jmp     loc_384420      ; Jump
.text:0038137A
.text:0038137A ; =============== S U B R O U T I N E =======================================
.text:0038137A
.text:0038137A ; Attributes: thunk
.text:0038137A
.text:0038137A sub_38137A      proc near               ; CODE XREF: sub_383D10+21↓p
.text:0038137A                 jmp     sub_383D00      ; Jump
.text:0038137A sub_38137A      endp
.text:0038137A
.text:0038137F ; [00000005 BYTES: COLLAPSED FUNCTION j_strcpy_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381384 ; [00000005 BYTES: COLLAPSED FUNCTION j__exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381389 ; [00000005 BYTES: COLLAPSED FUNCTION j__initterm. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038138E ; [00000005 BYTES: COLLAPSED FUNCTION j___current_exception_context. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381393
.text:00381393 ; =============== S U B R O U T I N E =======================================
.text:00381393
.text:00381393 ; Attributes: thunk
.text:00381393
.text:00381393 sub_381393      proc near               ; CODE XREF: .text:00382FA5↓p
.text:00381393                 jmp     sub_382FB0      ; Jump
.text:00381393 sub_381393      endp
.text:00381393
.text:00381398 ; [00000005 BYTES: COLLAPSED FUNCTION j___vcrt_GetModuleFileNameW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038139D
.text:0038139D ; =============== S U B R O U T I N E =======================================
.text:0038139D
.text:0038139D ; Attributes: thunk
.text:0038139D
.text:0038139D sub_38139D      proc near               ; CODE XREF: sub_383460:loc_383473↓p
.text:0038139D                 jmp     sub_383450      ; Jump
.text:0038139D sub_38139D      endp
.text:0038139D
.text:003813A2 ; [00000005 BYTES: COLLAPSED FUNCTION j__configure_narrow_argv. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003813A7
.text:003813A7 ; =============== S U B R O U T I N E =======================================
.text:003813A7
.text:003813A7 ; Attributes: thunk
.text:003813A7
.text:003813A7 sub_3813A7      proc near               ; CODE XREF: sub_3829A0+36↓p
.text:003813A7                 jmp     sub_383240      ; Jump
.text:003813A7 sub_3813A7      endp
.text:003813A7
.text:003813AC ; ---------------------------------------------------------------------------
.text:003813AC                 jmp     loc_381A60      ; Jump
.text:003813B1
.text:003813B1 ; =============== S U B R O U T I N E =======================================
.text:003813B1
.text:003813B1 ; Attributes: thunk
.text:003813B1
.text:003813B1 sub_3813B1      proc near               ; CODE XREF: sub_382110:loc_382179↓p
.text:003813B1                 jmp     sub_383CE0      ; Jump
.text:003813B1 sub_3813B1      endp
.text:003813B1
.text:003813B6 ; ---------------------------------------------------------------------------
.text:003813B6                 jmp     loc_38550F      ; Jump
.text:003813BB
.text:003813BB ; =============== S U B R O U T I N E =======================================
.text:003813BB
.text:003813BB ; Attributes: thunk
.text:003813BB
.text:003813BB sub_3813BB      proc near               ; CODE XREF: SEH_4137C0+9↓p
.text:003813BB                 jmp     sub_3855B0      ; Jump
.text:003813BB sub_3813BB      endp
.text:003813BB
.text:003813C0 ; [00000005 BYTES: COLLAPSED FUNCTION j__set_fmode. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003813C5
.text:003813C5 ; =============== S U B R O U T I N E =======================================
.text:003813C5
.text:003813C5 ; Attributes: thunk
.text:003813C5
.text:003813C5 ; int __cdecl sub_3813C5(FILE *Stream, char *Format, _locale_t Locale, va_list ArgList)
.text:003813C5 sub_3813C5      proc near               ; CODE XREF: sub_381D70+4A↓p
.text:003813C5
.text:003813C5 Stream          = dword ptr  4
.text:003813C5 Format          = dword ptr  8
.text:003813C5 Locale          = dword ptr  0Ch
.text:003813C5 ArgList         = dword ptr  10h
.text:003813C5
.text:003813C5                 jmp     sub_381AC0      ; Jump
.text:003813C5 sub_3813C5      endp
.text:003813C5
.text:003813CA ; ---------------------------------------------------------------------------
.text:003813CA                 jmp     loc_381DFF      ; Jump
.text:003813CF
.text:003813CF ; =============== S U B R O U T I N E =======================================
.text:003813CF
.text:003813CF ; Attributes: thunk
.text:003813CF
.text:003813CF sub_3813CF      proc near               ; CODE XREF: sub_382220+3↓p
.text:003813CF                 jmp     sub_383B60      ; Jump
.text:003813CF sub_3813CF      endp
.text:003813CF
.text:003813D4
.text:003813D4 ; =============== S U B R O U T I N E =======================================
.text:003813D4
.text:003813D4 ; Attributes: thunk
.text:003813D4
.text:003813D4 sub_3813D4      proc near               ; CODE XREF: .text:00383635↓p
.text:003813D4                 jmp     sub_385590      ; Jump
.text:003813D4 sub_3813D4      endp
.text:003813D4
.text:003813D9 ; [00000005 BYTES: COLLAPSED FUNCTION j__cexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003813DE
.text:003813DE ; =============== S U B R O U T I N E =======================================
.text:003813DE
.text:003813DE ; Attributes: thunk
.text:003813DE
.text:003813DE ; int __cdecl sub_3813DE(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:003813DE sub_3813DE      proc near               ; CODE XREF: sub_382E50+FB↓p
.text:003813DE                                         ; sub_382FB0+CA↓p ...
.text:003813DE
.text:003813DE ExceptionInfo   = dword ptr  4
.text:003813DE
.text:003813DE                 jmp     sub_382E10      ; Jump
.text:003813DE sub_3813DE      endp
.text:003813DE
.text:003813E3 ; ---------------------------------------------------------------------------
.text:003813E3                 jmp     loc_38552D      ; Jump
.text:003813E8 ; ---------------------------------------------------------------------------
.text:003813E8                 jmp     loc_38186D      ; Jump
.text:003813E8 ; ---------------------------------------------------------------------------
.text:003813ED                 db 3E3h dup(0CCh)
.text:003817D0
.text:003817D0 ; =============== S U B R O U T I N E =======================================
.text:003817D0
.text:003817D0 ; Attributes: bp-based frame
.text:003817D0
.text:003817D0 ; int __cdecl sub_3817D0(DWORD dwProcessId)
.text:003817D0 sub_3817D0      proc near               ; CODE XREF: sub_381235↑j
.text:003817D0
.text:003817D0 var_30          = byte ptr -30h
.text:003817D0 var_2C          = dword ptr -2Ch
.text:003817D0 hProcess        = dword ptr -20h
.text:003817D0 bInheritHandle  = dword ptr -14h
.text:003817D0 dwDesiredAccess = dword ptr -8
.text:003817D0 dwProcessId     = dword ptr  8
.text:003817D0
.text:003817D0                 push    ebp
.text:003817D1                 mov     ebp, esp
.text:003817D3                 sub     esp, 0F0h       ; Integer Subtraction
.text:003817D9                 push    ebx
.text:003817DA                 push    esi
.text:003817DB                 push    edi
.text:003817DC                 lea     edi, [ebp+var_30] ; Load Effective Address
.text:003817DF                 mov     ecx, 0Ch
.text:003817E4                 mov     eax, 0CCCCCCCCh
.text:003817E9                 rep stosd               ; Store String
.text:003817EB                 mov     ecx, offset unk_38C0AD
.text:003817F0                 call    sub_381343      ; Call Procedure
.text:003817F5                 mov     [ebp+dwDesiredAccess], 1
.text:003817FC                 mov     [ebp+bInheritHandle], 0
.text:00381803                 mov     esi, esp
.text:00381805                 mov     eax, [ebp+dwProcessId]
.text:00381808                 push    eax             ; dwProcessId
.text:00381809                 mov     ecx, [ebp+bInheritHandle]
.text:0038180C                 push    ecx             ; bInheritHandle
.text:0038180D                 mov     edx, [ebp+dwDesiredAccess]
.text:00381810                 push    edx             ; dwDesiredAccess
.text:00381811                 call    ds:OpenProcess  ; Indirect Call Near Procedure
.text:00381817                 cmp     esi, esp        ; Compare Two Operands
.text:00381819                 call    sub_381262      ; Call Procedure
.text:0038181E                 mov     [ebp+hProcess], eax
.text:00381821                 cmp     [ebp+hProcess], 0 ; Compare Two Operands
.text:00381825                 jnz     short loc_38182B ; Jump if Not Zero (ZF=0)
.text:00381827                 xor     eax, eax        ; Logical Exclusive OR
.text:00381829                 jmp     short loc_381859 ; Jump
.text:0038182B ; ---------------------------------------------------------------------------
.text:0038182B
.text:0038182B loc_38182B:                             ; CODE XREF: sub_3817D0+55↑j
.text:0038182B                 mov     esi, esp
.text:0038182D                 push    0FFFFFFFFh      ; uExitCode
.text:0038182F                 mov     eax, [ebp+hProcess]
.text:00381832                 push    eax             ; hProcess
.text:00381833                 call    ds:TerminateProcess ; Indirect Call Near Procedure
.text:00381839                 cmp     esi, esp        ; Compare Two Operands
.text:0038183B                 call    sub_381262      ; Call Procedure
.text:00381840                 mov     [ebp+var_2C], eax
.text:00381843                 mov     esi, esp
.text:00381845                 mov     eax, [ebp+hProcess]
.text:00381848                 push    eax             ; hObject
.text:00381849                 call    ds:CloseHandle  ; Indirect Call Near Procedure
.text:0038184F                 cmp     esi, esp        ; Compare Two Operands
.text:00381851                 call    sub_381262      ; Call Procedure
.text:00381856                 mov     eax, [ebp+var_2C]
.text:00381859
.text:00381859 loc_381859:                             ; CODE XREF: sub_3817D0+59↑j
.text:00381859                 pop     edi
.text:0038185A                 pop     esi
.text:0038185B                 pop     ebx
.text:0038185C                 add     esp, 0F0h       ; Add
.text:00381862                 cmp     ebp, esp        ; Compare Two Operands
.text:00381864                 call    sub_381262      ; Call Procedure
.text:00381869                 mov     esp, ebp
.text:0038186B                 pop     ebp
.text:0038186C                 retn                    ; Return Near from Procedure
.text:0038186C sub_3817D0      endp
.text:0038186C
.text:0038186D ; ---------------------------------------------------------------------------
.text:0038186D
.text:0038186D loc_38186D:                             ; CODE XREF: .text:003813E8↑j
.text:0038186D                 jmp     ds:strncmp      ; Indirect Near Jump
.text:0038186D ; ---------------------------------------------------------------------------
.text:00381873                 db 2Dh dup(0CCh)
.text:003818A0
.text:003818A0 ; =============== S U B R O U T I N E =======================================
.text:003818A0
.text:003818A0 ; Attributes: bp-based frame
.text:003818A0
.text:003818A0 sub_3818A0      proc near               ; CODE XREF: sub_381285↑j
.text:003818A0
.text:003818A0 var_440         = byte ptr -440h
.text:003818A0 me              = MODULEENTRY32W ptr -43Ch
.text:003818A0 hSnapshot       = dword ptr -0Ch
.text:003818A0 var_4           = dword ptr -4
.text:003818A0 th32ProcessID   = dword ptr  8
.text:003818A0
.text:003818A0                 push    ebp
.text:003818A1                 mov     ebp, esp
.text:003818A3                 sub     esp, 680h       ; Integer Subtraction
.text:003818A9                 push    ebx
.text:003818AA                 push    esi
.text:003818AB                 push    edi             ; char
.text:003818AC                 lea     edi, [ebp+var_440] ; Load Effective Address
.text:003818B2                 mov     ecx, 110h
.text:003818B7                 mov     eax, 0CCCCCCCCh
.text:003818BC                 rep stosd               ; Store String
.text:003818BE                 mov     eax, ___security_cookie
.text:003818C3                 xor     eax, ebp        ; Logical Exclusive OR
.text:003818C5                 mov     [ebp+var_4], eax
.text:003818C8                 mov     ecx, offset unk_38C0AD
.text:003818CD                 call    sub_381343      ; Call Procedure
.text:003818D2                 mov     [ebp+hSnapshot], 0FFFFFFFFh
.text:003818D9                 mov     eax, [ebp+th32ProcessID]
.text:003818DC                 push    eax             ; th32ProcessID
.text:003818DD                 push    8               ; dwFlags
.text:003818DF                 call    j_CreateToolhelp32Snapshot ; Call Procedure
.text:003818E4                 mov     [ebp+hSnapshot], eax
.text:003818E7                 cmp     [ebp+hSnapshot], 0FFFFFFFFh ; Compare Two Operands
.text:003818EB                 jnz     short loc_3818F4 ; Jump if Not Zero (ZF=0)
.text:003818ED                 xor     eax, eax        ; Logical Exclusive OR
.text:003818EF                 jmp     loc_3819B3      ; Jump
.text:003818F4 ; ---------------------------------------------------------------------------
.text:003818F4
.text:003818F4 loc_3818F4:                             ; CODE XREF: sub_3818A0+4B↑j
.text:003818F4                 mov     [ebp+me.dwSize], 428h
.text:003818FE                 lea     eax, [ebp+me]   ; Load Effective Address
.text:00381904                 push    eax             ; lpme
.text:00381905                 mov     ecx, [ebp+hSnapshot]
.text:00381908                 push    ecx             ; hSnapshot
.text:00381909                 call    j_Module32FirstW ; Call Procedure
.text:0038190E                 test    eax, eax        ; Logical Compare
.text:00381910                 jnz     short loc_38192C ; Jump if Not Zero (ZF=0)
.text:00381912                 mov     esi, esp
.text:00381914                 mov     eax, [ebp+hSnapshot]
.text:00381917                 push    eax             ; hObject
.text:00381918                 call    ds:CloseHandle  ; Indirect Call Near Procedure
.text:0038191E                 cmp     esi, esp        ; Compare Two Operands
.text:00381920                 call    sub_381262      ; Call Procedure
.text:00381925                 xor     eax, eax        ; Logical Exclusive OR
.text:00381927                 jmp     loc_3819B3      ; Jump
.text:0038192C ; ---------------------------------------------------------------------------
.text:0038192C
.text:0038192C loc_38192C:                             ; CODE XREF: sub_3818A0+70↑j
.text:0038192C                                         ; sub_3818A0+FC↓j
.text:0038192C                 lea     eax, [ebp+me.szModule] ; Load Effective Address
.text:00381932                 push    eax             ; Str2
.text:00381933                 push    offset Str1     ; "keylog.dll"
.text:00381938                 call    j_strcmp        ; Call Procedure
.text:0038193D                 add     esp, 8          ; Add
.text:00381940                 test    eax, eax        ; Logical Compare
.text:00381942                 jnz     short loc_38198A ; Jump if Not Zero (ZF=0)
.text:00381944                 mov     esi, esp
.text:00381946                 mov     eax, [ebp+hSnapshot]
.text:00381949                 push    eax             ; hObject
.text:0038194A                 call    ds:CloseHandle  ; Indirect Call Near Procedure
.text:00381950                 cmp     esi, esp        ; Compare Two Operands
.text:00381952                 call    sub_381262      ; Call Procedure
.text:00381957                 mov     eax, [ebp+th32ProcessID]
.text:0038195A                 push    eax             ; dwProcessId
.text:0038195B                 call    sub_381235      ; Call Procedure
.text:00381960                 add     esp, 4          ; Add
.text:00381963                 test    eax, eax        ; Logical Compare
.text:00381965                 jz      short loc_381976 ; Jump if Zero (ZF=1)
.text:00381967                 push    offset Format   ; "*** SUCCESSFULLY SOLVED PROBLEM ***\n"
.text:0038196C                 call    sub_3810D7      ; Call Procedure
.text:00381971                 add     esp, 4          ; Add
.text:00381974                 jmp     short loc_381983 ; Jump
.text:00381976 ; ---------------------------------------------------------------------------
.text:00381976
.text:00381976 loc_381976:                             ; CODE XREF: sub_3818A0+C5↑j
.text:00381976                 push    offset aFailedToSolveP ; "*** FAILED TO SOLVE PROBLEM ***\n"
.text:0038197B                 call    sub_3810D7      ; Call Procedure
.text:00381980                 add     esp, 4          ; Add
.text:00381983
.text:00381983 loc_381983:                             ; CODE XREF: sub_3818A0+D4↑j
.text:00381983                 mov     eax, 1
.text:00381988                 jmp     short loc_3819B3 ; Jump
.text:0038198A ; ---------------------------------------------------------------------------
.text:0038198A
.text:0038198A loc_38198A:                             ; CODE XREF: sub_3818A0+A2↑j
.text:0038198A                 lea     eax, [ebp+me]   ; Load Effective Address
.text:00381990                 push    eax             ; lpme
.text:00381991                 mov     ecx, [ebp+hSnapshot]
.text:00381994                 push    ecx             ; hSnapshot
.text:00381995                 call    j_Module32NextW ; Call Procedure
.text:0038199A                 test    eax, eax        ; Logical Compare
.text:0038199C                 jnz     short loc_38192C ; Jump if Not Zero (ZF=0)
.text:0038199E                 mov     esi, esp
.text:003819A0                 mov     eax, [ebp+hSnapshot]
.text:003819A3                 push    eax             ; hObject
.text:003819A4                 call    ds:CloseHandle  ; Indirect Call Near Procedure
.text:003819AA                 cmp     esi, esp        ; Compare Two Operands
.text:003819AC                 call    sub_381262      ; Call Procedure
.text:003819B1                 xor     eax, eax        ; Logical Exclusive OR
.text:003819B3
.text:003819B3 loc_3819B3:                             ; CODE XREF: sub_3818A0+4F↑j
.text:003819B3                                         ; sub_3818A0+87↑j ...
.text:003819B3                 push    edx
.text:003819B4                 mov     ecx, ebp
.text:003819B6                 push    eax
.text:003819B7                 lea     edx, dword_3819E4 ; Load Effective Address
.text:003819BD                 call    sub_3811FE      ; Call Procedure
.text:003819C2                 pop     eax
.text:003819C3                 pop     edx
.text:003819C4                 pop     edi
.text:003819C5                 pop     esi
.text:003819C6                 pop     ebx
.text:003819C7                 mov     ecx, [ebp+var_4]
.text:003819CA                 xor     ecx, ebp        ; StackCookie
.text:003819CC                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:003819D1                 add     esp, 680h       ; Add
.text:003819D7                 cmp     ebp, esp        ; Compare Two Operands
.text:003819D9                 call    sub_381262      ; Call Procedure
.text:003819DE                 mov     esp, ebp
.text:003819E0                 pop     ebp
.text:003819E1                 retn                    ; Return Near from Procedure
.text:003819E1 sub_3818A0      endp
.text:003819E1
.text:003819E1 ; ---------------------------------------------------------------------------
.text:003819E2                 align 4
.text:003819E4 dword_3819E4    dd 1                    ; DATA XREF: sub_3818A0+117↑o
.text:003819E8                 dd offset dword_3819EC
.text:003819EC dword_3819EC    dd 0FFFFFBC4h, 428h     ; DATA XREF: .text:003819E8↑o
.text:003819F4                 dd offset aMe32         ; "me32"
.text:003819F8 aMe32           db 'me32',0             ; DATA XREF: .text:003819F4↑o
.text:003819FD                 db 63h dup(0CCh)
.text:00381A60 ; ---------------------------------------------------------------------------
.text:00381A60
.text:00381A60 loc_381A60:                             ; CODE XREF: .text:003813AC↑j
.text:00381A60                 push    ebp
.text:00381A61                 mov     ebp, esp
.text:00381A63                 pop     ebp
.text:00381A64                 retn                    ; Return Near from Procedure
.text:00381A64 ; ---------------------------------------------------------------------------
.text:00381A65                 align 10h
.text:00381A70 ; [0000003A BYTES: COLLAPSED FUNCTION sub_381A70. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381AAA                 align 20h
.text:00381AC0
.text:00381AC0 ; =============== S U B R O U T I N E =======================================
.text:00381AC0
.text:00381AC0 ; Attributes: bp-based frame
.text:00381AC0
.text:00381AC0 ; int __cdecl sub_381AC0(FILE *Stream, char *Format, _locale_t Locale, va_list ArgList)
.text:00381AC0 sub_381AC0      proc near               ; CODE XREF: sub_3813C5↑j
.text:00381AC0
.text:00381AC0 Stream          = dword ptr  8
.text:00381AC0 Format          = dword ptr  0Ch
.text:00381AC0 Locale          = dword ptr  10h
.text:00381AC0 ArgList         = dword ptr  14h
.text:00381AC0
.text:00381AC0                 push    ebp
.text:00381AC1                 mov     ebp, esp
.text:00381AC3                 sub     esp, 0C0h       ; Integer Subtraction
.text:00381AC9                 push    ebx
.text:00381ACA                 push    esi
.text:00381ACB                 push    edi
.text:00381ACC                 mov     edi, ebp
.text:00381ACE                 xor     ecx, ecx        ; Logical Exclusive OR
.text:00381AD0                 mov     eax, 0CCCCCCCCh
.text:00381AD5                 rep stosd               ; Store String
.text:00381AD7                 mov     ecx, offset unk_38C0A2
.text:00381ADC                 call    sub_381343      ; Call Procedure
.text:00381AE1                 mov     esi, esp
.text:00381AE3                 mov     eax, [ebp+ArgList]
.text:00381AE6                 push    eax             ; ArgList
.text:00381AE7                 mov     ecx, [ebp+Locale]
.text:00381AEA                 push    ecx             ; Locale
.text:00381AEB                 mov     edx, [ebp+Format]
.text:00381AEE                 push    edx             ; Format
.text:00381AEF                 mov     eax, [ebp+Stream]
.text:00381AF2                 push    eax             ; Stream
.text:00381AF3                 call    sub_38131B      ; Call Procedure
.text:00381AF8                 mov     ecx, [eax+4]
.text:00381AFB                 push    ecx
.text:00381AFC                 mov     edx, [eax]
.text:00381AFE                 push    edx             ; Options
.text:00381AFF                 call    ds:__stdio_common_vfprintf ; Indirect Call Near Procedure
.text:00381B05                 add     esp, 18h        ; Add
.text:00381B08                 cmp     esi, esp        ; Compare Two Operands
.text:00381B0A                 call    sub_381262      ; Call Procedure
.text:00381B0F                 pop     edi
.text:00381B10                 pop     esi
.text:00381B11                 pop     ebx
.text:00381B12                 add     esp, 0C0h       ; Add
.text:00381B18                 cmp     ebp, esp        ; Compare Two Operands
.text:00381B1A                 call    sub_381262      ; Call Procedure
.text:00381B1F                 mov     esp, ebp
.text:00381B21                 pop     ebp
.text:00381B22                 retn                    ; Return Near from Procedure
.text:00381B22 sub_381AC0      endp
.text:00381B22
.text:00381B22 ; ---------------------------------------------------------------------------
.text:00381B23                 align 20h
.text:00381B40
.text:00381B40 ; =============== S U B R O U T I N E =======================================
.text:00381B40
.text:00381B40 ; Attributes: bp-based frame
.text:00381B40
.text:00381B40 ; int __cdecl main_0(int argc, const char **argv, const char **envp)
.text:00381B40 _main_0         proc near               ; CODE XREF: _main↑j
.text:00381B40
.text:00381B40 var_250         = byte ptr -250h
.text:00381B40 var_24C         = dword ptr -24Ch
.text:00381B40 pe              = PROCESSENTRY32W ptr -240h
.text:00381B40 hSnapshot       = dword ptr -0Ch
.text:00381B40 var_4           = dword ptr -4
.text:00381B40 argc            = dword ptr  8
.text:00381B40 argv            = dword ptr  0Ch
.text:00381B40 envp            = dword ptr  10h
.text:00381B40
.text:00381B40                 push    ebp
.text:00381B41                 mov     ebp, esp
.text:00381B43                 sub     esp, 3D0h       ; Integer Subtraction
.text:00381B49                 push    ebx
.text:00381B4A                 push    esi
.text:00381B4B                 push    edi             ; char
.text:00381B4C                 lea     edi, [ebp+var_250] ; Load Effective Address
.text:00381B52                 mov     ecx, 94h
.text:00381B57                 mov     eax, 0CCCCCCCCh
.text:00381B5C                 rep stosd               ; Store String
.text:00381B5E                 mov     eax, ___security_cookie
.text:00381B63                 xor     eax, ebp        ; Logical Exclusive OR
.text:00381B65                 mov     [ebp+var_4], eax
.text:00381B68                 mov     ecx, offset unk_38C0AD
.text:00381B6D                 call    sub_381343      ; Call Procedure
.text:00381B72                 push    offset aMtuMalwareReve ; "MTU Malware Reverse Engineering - Assig"...
.text:00381B77                 call    sub_3810D7      ; Call Procedure
.text:00381B7C                 add     esp, 4          ; Add
.text:00381B7F                 push    offset aPleaseEnterYou ; "Please enter your software licence key:"...
.text:00381B84                 call    sub_3810D7      ; Call Procedure
.text:00381B89                 add     esp, 4          ; Add
.text:00381B8C                 mov     esi, esp
.text:00381B8E                 push    0               ; Ix
.text:00381B90                 call    ds:__acrt_iob_func ; Indirect Call Near Procedure
.text:00381B96                 add     esp, 4          ; Add
.text:00381B99                 cmp     esi, esp        ; Compare Two Operands
.text:00381B9B                 call    sub_381262      ; Call Procedure
.text:00381BA0                 mov     esi, esp
.text:00381BA2                 push    eax             ; Stream
.text:00381BA3                 push    100h            ; MaxCount
.text:00381BA8                 push    offset Str2     ; Buffer
.text:00381BAD                 call    ds:fgets        ; Indirect Call Near Procedure
.text:00381BB3                 add     esp, 0Ch        ; Add
.text:00381BB6                 cmp     esi, esp        ; Compare Two Operands
.text:00381BB8                 call    sub_381262      ; Call Procedure
.text:00381BBD                 push    offset Str2     ; char
.text:00381BC2                 push    offset aS       ; "%s"
.text:00381BC7                 call    sub_3810D7      ; Call Procedure
.text:00381BCC                 add     esp, 8          ; Add
.text:00381BCF                 mov     esi, esp
.text:00381BD1                 push    10h             ; MaxCount
.text:00381BD3                 push    offset Str2     ; Str2
.text:00381BD8                 push    offset a12348765Malrev ; "1234-8765-MALREV"
.text:00381BDD                 call    ds:strncmp      ; Indirect Call Near Procedure
.text:00381BE3                 add     esp, 0Ch        ; Add
.text:00381BE6                 cmp     esi, esp        ; Compare Two Operands
.text:00381BE8                 call    sub_381262      ; Call Procedure
.text:00381BED                 test    eax, eax        ; Logical Compare
.text:00381BEF                 jz      short loc_381C02 ; Jump if Zero (ZF=1)
.text:00381BF1                 mov     esi, esp
.text:00381BF3                 push    0               ; Code
.text:00381BF5                 call    ds:__imp_exit   ; Indirect Call Near Procedure
.text:00381BFB ; ---------------------------------------------------------------------------
.text:00381BFB                 cmp     esi, esp        ; Compare Two Operands
.text:00381BFD                 call    sub_381262      ; Call Procedure
.text:00381C02
.text:00381C02 loc_381C02:                             ; CODE XREF: _main_0+AF↑j
.text:00381C02                 push    offset aScanning ; "*** SCANNING ***\n\n"
.text:00381C07                 call    sub_3810D7      ; Call Procedure
.text:00381C0C                 add     esp, 4          ; Add
.text:00381C0F                 push    0               ; th32ProcessID
.text:00381C11                 push    2               ; dwFlags
.text:00381C13                 call    j_CreateToolhelp32Snapshot ; Call Procedure
.text:00381C18                 mov     [ebp+hSnapshot], eax
.text:00381C1B                 cmp     [ebp+hSnapshot], 0FFFFFFFFh ; Compare Two Operands
.text:00381C1F                 jnz     short loc_381C28 ; Jump if Not Zero (ZF=0)
.text:00381C21                 xor     eax, eax        ; Logical Exclusive OR
.text:00381C23                 jmp     loc_381CD1      ; Jump
.text:00381C28 ; ---------------------------------------------------------------------------
.text:00381C28
.text:00381C28 loc_381C28:                             ; CODE XREF: _main_0+DF↑j
.text:00381C28                 mov     [ebp+pe.dwSize], 22Ch
.text:00381C32                 lea     eax, [ebp+pe]   ; Load Effective Address
.text:00381C38                 push    eax             ; lppe
.text:00381C39                 mov     ecx, [ebp+hSnapshot]
.text:00381C3C                 push    ecx             ; hSnapshot
.text:00381C3D                 call    j_Process32FirstW ; Call Procedure
.text:00381C42                 test    eax, eax        ; Logical Compare
.text:00381C44                 jnz     short loc_381C5D ; Jump if Not Zero (ZF=0)
.text:00381C46                 mov     esi, esp
.text:00381C48                 mov     eax, [ebp+hSnapshot]
.text:00381C4B                 push    eax             ; hObject
.text:00381C4C                 call    ds:CloseHandle  ; Indirect Call Near Procedure
.text:00381C52                 cmp     esi, esp        ; Compare Two Operands
.text:00381C54                 call    sub_381262      ; Call Procedure
.text:00381C59                 xor     eax, eax        ; Logical Exclusive OR
.text:00381C5B                 jmp     short loc_381CD1 ; Jump
.text:00381C5D ; ---------------------------------------------------------------------------
.text:00381C5D
.text:00381C5D loc_381C5D:                             ; CODE XREF: _main_0+104↑j
.text:00381C5D                 mov     [ebp+var_24C], 0
.text:00381C67
.text:00381C67 loc_381C67:                             ; CODE XREF: _main_0+16A↓j
.text:00381C67                 mov     eax, [ebp+pe.th32ProcessID]
.text:00381C6D                 push    eax
.text:00381C6E                 call    sub_381285      ; Call Procedure
.text:00381C73                 add     esp, 4          ; Add
.text:00381C76                 test    eax, eax        ; Logical Compare
.text:00381C78                 jz      short loc_381C98 ; Jump if Zero (ZF=1)
.text:00381C7A                 lea     eax, [ebp+pe.szExeFile] ; Load Effective Address
.text:00381C80                 push    eax             ; char
.text:00381C81                 push    offset aPossibleMatchi ; "Possible Matching Process discovered in"...
.text:00381C86                 call    sub_3810D7      ; Call Procedure
.text:00381C8B                 add     esp, 8          ; Add
.text:00381C8E                 mov     [ebp+var_24C], 1
.text:00381C98
.text:00381C98 loc_381C98:                             ; CODE XREF: _main_0+138↑j
.text:00381C98                 lea     eax, [ebp+pe]   ; Load Effective Address
.text:00381C9E                 push    eax             ; lppe
.text:00381C9F                 mov     ecx, [ebp+hSnapshot]
.text:00381CA2                 push    ecx             ; hSnapshot
.text:00381CA3                 call    j_Process32NextW ; Call Procedure
.text:00381CA8                 test    eax, eax        ; Logical Compare
.text:00381CAA                 jnz     short loc_381C67 ; Jump if Not Zero (ZF=0)
.text:00381CAC                 cmp     [ebp+var_24C], 0 ; Compare Two Operands
.text:00381CB3                 jnz     short loc_381CC2 ; Jump if Not Zero (ZF=0)
.text:00381CB5                 push    offset aNoSuspiciousPr ; "*** NO SUSPICIOUS PROCESSES FOUND ***\n"
.text:00381CBA                 call    sub_3810D7      ; Call Procedure
.text:00381CBF                 add     esp, 4          ; Add
.text:00381CC2
.text:00381CC2 loc_381CC2:                             ; CODE XREF: _main_0+173↑j
.text:00381CC2                 push    offset aScanComplete ; "*** SCAN COMPLETE ***\n"
.text:00381CC7                 call    sub_3810D7      ; Call Procedure
.text:00381CCC                 add     esp, 4          ; Add
.text:00381CCF                 xor     eax, eax        ; Logical Exclusive OR
.text:00381CD1
.text:00381CD1 loc_381CD1:                             ; CODE XREF: _main_0+E3↑j
.text:00381CD1                                         ; _main_0+11B↑j
.text:00381CD1                 push    edx
.text:00381CD2                 mov     ecx, ebp
.text:00381CD4                 push    eax
.text:00381CD5                 lea     edx, dword_381D00 ; Load Effective Address
.text:00381CDB                 call    sub_3811FE      ; Call Procedure
.text:00381CE0                 pop     eax
.text:00381CE1                 pop     edx
.text:00381CE2                 pop     edi
.text:00381CE3                 pop     esi
.text:00381CE4                 pop     ebx
.text:00381CE5                 mov     ecx, [ebp+var_4]
.text:00381CE8                 xor     ecx, ebp        ; StackCookie
.text:00381CEA                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00381CEF                 add     esp, 3D0h       ; Add
.text:00381CF5                 cmp     ebp, esp        ; Compare Two Operands
.text:00381CF7                 call    sub_381262      ; Call Procedure
.text:00381CFC                 mov     esp, ebp
.text:00381CFE                 pop     ebp
.text:00381CFF                 retn                    ; Return Near from Procedure
.text:00381CFF _main_0         endp ; sp-analysis failed
.text:00381CFF
.text:00381CFF ; ---------------------------------------------------------------------------
.text:00381D00 dword_381D00    dd 1                    ; DATA XREF: _main_0+195↑o
.text:00381D04                 dd offset loc_381D08
.text:00381D08 ; ---------------------------------------------------------------------------
.text:00381D08
.text:00381D08 loc_381D08:                             ; DATA XREF: .text:00381D04↑o
.text:00381D08                 sar     ch, 0FFh        ; Shift Arithmetic Right
.text:00381D0B                 jmp     fword ptr [edx+eax] ; Indirect Far Jump
.text:00381D0B ; ---------------------------------------------------------------------------
.text:00381D0E                 align 10h
.text:00381D10                 dd offset aPe32         ; "pe32"
.text:00381D14 aPe32           db 'pe32',0             ; DATA XREF: .text:00381D10↑o
.text:00381D19                 db 57h dup(0CCh)
.text:00381D70
.text:00381D70 ; =============== S U B R O U T I N E =======================================
.text:00381D70
.text:00381D70 ; Attributes: bp-based frame
.text:00381D70
.text:00381D70 ; int __cdecl sub_381D70(char *Format, char)
.text:00381D70 sub_381D70      proc near               ; CODE XREF: sub_3810D7↑j
.text:00381D70
.text:00381D70 var_24          = byte ptr -24h
.text:00381D70 ArgList         = dword ptr -14h
.text:00381D70 var_8           = dword ptr -8
.text:00381D70 Format          = dword ptr  8
.text:00381D70 arg_4           = byte ptr  0Ch
.text:00381D70
.text:00381D70                 push    ebp
.text:00381D71                 mov     ebp, esp
.text:00381D73                 sub     esp, 0E4h       ; Integer Subtraction
.text:00381D79                 push    ebx
.text:00381D7A                 push    esi
.text:00381D7B                 push    edi
.text:00381D7C                 lea     edi, [ebp+var_24] ; Load Effective Address
.text:00381D7F                 mov     ecx, 9
.text:00381D84                 mov     eax, 0CCCCCCCCh
.text:00381D89                 rep stosd               ; Store String
.text:00381D8B                 mov     ecx, offset unk_38C0A2
.text:00381D90                 call    sub_381343      ; Call Procedure
.text:00381D95                 lea     eax, [ebp+arg_4] ; Load Effective Address
.text:00381D98                 mov     [ebp+ArgList], eax
.text:00381D9B                 mov     eax, [ebp+ArgList]
.text:00381D9E                 push    eax             ; ArgList
.text:00381D9F                 push    0               ; Locale
.text:00381DA1                 mov     ecx, [ebp+Format]
.text:00381DA4                 push    ecx             ; Format
.text:00381DA5                 mov     esi, esp
.text:00381DA7                 push    1               ; Ix
.text:00381DA9                 call    ds:__acrt_iob_func ; Indirect Call Near Procedure
.text:00381DAF                 add     esp, 4          ; Add
.text:00381DB2                 cmp     esi, esp        ; Compare Two Operands
.text:00381DB4                 call    sub_381262      ; Call Procedure
.text:00381DB9                 push    eax             ; Stream
.text:00381DBA                 call    sub_3813C5      ; Call Procedure
.text:00381DBF                 add     esp, 10h        ; Add
.text:00381DC2                 mov     [ebp+var_8], eax
.text:00381DC5                 mov     [ebp+ArgList], 0
.text:00381DCC                 mov     eax, [ebp+var_8]
.text:00381DCF                 pop     edi
.text:00381DD0                 pop     esi
.text:00381DD1                 pop     ebx
.text:00381DD2                 add     esp, 0E4h       ; Add
.text:00381DD8                 cmp     ebp, esp        ; Compare Two Operands
.text:00381DDA                 call    sub_381262      ; Call Procedure
.text:00381DDF                 mov     esp, ebp
.text:00381DE1                 pop     ebp
.text:00381DE2                 retn                    ; Return Near from Procedure
.text:00381DE2 sub_381D70      endp
.text:00381DE2
.text:00381DE2 ; ---------------------------------------------------------------------------
.text:00381DE3                 db 1Ch dup(0CCh)
.text:00381DFF ; ---------------------------------------------------------------------------
.text:00381DFF
.text:00381DFF loc_381DFF:                             ; CODE XREF: .text:003813CA↑j
.text:00381DFF                 jmp     ds:CloseHandle  ; Indirect Near Jump
.text:00381E05 ; ---------------------------------------------------------------------------
.text:00381E05
.text:00381E05 loc_381E05:                             ; CODE XREF: .text:00381212↑j
.text:00381E05                 jmp     ds:TerminateProcess ; Indirect Near Jump
.text:00381E0B ; ---------------------------------------------------------------------------
.text:00381E0B
.text:00381E0B loc_381E0B:                             ; CODE XREF: .text:003810FA↑j
.text:00381E0B                 jmp     ds:OpenProcess  ; Indirect Near Jump
.text:00381E11 ; [00000006 BYTES: COLLAPSED FUNCTION CreateToolhelp32Snapshot. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381E17
.text:00381E17 ; =============== S U B R O U T I N E =======================================
.text:00381E17
.text:00381E17 ; Attributes: thunk
.text:00381E17
.text:00381E17 ; BOOL __stdcall Process32FirstW(HANDLE hSnapshot, LPPROCESSENTRY32W lppe)
.text:00381E17 Process32FirstW proc near               ; CODE XREF: j_Process32FirstW↑j
.text:00381E17
.text:00381E17 hSnapshot       = dword ptr  4
.text:00381E17 lppe            = dword ptr  8
.text:00381E17
.text:00381E17                 jmp     ds:__imp_Process32FirstW ; Indirect Near Jump
.text:00381E17 Process32FirstW endp
.text:00381E17
.text:00381E1D ; [00000006 BYTES: COLLAPSED FUNCTION Process32NextW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381E23 ; [00000006 BYTES: COLLAPSED FUNCTION Module32FirstW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381E29 ; [00000006 BYTES: COLLAPSED FUNCTION Module32NextW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00381E2F                 align 10h
.text:00381E30
.text:00381E30 loc_381E30:                             ; CODE XREF: .text:003812AD↑j
.text:00381E30                 push    ebp
.text:00381E31                 mov     ebp, esp
.text:00381E33                 push    ebx
.text:00381E34                 push    esi
.text:00381E35                 mov     esi, ecx
.text:00381E37                 mov     ebx, edx
.text:00381E39                 test    esi, esi        ; Logical Compare
.text:00381E3B                 jz      short loc_381E5C ; Jump if Zero (ZF=1)
.text:00381E3D                 test    ebx, ebx        ; Logical Compare
.text:00381E3F                 jz      short loc_381E5C ; Jump if Zero (ZF=1)
.text:00381E41                 mov     edx, [ebp+8]
.text:00381E44                 test    edx, edx        ; Logical Compare
.text:00381E46                 jz      short loc_381E5C ; Jump if Zero (ZF=1)
.text:00381E48                 push    edi
.text:00381E49                 mov     al, 0CCh
.text:00381E4B                 mov     edi, esi
.text:00381E4D                 mov     ecx, ebx
.text:00381E4F                 rep stosb               ; Store String
.text:00381E51                 mov     eax, [edx]
.text:00381E53                 mov     [esi+4], eax
.text:00381E56                 mov     [esi+0Ch], ebx
.text:00381E59                 mov     [edx], esi
.text:00381E5B                 pop     edi
.text:00381E5C
.text:00381E5C loc_381E5C:                             ; CODE XREF: .text:00381E3B↑j
.text:00381E5C                                         ; .text:00381E3F↑j ...
.text:00381E5C                 pop     esi
.text:00381E5D                 pop     ebx
.text:00381E5E                 pop     ebp
.text:00381E5F                 retn    4               ; Return Near from Procedure
.text:00381E5F ; ---------------------------------------------------------------------------
.text:00381E62                 align 10h
.text:00381E70
.text:00381E70 loc_381E70:                             ; CODE XREF: .text:00381357↑j
.text:00381E70                 push    ebp
.text:00381E71                 mov     ebp, esp
.text:00381E73                 sub     esp, 8          ; Integer Subtraction
.text:00381E76                 mov     [ebp-4], ecx
.text:00381E79                 push    esi
.text:00381E7A                 mov     esi, [ebp+8]
.text:00381E7D                 push    edi
.text:00381E7E                 test    edx, edx        ; Logical Compare
.text:00381E80                 jz      short loc_381ED1 ; Jump if Zero (ZF=1)
.text:00381E82                 xor     edi, edi        ; Logical Exclusive OR
.text:00381E84                 cmp     [edx], edi      ; Compare Two Operands
.text:00381E86                 jle     short loc_381ED1 ; Jump if Less or Equal (ZF=1 | SF!=OF)
.text:00381E88                 push    ebx
.text:00381E89                 xor     ebx, ebx        ; Logical Exclusive OR
.text:00381E8B                 mov     esi, edx
.text:00381E8D                 lea     ecx, [ecx+0]    ; Load Effective Address
.text:00381E90
.text:00381E90 loc_381E90:                             ; CODE XREF: .text:00381ECB↓j
.text:00381E90                 mov     ecx, [esi+4]
.text:00381E93                 mov     eax, [ebp-4]
.text:00381E96                 mov     edx, [ecx+ebx]
.text:00381E99                 cmp     dword ptr [edx+eax-4], 0CCCCCCCCh ; Compare Two Operands
.text:00381EA1                 jnz     short loc_381EB5 ; Jump if Not Zero (ZF=0)
.text:00381EA3                 mov     eax, [ecx+ebx+4]
.text:00381EA7                 add     eax, edx        ; Add
.text:00381EA9                 mov     edx, [ebp-4]
.text:00381EAC                 cmp     dword ptr [eax+edx], 0CCCCCCCCh ; Compare Two Operands
.text:00381EB3                 jz      short loc_381EC5 ; Jump if Zero (ZF=1)
.text:00381EB5
.text:00381EB5 loc_381EB5:                             ; CODE XREF: .text:00381EA1↑j
.text:00381EB5                 push    dword ptr [ecx+ebx+8]
.text:00381EB9                 mov     eax, [ebp+4]
.text:00381EBC                 push    eax
.text:00381EBD                 call    sub_38136B      ; Call Procedure
.text:00381EC2                 add     esp, 8          ; Add
.text:00381EC5
.text:00381EC5 loc_381EC5:                             ; CODE XREF: .text:00381EB3↑j
.text:00381EC5                 inc     edi             ; Increment by 1
.text:00381EC6                 add     ebx, 0Ch        ; Add
.text:00381EC9                 cmp     edi, [esi]      ; Compare Two Operands
.text:00381ECB                 jl      short loc_381E90 ; Jump if Less (SF!=OF)
.text:00381ECD                 mov     esi, [ebp+8]
.text:00381ED0                 pop     ebx
.text:00381ED1
.text:00381ED1 loc_381ED1:                             ; CODE XREF: .text:00381E80↑j
.text:00381ED1                                         ; .text:00381E86↑j
.text:00381ED1                 xor     edi, edi        ; Logical Exclusive OR
.text:00381ED3                 mov     eax, esi
.text:00381ED5                 test    esi, esi        ; Logical Compare
.text:00381ED7                 jz      short loc_381F3C ; Jump if Zero (ZF=1)
.text:00381ED9                 lea     esp, [esp+0]    ; Load Effective Address
.text:00381EE0
.text:00381EE0 loc_381EE0:                             ; CODE XREF: .text:00381EE6↓j
.text:00381EE0                 mov     eax, [eax+4]
.text:00381EE3                 inc     edi             ; Increment by 1
.text:00381EE4                 test    eax, eax        ; Logical Compare
.text:00381EE6                 jnz     short loc_381EE0 ; Jump if Not Zero (ZF=0)
.text:00381EE8
.text:00381EE8 loc_381EE8:                             ; CODE XREF: .text:00381F3A↓j
.text:00381EE8                 cmp     dword ptr [esi], 0CCCCCCCCh ; Compare Two Operands
.text:00381EEE                 jnz     short loc_381F0B ; Jump if Not Zero (ZF=0)
.text:00381EF0                 cmp     dword ptr [esi+14h], 0CCCCCCCCh ; Compare Two Operands
.text:00381EF7                 jnz     short loc_381F0B ; Jump if Not Zero (ZF=0)
.text:00381EF9                 cmp     dword ptr [esi+18h], 0CCCCCCCCh ; Compare Two Operands
.text:00381F00                 jnz     short loc_381F0B ; Jump if Not Zero (ZF=0)
.text:00381F02                 cmp     dword ptr [esi+1Ch], 0CCCCCCCCh ; Compare Two Operands
.text:00381F09                 jz      short loc_381F19 ; Jump if Zero (ZF=1)
.text:00381F0B
.text:00381F0B loc_381F0B:                             ; CODE XREF: .text:00381EEE↑j
.text:00381F0B                                         ; .text:00381EF7↑j ...
.text:00381F0B                 mov     eax, [ebp+4]
.text:00381F0E                 push    edi
.text:00381F0F                 push    esi
.text:00381F10                 push    eax
.text:00381F11                 call    sub_38119F      ; Call Procedure
.text:00381F16                 add     esp, 0Ch        ; Add
.text:00381F19
.text:00381F19 loc_381F19:                             ; CODE XREF: .text:00381F09↑j
.text:00381F19                 mov     eax, [esi+0Ch]
.text:00381F1C                 cmp     dword ptr [eax+esi-4], 0CCCCCCCCh ; Compare Two Operands
.text:00381F24                 jz      short loc_381F34 ; Jump if Zero (ZF=1)
.text:00381F26                 mov     eax, [ebp+4]
.text:00381F29                 push    edi
.text:00381F2A                 push    esi
.text:00381F2B                 push    eax
.text:00381F2C                 call    sub_38119F      ; Call Procedure
.text:00381F31                 add     esp, 0Ch        ; Add
.text:00381F34
.text:00381F34 loc_381F34:                             ; CODE XREF: .text:00381F24↑j
.text:00381F34                 mov     esi, [esi+4]
.text:00381F37                 dec     edi             ; Decrement by 1
.text:00381F38                 test    esi, esi        ; Logical Compare
.text:00381F3A                 jnz     short loc_381EE8 ; Jump if Not Zero (ZF=0)
.text:00381F3C
.text:00381F3C loc_381F3C:                             ; CODE XREF: .text:00381ED7↑j
.text:00381F3C                 pop     edi
.text:00381F3D                 pop     esi
.text:00381F3E                 mov     esp, ebp
.text:00381F40                 pop     ebp
.text:00381F41                 retn    4               ; Return Near from Procedure
.text:00381F41 ; ---------------------------------------------------------------------------
.text:00381F44                 align 40h
.text:00381F80
.text:00381F80 ; =============== S U B R O U T I N E =======================================
.text:00381F80
.text:00381F80 ; Attributes: bp-based frame
.text:00381F80
.text:00381F80 sub_381F80      proc near               ; CODE XREF: sub_3811FE↑j
.text:00381F80
.text:00381F80 var_4           = dword ptr -4
.text:00381F80
.text:00381F80                 push    ebp
.text:00381F81                 mov     ebp, esp
.text:00381F83                 push    ecx
.text:00381F84                 push    ebx
.text:00381F85                 mov     ebx, edx
.text:00381F87                 mov     [ebp+var_4], ecx
.text:00381F8A                 push    esi
.text:00381F8B                 xor     esi, esi        ; Logical Exclusive OR
.text:00381F8D                 cmp     [ebx], esi      ; Compare Two Operands
.text:00381F8F                 jle     short loc_381FD2 ; Jump if Less or Equal (ZF=1 | SF!=OF)
.text:00381F91                 push    edi
.text:00381F92                 xor     edi, edi        ; Logical Exclusive OR
.text:00381F94
.text:00381F94 loc_381F94:                             ; CODE XREF: sub_381F80+4F↓j
.text:00381F94                 mov     ecx, [ebx+4]
.text:00381F97                 mov     eax, [ebp+var_4]
.text:00381F9A                 mov     edx, [ecx+edi]
.text:00381F9D                 cmp     dword ptr [edx+eax-4], 0CCCCCCCCh ; Compare Two Operands
.text:00381FA5                 jnz     short loc_381FB9 ; Jump if Not Zero (ZF=0)
.text:00381FA7                 mov     eax, [ecx+edi+4]
.text:00381FAB                 add     eax, edx        ; Add
.text:00381FAD                 mov     edx, [ebp+var_4]
.text:00381FB0                 cmp     dword ptr [eax+edx], 0CCCCCCCCh ; Compare Two Operands
.text:00381FB7                 jz      short loc_381FC9 ; Jump if Zero (ZF=1)
.text:00381FB9
.text:00381FB9 loc_381FB9:                             ; CODE XREF: sub_381F80+25↑j
.text:00381FB9                 push    dword ptr [ecx+edi+8] ; Source
.text:00381FBD                 mov     eax, [ebp+4]
.text:00381FC0                 push    eax             ; int
.text:00381FC1                 call    sub_38136B      ; Call Procedure
.text:00381FC6                 add     esp, 8          ; Add
.text:00381FC9
.text:00381FC9 loc_381FC9:                             ; CODE XREF: sub_381F80+37↑j
.text:00381FC9                 inc     esi             ; Increment by 1
.text:00381FCA                 add     edi, 0Ch        ; Add
.text:00381FCD                 cmp     esi, [ebx]      ; Compare Two Operands
.text:00381FCF                 jl      short loc_381F94 ; Jump if Less (SF!=OF)
.text:00381FD1                 pop     edi
.text:00381FD2
.text:00381FD2 loc_381FD2:                             ; CODE XREF: sub_381F80+F↑j
.text:00381FD2                 pop     esi
.text:00381FD3                 pop     ebx
.text:00381FD4                 mov     esp, ebp
.text:00381FD6                 pop     ebp
.text:00381FD7                 retn                    ; Return Near from Procedure
.text:00381FD7 sub_381F80      endp
.text:00381FD7
.text:00381FD7 ; ---------------------------------------------------------------------------
.text:00381FD8                 db 18h dup(0CCh)
.text:00381FF0
.text:00381FF0 ; =============== S U B R O U T I N E =======================================
.text:00381FF0
.text:00381FF0
.text:00381FF0 sub_381FF0      proc near               ; CODE XREF: sub_381262↑j
.text:00381FF0                 jnz     short loc_381FF3 ; Jump if Not Zero (ZF=0)
.text:00381FF2                 retn                    ; Return Near from Procedure
.text:00381FF3 ; ---------------------------------------------------------------------------
.text:00381FF3
.text:00381FF3 loc_381FF3:                             ; CODE XREF: sub_381FF0↑j
.text:00381FF3                 push    ebp
.text:00381FF4                 mov     ebp, esp
.text:00381FF6                 sub     esp, 0          ; Integer Subtraction
.text:00381FF9                 push    eax
.text:00381FFA                 push    edx
.text:00381FFB                 push    ebx
.text:00381FFC                 push    esi
.text:00381FFD                 push    edi
.text:00381FFE                 mov     eax, [ebp+4]
.text:00382001                 push    0
.text:00382003                 push    eax
.text:00382004                 call    sub_3810E6      ; Call Procedure
.text:00382009                 add     esp, 8          ; Add
.text:0038200C                 pop     edi
.text:0038200D                 pop     esi
.text:0038200E                 pop     ebx
.text:0038200F                 pop     edx
.text:00382010                 pop     eax
.text:00382011                 mov     esp, ebp
.text:00382013                 pop     ebp
.text:00382014                 retn                    ; Return Near from Procedure
.text:00382014 sub_381FF0      endp
.text:00382014
.text:00382014 ; ---------------------------------------------------------------------------
.text:00382015                 align 10h
.text:00382020
.text:00382020 ; =============== S U B R O U T I N E =======================================
.text:00382020
.text:00382020 ; Attributes: bp-based frame
.text:00382020
.text:00382020 sub_382020      proc near               ; CODE XREF: sub_381343↑j
.text:00382020
.text:00382020 var_8           = dword ptr -8
.text:00382020 var_4           = dword ptr -4
.text:00382020
.text:00382020                 push    ebp
.text:00382021                 mov     ebp, esp
.text:00382023                 sub     esp, 8          ; Integer Subtraction
.text:00382026                 mov     [ebp+var_4], ecx
.text:00382029                 mov     eax, [ebp+var_4]
.text:0038202C                 mov     [ebp+var_8], eax
.text:0038202F                 mov     ecx, [ebp+var_4]
.text:00382032                 movzx   edx, byte ptr [ecx] ; Move with Zero-Extend
.text:00382035                 test    edx, edx        ; Logical Compare
.text:00382037                 jz      short loc_382051 ; Jump if Zero (ZF=1)
.text:00382039                 cmp     dword_38A6C4, 0 ; Compare Two Operands
.text:00382040                 jz      short loc_382051 ; Jump if Zero (ZF=1)
.text:00382042                 call    ds:GetCurrentThreadId ; Indirect Call Near Procedure
.text:00382048                 cmp     dword_38A6C4, eax ; Compare Two Operands
.text:0038204E                 jnz     short loc_382051 ; Jump if Not Zero (ZF=0)
.text:00382050                 nop                     ; No Operation
.text:00382051
.text:00382051 loc_382051:                             ; CODE XREF: sub_382020+17↑j
.text:00382051                                         ; sub_382020+20↑j ...
.text:00382051                 mov     esp, ebp
.text:00382053                 pop     ebp
.text:00382054                 retn                    ; Return Near from Procedure
.text:00382054 sub_382020      endp
.text:00382054
.text:00382054 ; ---------------------------------------------------------------------------
.text:00382055                 db 1Bh dup(0CCh)
.text:00382070 ; [0000000E BYTES: COLLAPSED FUNCTION __security_check_cookie(x). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038207E                 db 12h dup(0CCh)
.text:00382090 ; ---------------------------------------------------------------------------
.text:00382090
.text:00382090 loc_382090:                             ; CODE XREF: .text:00381177↑j
.text:00382090                 mov     eax, offset j__CrtDbgReport
.text:00382095                 retn                    ; Return Near from Procedure
.text:00382095 ; ---------------------------------------------------------------------------
.text:00382096                 align 10h
.text:003820A0
.text:003820A0 ; =============== S U B R O U T I N E =======================================
.text:003820A0
.text:003820A0
.text:003820A0 sub_3820A0      proc near               ; CODE XREF: sub_3810C8↑j
.text:003820A0                 mov     eax, offset j__CrtDbgReportW
.text:003820A5                 retn                    ; Return Near from Procedure
.text:003820A5 sub_3820A0      endp
.text:003820A5
.text:003820A5 ; ---------------------------------------------------------------------------
.text:003820A6                 align 10h
.text:003820B0
.text:003820B0 loc_3820B0:                             ; CODE XREF: .text:loc_38125D↑j
.text:003820B0                 cmp     Str2+13Bh, 0    ; Compare Two Operands
.text:003820B7                 jnz     short locret_3820D8 ; Jump if Not Zero (ZF=0)
.text:003820B9                 push    0
.text:003820BB                 push    1
.text:003820BD                 push    0
.text:003820BF                 push    0
.text:003820C1                 push    0
.text:003820C3                 mov     Str2+13Bh, 1
.text:003820CA                 call    sub_3810C8      ; Call Procedure
.text:003820CF                 push    eax
.text:003820D0                 call    sub_381352      ; Call Procedure
.text:003820D5                 add     esp, 18h        ; Add
.text:003820D8
.text:003820D8 locret_3820D8:                          ; CODE XREF: .text:003820B7↑j
.text:003820D8                 retn                    ; Return Near from Procedure
.text:003820D8 ; ---------------------------------------------------------------------------
.text:003820D9                 db 17h dup(0CCh)
.text:003820F0
.text:003820F0 ; =============== S U B R O U T I N E =======================================
.text:003820F0
.text:003820F0
.text:003820F0 sub_3820F0      proc near               ; CODE XREF: sub_381311↑j
.text:003820F0                 push    1
.text:003820F2                 push    1
.text:003820F4                 push    0
.text:003820F6                 push    0
.text:003820F8                 push    0
.text:003820FA                 call    sub_3810C8      ; Call Procedure
.text:003820FF                 add     esp, 14h        ; Add
.text:00382102                 retn                    ; Return Near from Procedure
.text:00382102 sub_3820F0      endp
.text:00382102
.text:00382102 ; ---------------------------------------------------------------------------
.text:00382103                 align 10h
.text:00382110
.text:00382110 ; =============== S U B R O U T I N E =======================================
.text:00382110
.text:00382110 ; Attributes: bp-based frame
.text:00382110
.text:00382110 sub_382110      proc near               ; DATA XREF: .rdata:00387410↓o
.text:00382110                 push    ebp
.text:00382111                 mov     ebp, esp
.text:00382113                 call    sub_3810AA      ; Call Procedure
.text:00382118                 call    sub_3812FD      ; Call Procedure
.text:0038211D                 call    sub_38100F      ; Call Procedure
.text:00382122                 push    1
.text:00382124                 call    sub_381145      ; Call Procedure
.text:00382129                 add     esp, 4          ; Add
.text:0038212C                 movzx   eax, al         ; Move with Zero-Extend
.text:0038212F                 test    eax, eax        ; Logical Compare
.text:00382131                 jnz     short loc_38213A ; Jump if Not Zero (ZF=0)
.text:00382133                 push    7
.text:00382135                 call    sub_3811EF      ; Call Procedure
.text:0038213A
.text:0038213A loc_38213A:                             ; CODE XREF: sub_382110+21↑j
.text:0038213A                 fnclex                  ; Clear Exceptions (no wait)
.text:0038213C                 call    sub_38100A      ; Call Procedure
.text:00382141                 push    offset Function ; Function
.text:00382146                 call    sub_38120D      ; Call Procedure
.text:0038214B                 add     esp, 4          ; Add
.text:0038214E                 call    sub_381221      ; Call Procedure
.text:00382153                 test    eax, eax        ; Logical Compare
.text:00382155                 jz      short loc_38215E ; Jump if Zero (ZF=1)
.text:00382157                 push    7
.text:00382159                 call    sub_3811EF      ; Call Procedure
.text:0038215E
.text:0038215E loc_38215E:                             ; CODE XREF: sub_382110+45↑j
.text:0038215E                 call    sub_381091      ; Call Procedure
.text:00382163                 call    sub_381226      ; Call Procedure
.text:00382168                 test    eax, eax        ; Logical Compare
.text:0038216A                 jz      short loc_382179 ; Jump if Zero (ZF=1)
.text:0038216C                 push    offset UserMathErrorFunction ; UserMathErrorFunction
.text:00382171                 call    j___setusermatherr ; Call Procedure
.text:00382176                 add     esp, 4          ; Add
.text:00382179
.text:00382179 loc_382179:                             ; CODE XREF: sub_382110+5A↑j
.text:00382179                 call    sub_3813B1      ; Call Procedure
.text:0038217E                 call    sub_38103C      ; Call Procedure
.text:00382183                 call    sub_381348      ; Call Procedure
.text:00382188                 call    sub_381294      ; Call Procedure
.text:0038218D                 push    eax             ; Flag
.text:0038218E                 call    j__configthreadlocale ; Call Procedure
.text:00382193                 add     esp, 4          ; Add
.text:00382196                 call    sub_38130C      ; Call Procedure
.text:0038219B                 movzx   ecx, al         ; Move with Zero-Extend
.text:0038219E                 test    ecx, ecx        ; Logical Compare
.text:003821A0                 jz      short loc_3821A7 ; Jump if Zero (ZF=1)
.text:003821A2                 call    sub_381140      ; Call Procedure
.text:003821A7
.text:003821A7 loc_3821A7:                             ; CODE XREF: sub_382110+90↑j
.text:003821A7                 call    sub_381299      ; Call Procedure
.text:003821AC                 call    sub_381230      ; Call Procedure
.text:003821B1                 test    eax, eax        ; Logical Compare
.text:003821B3                 jz      short loc_3821BC ; Jump if Zero (ZF=1)
.text:003821B5                 push    7
.text:003821B7                 call    sub_3811EF      ; Call Procedure
.text:003821BC
.text:003821BC loc_3821BC:                             ; CODE XREF: sub_382110+A3↑j
.text:003821BC                 xor     eax, eax        ; Logical Exclusive OR
.text:003821BE                 pop     ebp
.text:003821BF                 retn                    ; Return Near from Procedure
.text:003821BF sub_382110      endp ; sp-analysis failed
.text:003821BF
.text:003821BF ; ---------------------------------------------------------------------------
.text:003821C0                 db 30h dup(0CCh)
.text:003821F0
.text:003821F0 ; =============== S U B R O U T I N E =======================================
.text:003821F0
.text:003821F0 ; Attributes: bp-based frame
.text:003821F0
.text:003821F0 sub_3821F0      proc near               ; DATA XREF: .rdata:00387514↓o
.text:003821F0                 push    ebp
.text:003821F1                 mov     ebp, esp
.text:003821F3                 call    sub_381186      ; Call Procedure
.text:003821F8                 xor     eax, eax        ; Logical Exclusive OR
.text:003821FA                 pop     ebp
.text:003821FB                 retn                    ; Return Near from Procedure
.text:003821FB sub_3821F0      endp
.text:003821FB
.text:003821FB ; ---------------------------------------------------------------------------
.text:003821FC                 align 10h
.text:00382200
.text:00382200 ; =============== S U B R O U T I N E =======================================
.text:00382200
.text:00382200 ; Attributes: bp-based frame
.text:00382200
.text:00382200 sub_382200      proc near               ; DATA XREF: .rdata:00387104↓o
.text:00382200                 push    ebp
.text:00382201                 mov     ebp, esp
.text:00382203                 call    sub_38134D      ; Call Procedure
.text:00382208                 call    sub_381159      ; Call Procedure
.text:0038220D                 push    eax             ; NewMode
.text:0038220E                 call    j__set_new_mode ; Call Procedure
.text:00382213                 add     esp, 4          ; Add
.text:00382216                 pop     ebp
.text:00382217                 retn                    ; Return Near from Procedure
.text:00382217 sub_382200      endp
.text:00382217
.text:00382217 ; ---------------------------------------------------------------------------
.text:00382218                 align 10h
.text:00382220 ; [0000000F BYTES: COLLAPSED FUNCTION sub_382220. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038222F                 align 20h
.text:00382240 ; [00000214 BYTES: COLLAPSED FUNCTION sub_382240. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00382454                 db 8Ch dup(0CCh)
.text:003824E0
.text:003824E0 ; =============== S U B R O U T I N E =======================================
.text:003824E0
.text:003824E0 ; Attributes: bp-based frame
.text:003824E0
.text:003824E0 sub_3824E0      proc near               ; CODE XREF: sub_381221↑j
.text:003824E0                 push    ebp
.text:003824E1                 mov     ebp, esp
.text:003824E3                 call    sub_3812B2      ; Call Procedure
.text:003824E8                 push    eax             ; mode
.text:003824E9                 call    j__configure_narrow_argv ; Call Procedure
.text:003824EE                 add     esp, 4          ; Add
.text:003824F1                 pop     ebp
.text:003824F2                 retn                    ; Return Near from Procedure
.text:003824F2 sub_3824E0      endp
.text:003824F2
.text:003824F2 ; ---------------------------------------------------------------------------
.text:003824F3                 align 10h
.text:00382500
.text:00382500 ; =============== S U B R O U T I N E =======================================
.text:00382500
.text:00382500 ; Attributes: bp-based frame
.text:00382500
.text:00382500 sub_382500      proc near               ; CODE XREF: sub_381140↑j
.text:00382500                 push    ebp
.text:00382501                 mov     ebp, esp
.text:00382503                 call    j__initialize_narrow_environment ; Call Procedure
.text:00382508                 pop     ebp
.text:00382509                 retn                    ; Return Near from Procedure
.text:00382509 sub_382500      endp
.text:00382509
.text:00382509 ; ---------------------------------------------------------------------------
.text:0038250A                 align 10h
.text:00382510 ; [0000003A BYTES: COLLAPSED FUNCTION sub_382510. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038254A                 align 20h
.text:00382560
.text:00382560 ; =============== S U B R O U T I N E =======================================
.text:00382560
.text:00382560 ; Attributes: bp-based frame
.text:00382560
.text:00382560 sub_382560      proc near               ; CODE XREF: sub_3810AA↑j
.text:00382560                 push    ebp
.text:00382561                 mov     ebp, esp
.text:00382563                 push    1               ; Type
.text:00382565                 call    j__set_app_type ; Call Procedure
.text:0038256A                 add     esp, 4          ; Add
.text:0038256D                 pop     ebp
.text:0038256E                 retn                    ; Return Near from Procedure
.text:0038256E sub_382560      endp
.text:0038256E
.text:0038256E ; ---------------------------------------------------------------------------
.text:0038256F                 align 20h
.text:00382580
.text:00382580 ; =============== S U B R O U T I N E =======================================
.text:00382580
.text:00382580 ; Attributes: bp-based frame
.text:00382580
.text:00382580 sub_382580      proc near               ; CODE XREF: sub_38100F↑j
.text:00382580
.text:00382580 var_4           = dword ptr -4
.text:00382580
.text:00382580                 push    ebp
.text:00382581                 mov     ebp, esp
.text:00382583                 push    ecx
.text:00382584                 call    sub_38112C      ; Call Procedure
.text:00382589                 mov     [ebp+var_4], eax
.text:0038258C                 call    j___p__commode  ; Call Procedure
.text:00382591                 mov     ecx, [ebp+var_4]
.text:00382594                 mov     [eax], ecx
.text:00382596                 mov     esp, ebp
.text:00382598                 pop     ebp
.text:00382599                 retn                    ; Return Near from Procedure
.text:00382599 sub_382580      endp
.text:00382599
.text:00382599 ; ---------------------------------------------------------------------------
.text:0038259A                 align 10h
.text:003825A0
.text:003825A0 ; =============== S U B R O U T I N E =======================================
.text:003825A0
.text:003825A0 ; Attributes: bp-based frame
.text:003825A0
.text:003825A0 sub_3825A0      proc near               ; CODE XREF: sub_3812FD↑j
.text:003825A0                 push    ebp
.text:003825A1                 mov     ebp, esp
.text:003825A3                 call    sub_3810DC      ; Call Procedure
.text:003825A8                 push    eax             ; Mode
.text:003825A9                 call    j__set_fmode    ; Call Procedure
.text:003825AE                 add     esp, 4          ; Add
.text:003825B1                 pop     ebp
.text:003825B2                 retn                    ; Return Near from Procedure
.text:003825B2 sub_3825A0      endp
.text:003825B2
.text:003825B2 ; ---------------------------------------------------------------------------
.text:003825B3                 align 10h
.text:003825C0 ; [0000000A BYTES: COLLAPSED FUNCTION start_0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003825CA                 align 10h
.text:003825D0
.text:003825D0 ; =============== S U B R O U T I N E =======================================
.text:003825D0
.text:003825D0 ; Attributes: bp-based frame
.text:003825D0
.text:003825D0 sub_3825D0      proc near               ; CODE XREF: sub_3829A0+9A↓p
.text:003825D0
.text:003825D0 Arguments       = dword ptr -1Ch
.text:003825D0 var_18          = dword ptr -18h
.text:003825D0 var_14          = dword ptr -14h
.text:003825D0 var_1           = byte ptr -1
.text:003825D0 arg_0           = dword ptr  8
.text:003825D0
.text:003825D0                 push    ebp
.text:003825D1                 mov     ebp, esp
.text:003825D3                 sub     esp, 1Ch        ; Integer Subtraction
.text:003825D6                 mov     eax, [ebp+arg_0]
.text:003825D9                 mov     [ebp+var_18], eax
.text:003825DC                 lea     eax, [ebp+var_1] ; Load Effective Address
.text:003825DF                 mov     [ebp+var_14], eax
.text:003825E2                 lea     eax, [ebp+Arguments] ; Load Effective Address
.text:003825E5                 push    eax             ; lpArguments
.text:003825E6                 mov     [ebp+var_1], 0
.text:003825EA                 mov     [ebp+Arguments], 1001h
.text:003825F1                 call    sub_382C20      ; Call Procedure
.text:003825F6                 add     esp, 4          ; Add
.text:003825F9                 cmp     [ebp+var_1], 0  ; Compare Two Operands
.text:003825FD                 setnz   al              ; Set Byte if Not Zero (ZF=0)
.text:00382600                 mov     esp, ebp
.text:00382602                 pop     ebp
.text:00382603                 retn                    ; Return Near from Procedure
.text:00382603 sub_3825D0      endp
.text:00382603
.text:00382603 ; ---------------------------------------------------------------------------
.text:00382604                 align 20h
.text:00382620
.text:00382620 ; =============== S U B R O U T I N E =======================================
.text:00382620
.text:00382620 ; Attributes: bp-based frame
.text:00382620
.text:00382620 sub_382620      proc near               ; CODE XREF: sub_3829A0+B6↓p
.text:00382620
.text:00382620 Arguments       = dword ptr -1Ch
.text:00382620 var_18          = dword ptr -18h
.text:00382620 var_14          = dword ptr -14h
.text:00382620 var_10          = dword ptr -10h
.text:00382620 var_C           = dword ptr -0Ch
.text:00382620 var_8           = dword ptr -8
.text:00382620 var_1           = byte ptr -1
.text:00382620 arg_0           = dword ptr  8
.text:00382620 arg_4           = dword ptr  0Ch
.text:00382620 arg_8           = dword ptr  10h
.text:00382620 arg_C           = dword ptr  14h
.text:00382620
.text:00382620                 push    ebp
.text:00382621                 mov     ebp, esp
.text:00382623                 sub     esp, 1Ch        ; Integer Subtraction
.text:00382626                 mov     eax, [ebp+arg_0]
.text:00382629                 mov     [ebp+var_18], eax
.text:0038262C                 mov     eax, [ebp+arg_4]
.text:0038262F                 mov     [ebp+var_14], eax
.text:00382632                 mov     eax, [ebp+arg_8]
.text:00382635                 mov     [ebp+var_10], eax
.text:00382638                 lea     eax, [ebp+var_1] ; Load Effective Address
.text:0038263B                 mov     [ebp+var_C], eax
.text:0038263E                 mov     eax, [ebp+arg_C]
.text:00382641                 mov     [ebp+var_8], eax
.text:00382644                 lea     eax, [ebp+Arguments] ; Load Effective Address
.text:00382647                 push    eax             ; lpArguments
.text:00382648                 mov     [ebp+var_1], 0
.text:0038264C                 mov     [ebp+Arguments], 1002h
.text:00382653                 call    sub_382C20      ; Call Procedure
.text:00382658                 add     esp, 4          ; Add
.text:0038265B                 cmp     [ebp+var_1], 0  ; Compare Two Operands
.text:0038265F                 setnz   al              ; Set Byte if Not Zero (ZF=0)
.text:00382662                 mov     esp, ebp
.text:00382664                 pop     ebp
.text:00382665                 retn                    ; Return Near from Procedure
.text:00382665 sub_382620      endp
.text:00382665
.text:00382665 ; ---------------------------------------------------------------------------
.text:00382666                 align 20h
.text:00382680
.text:00382680 ; =============== S U B R O U T I N E =======================================
.text:00382680
.text:00382680 ; Attributes: bp-based frame
.text:00382680
.text:00382680 sub_382680      proc near               ; CODE XREF: sub_38119F↑j
.text:00382680
.text:00382680 var_144         = dword ptr -144h
.text:00382680 MultiByteStr    = byte ptr -140h
.text:00382680 var_4C          = byte ptr -4Ch
.text:00382680 var_18          = byte ptr -18h
.text:00382680 var_4           = dword ptr -4
.text:00382680 arg_0           = dword ptr  8
.text:00382680 arg_4           = dword ptr  0Ch
.text:00382680 arg_8           = dword ptr  10h
.text:00382680
.text:00382680                 push    ebp
.text:00382681                 mov     ebp, esp
.text:00382683                 sub     esp, 144h       ; Integer Subtraction
.text:00382689                 mov     eax, ___security_cookie
.text:0038268E                 xor     eax, ebp        ; Logical Exclusive OR
.text:00382690                 mov     [ebp+var_4], eax
.text:00382693                 mov     eax, [ebp+arg_0]
.text:00382696                 push    ebx
.text:00382697                 mov     ebx, [ebp+arg_4]
.text:0038269A                 push    edi
.text:0038269B                 mov     edi, dword_38A01C
.text:003826A1                 mov     [ebp+var_144], eax
.text:003826A7                 cmp     edi, 0FFFFFFFFh ; Compare Two Operands
.text:003826AA                 jz      loc_382756      ; Jump if Zero (ZF=1)
.text:003826B0                 test    ebx, ebx        ; Logical Compare
.text:003826B2                 jnz     short loc_3826D5 ; Jump if Not Zero (ZF=0)
.text:003826B4                 push    offset MultiByteStr ; "Stack area around _alloca memory reserv"...
.text:003826B9                 push    4               ; int
.text:003826BB                 push    edi             ; int
.text:003826BC                 push    eax             ; int
.text:003826BD                 call    sub_3829A0      ; Call Procedure
.text:003826C2                 add     esp, 10h        ; Add
.text:003826C5                 pop     edi
.text:003826C6                 pop     ebx
.text:003826C7                 mov     ecx, [ebp+var_4]
.text:003826CA                 xor     ecx, ebp        ; StackCookie
.text:003826CC                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:003826D1                 mov     esp, ebp
.text:003826D3                 pop     ebp
.text:003826D4                 retn                    ; Return Near from Procedure
.text:003826D5 ; ---------------------------------------------------------------------------
.text:003826D5
.text:003826D5 loc_3826D5:                             ; CODE XREF: sub_382680+32↑j
.text:003826D5                 mov     eax, [ebx+0Ch]
.text:003826D8                 push    esi
.text:003826D9                 sub     eax, 24h ; '$'  ; Integer Subtraction
.text:003826DC                 lea     esi, [ebx+20h]  ; Load Effective Address
.text:003826DF                 push    eax
.text:003826E0                 push    esi
.text:003826E1                 lea     eax, [ebp+var_4C] ; Load Effective Address
.text:003826E4                 push    eax
.text:003826E5                 lea     eax, [ebp+var_18] ; Load Effective Address
.text:003826E8                 push    eax
.text:003826E9                 call    sub_3828F0      ; Call Procedure
.text:003826EE                 push    offset asc_388260 ; "\n"
.text:003826F3                 lea     eax, [ebp+var_4C] ; Load Effective Address
.text:003826F6                 push    eax
.text:003826F7                 push    offset asc_388264 ; "> "
.text:003826FC                 lea     eax, [ebp+var_18] ; Load Effective Address
.text:003826FF                 push    eax
.text:00382700                 mov     eax, [ebx+0Ch]
.text:00382703                 push    offset aData    ; "\nData: <"
.text:00382708                 push    [ebp+arg_8]
.text:0038270B                 sub     eax, 24h ; '$'  ; Integer Subtraction
.text:0038270E                 push    offset aAllocationNumb ; "\nAllocation number within this functio"...
.text:00382713                 push    eax
.text:00382714                 push    offset aSize    ; "\nSize: "
.text:00382719                 push    esi
.text:0038271A                 push    offset aAddress0x ; "\nAddress: 0x"
.text:0038271F                 push    offset aStackAreaAroun_0 ; "Stack area around _alloca memory reserv"...
.text:00382724                 push    offset aSSPSZdSDSSSSS ; "%s%s%p%s%zd%s%d%s%s%s%s%s"
.text:00382729                 lea     eax, [ebp+MultiByteStr] ; Load Effective Address
.text:0038272F                 push    0F4h            ; BufferCount
.text:00382734                 push    eax             ; Buffer
.text:00382735                 call    sub_3812EE      ; Call Procedure
.text:0038273A                 add     esp, 4Ch        ; Add
.text:0038273D                 lea     eax, [ebp+MultiByteStr] ; Load Effective Address
.text:00382743                 push    eax             ; lpMultiByteStr
.text:00382744                 push    4               ; int
.text:00382746                 push    edi             ; int
.text:00382747                 push    [ebp+var_144]   ; int
.text:0038274D                 call    sub_3829A0      ; Call Procedure
.text:00382752                 add     esp, 10h        ; Add
.text:00382755                 pop     esi
.text:00382756
.text:00382756 loc_382756:                             ; CODE XREF: sub_382680+2A↑j
.text:00382756                 mov     ecx, [ebp+var_4]
.text:00382759                 pop     edi
.text:0038275A                 xor     ecx, ebp        ; StackCookie
.text:0038275C                 pop     ebx
.text:0038275D                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00382762                 mov     esp, ebp
.text:00382764                 pop     ebp
.text:00382765                 retn                    ; Return Near from Procedure
.text:00382765 sub_382680      endp
.text:00382765
.text:00382765 ; ---------------------------------------------------------------------------
.text:00382766                 db 3Ah dup(0CCh)
.text:003827A0
.text:003827A0 ; =============== S U B R O U T I N E =======================================
.text:003827A0
.text:003827A0 ; Attributes: bp-based frame
.text:003827A0
.text:003827A0 sub_3827A0      proc near               ; CODE XREF: sub_3810E6↑j
.text:003827A0
.text:003827A0 arg_0           = dword ptr  8
.text:003827A0 arg_4           = dword ptr  0Ch
.text:003827A0
.text:003827A0                 push    ebp
.text:003827A1                 mov     ebp, esp
.text:003827A3                 mov     eax, [ebp+arg_4]
.text:003827A6                 cmp     eax, 4          ; Compare Two Operands
.text:003827A9                 ja      short loc_3827CE ; Jump if Above (CF=0 & ZF=0)
.text:003827AB                 mov     ecx, dword_38A00C[eax*4]
.text:003827B2                 mov     edx, ds:lpMultiByteStr[eax*4]
.text:003827B9                 cmp     ecx, 0FFFFFFFFh ; Compare Two Operands
.text:003827BC                 jz      short loc_3827EC ; Jump if Zero (ZF=1)
.text:003827BE                 push    edx             ; lpMultiByteStr
.text:003827BF                 push    eax             ; int
.text:003827C0                 push    ecx             ; int
.text:003827C1                 push    [ebp+arg_0]     ; int
.text:003827C4                 call    sub_3829A0      ; Call Procedure
.text:003827C9                 add     esp, 10h        ; Add
.text:003827CC                 pop     ebp
.text:003827CD                 retn                    ; Return Near from Procedure
.text:003827CE ; ---------------------------------------------------------------------------
.text:003827CE
.text:003827CE loc_3827CE:                             ; CODE XREF: sub_3827A0+9↑j
.text:003827CE                 mov     edx, ds:off_387CD4 ; "Unknown Runtime Check Error\r\n"
.text:003827D4                 mov     eax, 5
.text:003827D9                 push    edx             ; lpMultiByteStr
.text:003827DA                 push    eax             ; int
.text:003827DB                 mov     ecx, 1
.text:003827E0                 push    ecx             ; int
.text:003827E1                 push    [ebp+arg_0]     ; int
.text:003827E4                 call    sub_3829A0      ; Call Procedure
.text:003827E9                 add     esp, 10h        ; Add
.text:003827EC
.text:003827EC loc_3827EC:                             ; CODE XREF: sub_3827A0+1C↑j
.text:003827EC                 pop     ebp
.text:003827ED                 retn                    ; Return Near from Procedure
.text:003827ED sub_3827A0      endp
.text:003827ED
.text:003827ED ; ---------------------------------------------------------------------------
.text:003827EE                 db 22h dup(0CCh)
.text:00382810
.text:00382810 ; =============== S U B R O U T I N E =======================================
.text:00382810
.text:00382810 ; Attributes: bp-based frame
.text:00382810
.text:00382810 ; int __cdecl sub_382810(int, char *Source)
.text:00382810 sub_382810      proc near               ; CODE XREF: sub_38136B↑j
.text:00382810
.text:00382810 Destination     = byte ptr -404h
.text:00382810 var_4           = dword ptr -4
.text:00382810 arg_0           = dword ptr  8
.text:00382810 Source          = dword ptr  0Ch
.text:00382810
.text:00382810                 push    ebp
.text:00382811                 mov     ebp, esp
.text:00382813                 sub     esp, 404h       ; Integer Subtraction
.text:00382819                 mov     eax, ___security_cookie
.text:0038281E                 xor     eax, ebp        ; Logical Exclusive OR
.text:00382820                 mov     [ebp+var_4], eax
.text:00382823                 push    ebx
.text:00382824                 mov     ebx, [ebp+arg_0]
.text:00382827                 push    esi
.text:00382828                 mov     esi, [ebp+Source]
.text:0038282B                 push    edi
.text:0038282C                 mov     edi, dword_38A014
.text:00382832                 cmp     edi, 0FFFFFFFFh ; Compare Two Operands
.text:00382835                 jz      short loc_3828AA ; Jump if Zero (ZF=1)
.text:00382837                 cmp     byte ptr [esi], 0 ; Compare Two Operands
.text:0038283A                 jz      short loc_382898 ; Jump if Zero (ZF=1)
.text:0038283C                 push    esi
.text:0038283D                 call    sub_382980      ; Call Procedure
.text:00382842                 add     eax, 2Dh ; '-'  ; Add
.text:00382845                 add     esp, 4          ; Add
.text:00382848                 cmp     eax, 400h       ; Compare Two Operands
.text:0038284D                 ja      short loc_382898 ; Jump if Above (CF=0 & ZF=0)
.text:0038284F                 push    offset Source   ; "Stack around the variable '"
.text:00382854                 lea     eax, [ebp+Destination] ; Load Effective Address
.text:0038285A                 push    400h            ; SizeInBytes
.text:0038285F                 push    eax             ; Destination
.text:00382860                 call    j_strcpy_s      ; Call Procedure
.text:00382865                 push    esi             ; Source
.text:00382866                 lea     eax, [ebp+Destination] ; Load Effective Address
.text:0038286C                 push    400h            ; SizeInBytes
.text:00382871                 push    eax             ; Destination
.text:00382872                 call    j_strcat_s      ; Call Procedure
.text:00382877                 push    offset aWasCorrupted ; "' was corrupted."
.text:0038287C                 lea     eax, [ebp+Destination] ; Load Effective Address
.text:00382882                 push    400h            ; SizeInBytes
.text:00382887                 push    eax             ; Destination
.text:00382888                 call    j_strcat_s      ; Call Procedure
.text:0038288D                 add     esp, 24h        ; Add
.text:00382890                 lea     eax, [ebp+Destination] ; Load Effective Address
.text:00382896                 jmp     short loc_38289D ; Jump
.text:00382898 ; ---------------------------------------------------------------------------
.text:00382898
.text:00382898 loc_382898:                             ; CODE XREF: sub_382810+2A↑j
.text:00382898                                         ; sub_382810+3D↑j
.text:00382898                 mov     eax, offset aStackCorrupted ; "Stack corrupted near unknown variable"
.text:0038289D
.text:0038289D loc_38289D:                             ; CODE XREF: sub_382810+86↑j
.text:0038289D                 push    eax             ; lpMultiByteStr
.text:0038289E                 push    2               ; int
.text:003828A0                 push    edi             ; int
.text:003828A1                 push    ebx             ; int
.text:003828A2                 call    sub_3829A0      ; Call Procedure
.text:003828A7                 add     esp, 10h        ; Add
.text:003828AA
.text:003828AA loc_3828AA:                             ; CODE XREF: sub_382810+25↑j
.text:003828AA                 mov     ecx, [ebp+var_4]
.text:003828AD                 pop     edi
.text:003828AE                 pop     esi
.text:003828AF                 xor     ecx, ebp        ; StackCookie
.text:003828B1                 pop     ebx
.text:003828B2                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:003828B7                 mov     esp, ebp
.text:003828B9                 pop     ebp
.text:003828BA                 retn                    ; Return Near from Procedure
.text:003828BA sub_382810      endp
.text:003828BA
.text:003828BA ; ---------------------------------------------------------------------------
.text:003828BB                 db 35h dup(0CCh)
.text:003828F0
.text:003828F0 ; =============== S U B R O U T I N E =======================================
.text:003828F0
.text:003828F0 ; Attributes: bp-based frame
.text:003828F0
.text:003828F0 sub_3828F0      proc near               ; CODE XREF: sub_382680+69↑p
.text:003828F0
.text:003828F0 var_4           = dword ptr -4
.text:003828F0 arg_0           = dword ptr  8
.text:003828F0 arg_4           = dword ptr  0Ch
.text:003828F0 arg_8           = dword ptr  10h
.text:003828F0 arg_C           = dword ptr  14h
.text:003828F0
.text:003828F0                 push    ebp
.text:003828F1                 mov     ebp, esp
.text:003828F3                 push    ecx
.text:003828F4                 push    ebx
.text:003828F5                 mov     ebx, [ebp+arg_8]
.text:003828F8                 xor     edx, edx        ; Logical Exclusive OR
.text:003828FA                 push    esi
.text:003828FB                 mov     esi, [ebp+arg_0]
.text:003828FE                 push    edi
.text:003828FF                 xor     edi, edi        ; Logical Exclusive OR
.text:00382901                 sub     ebx, esi        ; Integer Subtraction
.text:00382903                 mov     [ebp+arg_8], ebx
.text:00382906
.text:00382906 loc_382906:                             ; CODE XREF: sub_3828F0+59↓j
.text:00382906                 mov     eax, [ebp+arg_C]
.text:00382909                 mov     [ebp+var_4], edx
.text:0038290C                 cmp     eax, 10h        ; Compare Two Operands
.text:0038290F                 jb      short loc_382916 ; Jump if Below (CF=1)
.text:00382911                 mov     eax, 10h
.text:00382916
.text:00382916 loc_382916:                             ; CODE XREF: sub_3828F0+1F↑j
.text:00382916                 mov     ecx, [ebp+arg_4]
.text:00382919                 add     ecx, edi        ; Add
.text:0038291B                 cmp     edx, eax        ; Compare Two Operands
.text:0038291D                 jnb     short loc_38294B ; Jump if Not Below (CF=0)
.text:0038291F                 mov     bl, [ebx+esi]
.text:00382922                 movzx   eax, bl         ; Move with Zero-Extend
.text:00382925                 push    eax             ; ArgList
.text:00382926                 mov     eax, 31h ; '1'
.text:0038292B                 push    offset a2x      ; "%.2X "
.text:00382930                 sub     eax, edi        ; Integer Subtraction
.text:00382932                 push    eax             ; BufferCount
.text:00382933                 push    ecx             ; Buffer
.text:00382934                 call    sub_3812EE      ; Call Procedure
.text:00382939                 mov     edx, [ebp+var_4]
.text:0038293C                 add     esp, 10h        ; Add
.text:0038293F                 mov     [esi], bl
.text:00382941                 inc     edx             ; Increment by 1
.text:00382942                 mov     ebx, [ebp+arg_8]
.text:00382945                 inc     esi             ; Increment by 1
.text:00382946                 add     edi, 3          ; Add
.text:00382949                 jmp     short loc_382906 ; Jump
.text:0038294B ; ---------------------------------------------------------------------------
.text:0038294B
.text:0038294B loc_38294B:                             ; CODE XREF: sub_3828F0+2D↑j
.text:0038294B                 pop     edi
.text:0038294C                 mov     byte ptr [esi], 0
.text:0038294F                 pop     esi
.text:00382950                 mov     byte ptr [ecx], 0
.text:00382953                 pop     ebx
.text:00382954                 mov     esp, ebp
.text:00382956                 pop     ebp
.text:00382957                 retn                    ; Return Near from Procedure
.text:00382957 sub_3828F0      endp
.text:00382957
.text:00382957 ; ---------------------------------------------------------------------------
.text:00382958                 align 40h
.text:00382980
.text:00382980 ; =============== S U B R O U T I N E =======================================
.text:00382980
.text:00382980 ; Attributes: bp-based frame
.text:00382980
.text:00382980 sub_382980      proc near               ; CODE XREF: sub_382810+2D↑p
.text:00382980                                         ; .text:00382CE8↓p
.text:00382980
.text:00382980 arg_0           = dword ptr  8
.text:00382980
.text:00382980                 push    ebp
.text:00382981                 mov     ebp, esp
.text:00382983                 mov     edx, [ebp+arg_0]
.text:00382986                 mov     eax, edx
.text:00382988
.text:00382988 loc_382988:                             ; CODE XREF: sub_382980+D↓j
.text:00382988                 mov     cl, [eax]
.text:0038298A                 inc     eax             ; Increment by 1
.text:0038298B                 test    cl, cl          ; Logical Compare
.text:0038298D                 jnz     short loc_382988 ; Jump if Not Zero (ZF=0)
.text:0038298F                 sub     eax, edx        ; Integer Subtraction
.text:00382991                 dec     eax             ; Decrement by 1
.text:00382992                 pop     ebp
.text:00382993                 retn                    ; Return Near from Procedure
.text:00382993 sub_382980      endp
.text:00382993
.text:00382993 ; ---------------------------------------------------------------------------
.text:00382994                 align 10h
.text:003829A0
.text:003829A0 ; =============== S U B R O U T I N E =======================================
.text:003829A0
.text:003829A0 ; Attributes: bp-based frame
.text:003829A0
.text:003829A0 ; int __cdecl sub_3829A0(int, int, int, LPCCH lpMultiByteStr)
.text:003829A0 sub_3829A0      proc near               ; CODE XREF: sub_382680+3D↑p
.text:003829A0                                         ; sub_382680+CD↑p ...
.text:003829A0
.text:003829A0 var_E3C         = dword ptr -0E3Ch
.text:003829A0 var_E38         = dword ptr -0E38h
.text:003829A0 var_E34         = dword ptr -0E34h
.text:003829A0 var_E30         = dword ptr -0E30h
.text:003829A0 WideCharStr     = word ptr -0E2Ch
.text:003829A0 var_A2C         = byte ptr -0A2Ch
.text:003829A0 MultiByteStr    = byte ptr -720h
.text:003829A0 var_414         = word ptr -414h
.text:003829A0 var_20C         = word ptr -20Ch
.text:003829A0 var_4           = dword ptr -4
.text:003829A0 arg_0           = dword ptr  8
.text:003829A0 arg_4           = dword ptr  0Ch
.text:003829A0 arg_8           = dword ptr  10h
.text:003829A0 lpMultiByteStr  = dword ptr  14h
.text:003829A0
.text:003829A0                 push    ebp
.text:003829A1                 mov     ebp, esp
.text:003829A3                 sub     esp, 0E3Ch      ; Integer Subtraction
.text:003829A9                 mov     eax, ___security_cookie
.text:003829AE                 xor     eax, ebp        ; Logical Exclusive OR
.text:003829B0                 mov     [ebp+var_4], eax
.text:003829B3                 mov     eax, [ebp+arg_8]
.text:003829B6                 push    ebx
.text:003829B7                 mov     ebx, [ebp+lpMultiByteStr]
.text:003829BA                 push    esi
.text:003829BB                 mov     esi, [ebp+arg_0]
.text:003829BE                 push    edi
.text:003829BF                 push    esi
.text:003829C0                 mov     [ebp+var_E30], eax
.text:003829C6                 mov     [ebp+var_E3C], ebx
.text:003829CC                 mov     [ebp+var_E34], 0
.text:003829D6                 call    sub_3813A7      ; Call Procedure
.text:003829DB                 mov     edi, eax
.text:003829DD                 add     esp, 4          ; Add
.text:003829E0                 test    edi, edi        ; Logical Compare
.text:003829E2                 jnz     short loc_3829F3 ; Jump if Not Zero (ZF=0)
.text:003829E4                 push    esi
.text:003829E5                 call    sub_381087      ; Call Procedure
.text:003829EA                 add     esp, 4          ; Add
.text:003829ED                 mov     [ebp+var_E34], eax
.text:003829F3
.text:003829F3 loc_3829F3:                             ; CODE XREF: sub_3829A0+42↑j
.text:003829F3                 push    0               ; cchWideChar
.text:003829F5                 push    0               ; lpWideCharStr
.text:003829F7                 push    0FFFFFFFFh      ; cbMultiByte
.text:003829F9                 push    ebx             ; lpMultiByteStr
.text:003829FA                 push    0               ; dwFlags
.text:003829FC                 push    0FDE9h          ; CodePage
.text:00382A01                 call    ds:MultiByteToWideChar ; Indirect Call Near Procedure
.text:00382A07                 cmp     eax, 200h       ; Compare Two Operands
.text:00382A0C                 jnb     short loc_382A30 ; Jump if Not Below (CF=0)
.text:00382A0E                 push    eax             ; cchWideChar
.text:00382A0F                 lea     eax, [ebp+WideCharStr] ; Load Effective Address
.text:00382A15                 push    eax             ; lpWideCharStr
.text:00382A16                 push    0FFFFFFFFh      ; cbMultiByte
.text:00382A18                 push    ebx             ; lpMultiByteStr
.text:00382A19                 push    0               ; dwFlags
.text:00382A1B                 push    0FDE9h          ; CodePage
.text:00382A20                 call    ds:MultiByteToWideChar ; Indirect Call Near Procedure
.text:00382A26                 lea     ebx, [ebp+WideCharStr] ; Load Effective Address
.text:00382A2C                 test    eax, eax        ; Logical Compare
.text:00382A2E                 jnz     short loc_382A35 ; Jump if Not Zero (ZF=0)
.text:00382A30
.text:00382A30 loc_382A30:                             ; CODE XREF: sub_3829A0+6C↑j
.text:00382A30                 mov     ebx, offset aRuntimeCheckEr ; "Runtime Check Error.\r\n Unable to disp"...
.text:00382A35
.text:00382A35 loc_382A35:                             ; CODE XREF: sub_3829A0+8E↑j
.text:00382A35                 push    1002h
.text:00382A3A                 call    sub_3825D0      ; Call Procedure
.text:00382A3F                 add     esp, 4          ; Add
.text:00382A42                 test    al, al          ; Logical Compare
.text:00382A44                 jz      short loc_382A68 ; Jump if Zero (ZF=1)
.text:00382A46                 mov     eax, [ebp+var_E30]
.text:00382A4C                 push    ebx
.text:00382A4D                 push    esi
.text:00382A4E                 push    ds:dword_387CD8[eax*4]
.text:00382A55                 push    eax
.text:00382A56                 call    sub_382620      ; Call Procedure
.text:00382A5B                 add     esp, 10h        ; Add
.text:00382A5E                 test    al, al          ; Logical Compare
.text:00382A60                 jnz     loc_382B8D      ; Jump if Not Zero (ZF=0)
.text:00382A66                 jmp     short loc_382A6A ; Jump
.text:00382A68 ; ---------------------------------------------------------------------------
.text:00382A68
.text:00382A68 loc_382A68:                             ; CODE XREF: sub_3829A0+A4↑j
.text:00382A68                 mov     al, 1
.text:00382A6A
.text:00382A6A loc_382A6A:                             ; CODE XREF: sub_3829A0+C6↑j
.text:00382A6A                 cmp     [ebp+var_E34], 0 ; Compare Two Operands
.text:00382A71                 jnz     short loc_382A7B ; Jump if Not Zero (ZF=0)
.text:00382A73                 test    edi, edi        ; Logical Compare
.text:00382A75                 jz      loc_382B8C      ; Jump if Zero (ZF=1)
.text:00382A7B
.text:00382A7B loc_382A7B:                             ; CODE XREF: sub_3829A0+D1↑j
.text:00382A7B                 test    al, al          ; Logical Compare
.text:00382A7D                 jz      short loc_382A8D ; Jump if Zero (ZF=1)
.text:00382A7F                 call    ds:IsDebuggerPresent ; Indirect Call Near Procedure
.text:00382A85                 test    eax, eax        ; Logical Compare
.text:00382A87                 jnz     loc_382B8C      ; Jump if Not Zero (ZF=0)
.text:00382A8D
.text:00382A8D loc_382A8D:                             ; CODE XREF: sub_3829A0+DD↑j
.text:00382A8D                 push    104h
.text:00382A92                 lea     eax, [ebp+var_414] ; Load Effective Address
.text:00382A98                 push    eax
.text:00382A99                 lea     eax, [ebp+var_E38] ; Load Effective Address
.text:00382A9F                 push    eax
.text:00382AA0                 push    104h
.text:00382AA5                 lea     eax, [ebp+var_20C] ; Load Effective Address
.text:00382AAB                 push    eax
.text:00382AAC                 lea     eax, [esi-5]    ; Load Effective Address
.text:00382AAF                 push    eax
.text:00382AB0                 call    sub_38107D      ; Call Procedure
.text:00382AB5                 add     esp, 18h        ; Add
.text:00382AB8                 test    edi, edi        ; Logical Compare
.text:00382ABA                 jz      short loc_382AEE ; Jump if Zero (ZF=1)
.text:00382ABC                 push    ebx
.text:00382ABD                 push    [ebp+var_E30]
.text:00382AC3                 lea     eax, [ebp+var_414] ; Load Effective Address
.text:00382AC9                 mov     ecx, edi
.text:00382ACB                 push    offset aRunTimeCheckFa ; "Run-Time Check Failure #%d - %s"
.text:00382AD0                 push    eax
.text:00382AD1                 push    [ebp+var_E38]
.text:00382AD7                 lea     eax, [ebp+var_20C] ; Load Effective Address
.text:00382ADD                 push    eax
.text:00382ADE                 push    [ebp+arg_4]
.text:00382AE1                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00382AE7                 call    edi             ; Indirect Call Near Procedure
.text:00382AE9                 jmp     loc_382B84      ; Jump
.text:00382AEE ; ---------------------------------------------------------------------------
.text:00382AEE
.text:00382AEE loc_382AEE:                             ; CODE XREF: sub_3829A0+11A↑j
.text:00382AEE                 push    0               ; lpUsedDefaultChar
.text:00382AF0                 push    0               ; lpDefaultChar
.text:00382AF2                 push    30Ah            ; cbMultiByte
.text:00382AF7                 lea     eax, [ebp+MultiByteStr] ; Load Effective Address
.text:00382AFD                 mov     esi, offset aUnknownFilenam ; "Unknown Filename"
.text:00382B02                 push    eax             ; lpMultiByteStr
.text:00382B03                 push    0FFFFFFFFh      ; cchWideChar
.text:00382B05                 lea     eax, [ebp+var_20C] ; Load Effective Address
.text:00382B0B                 push    eax             ; lpWideCharStr
.text:00382B0C                 push    0               ; dwFlags
.text:00382B0E                 push    0FDE9h          ; CodePage
.text:00382B13                 call    ds:WideCharToMultiByte ; Indirect Call Near Procedure
.text:00382B19                 test    eax, eax        ; Logical Compare
.text:00382B1B                 jz      short loc_382B23 ; Jump if Zero (ZF=1)
.text:00382B1D                 lea     esi, [ebp+MultiByteStr] ; Load Effective Address
.text:00382B23
.text:00382B23 loc_382B23:                             ; CODE XREF: sub_3829A0+17B↑j
.text:00382B23                 push    0               ; lpUsedDefaultChar
.text:00382B25                 push    0               ; lpDefaultChar
.text:00382B27                 push    30Ah            ; cbMultiByte
.text:00382B2C                 lea     eax, [ebp+var_A2C] ; Load Effective Address
.text:00382B32                 mov     edi, offset aUnknownModuleN ; "Unknown Module Name"
.text:00382B37                 push    eax             ; lpMultiByteStr
.text:00382B38                 push    0FFFFFFFFh      ; cchWideChar
.text:00382B3A                 lea     eax, [ebp+var_414] ; Load Effective Address
.text:00382B40                 push    eax             ; lpWideCharStr
.text:00382B41                 push    0               ; dwFlags
.text:00382B43                 push    0FDE9h          ; CodePage
.text:00382B48                 call    ds:WideCharToMultiByte ; Indirect Call Near Procedure
.text:00382B4E                 test    eax, eax        ; Logical Compare
.text:00382B50                 jz      short loc_382B58 ; Jump if Zero (ZF=1)
.text:00382B52                 lea     edi, [ebp+var_A2C] ; Load Effective Address
.text:00382B58
.text:00382B58 loc_382B58:                             ; CODE XREF: sub_3829A0+1B0↑j
.text:00382B58                 push    [ebp+var_E3C]
.text:00382B5E                 mov     ebx, [ebp+var_E34]
.text:00382B64                 mov     ecx, ebx
.text:00382B66                 push    [ebp+var_E30]
.text:00382B6C                 push    offset aRunTimeCheckFa_0 ; "Run-Time Check Failure #%d - %s"
.text:00382B71                 push    edi
.text:00382B72                 push    [ebp+var_E38]
.text:00382B78                 push    esi
.text:00382B79                 push    [ebp+arg_4]
.text:00382B7C                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00382B82                 call    ebx             ; Indirect Call Near Procedure
.text:00382B84
.text:00382B84 loc_382B84:                             ; CODE XREF: sub_3829A0+149↑j
.text:00382B84                 add     esp, 1Ch        ; Add
.text:00382B87                 cmp     eax, 1          ; Compare Two Operands
.text:00382B8A                 jnz     short loc_382B8D ; Jump if Not Zero (ZF=0)
.text:00382B8C
.text:00382B8C loc_382B8C:                             ; CODE XREF: sub_3829A0+D5↑j
.text:00382B8C                                         ; sub_3829A0+E7↑j
.text:00382B8C                 int     3               ; Trap to Debugger
.text:00382B8D
.text:00382B8D loc_382B8D:                             ; CODE XREF: sub_3829A0+C0↑j
.text:00382B8D                                         ; sub_3829A0+1EA↑j
.text:00382B8D                 mov     ecx, [ebp+var_4]
.text:00382B90                 pop     edi
.text:00382B91                 pop     esi
.text:00382B92                 xor     ecx, ebp        ; StackCookie
.text:00382B94                 pop     ebx
.text:00382B95                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00382B9A                 mov     esp, ebp
.text:00382B9C                 pop     ebp
.text:00382B9D                 retn                    ; Return Near from Procedure
.text:00382B9D sub_3829A0      endp
.text:00382B9D
.text:00382B9D ; ---------------------------------------------------------------------------
.text:00382B9E                 db 82h dup(0CCh)
.text:00382C20
.text:00382C20 ; =============== S U B R O U T I N E =======================================
.text:00382C20
.text:00382C20 ; Attributes: bp-based frame
.text:00382C20
.text:00382C20 ; int __cdecl sub_382C20(ULONG_PTR *lpArguments)
.text:00382C20 sub_382C20      proc near               ; CODE XREF: sub_3825D0+21↑p
.text:00382C20                                         ; sub_382620+33↑p
.text:00382C20
.text:00382C20 ms_exc          = CPPEH_RECORD ptr -18h
.text:00382C20 lpArguments     = dword ptr  8
.text:00382C20
.text:00382C20                 push    ebp
.text:00382C21                 mov     ebp, esp
.text:00382C23                 push    0FFFFFFFEh
.text:00382C25                 push    offset stru_3893E0
.text:00382C2A                 push    offset SEH_412C20
.text:00382C2F                 mov     eax, large fs:0
.text:00382C35                 push    eax
.text:00382C36                 sub     esp, 8          ; Integer Subtraction
.text:00382C39                 push    ebx
.text:00382C3A                 push    esi
.text:00382C3B                 push    edi
.text:00382C3C                 mov     eax, ___security_cookie
.text:00382C41                 xor     [ebp+ms_exc.registration.ScopeTable], eax ; Logical Exclusive OR
.text:00382C44                 xor     eax, ebp        ; Logical Exclusive OR
.text:00382C46                 push    eax
.text:00382C47                 lea     eax, [ebp+ms_exc.registration] ; Load Effective Address
.text:00382C4A                 mov     large fs:0, eax
.text:00382C50                 mov     [ebp+ms_exc.old_esp], esp
.text:00382C53                 mov     [ebp+ms_exc.registration.TryLevel], 0
.text:00382C5A                 push    [ebp+lpArguments] ; lpArguments
.text:00382C5D                 push    6               ; nNumberOfArguments
.text:00382C5F                 push    0               ; dwExceptionFlags
.text:00382C61                 push    406D1388h       ; dwExceptionCode
.text:00382C66                 call    ds:RaiseException ; Indirect Call Near Procedure
.text:00382C6C                 jmp     short loc_382C84 ; Jump
.text:00382C6E ; ---------------------------------------------------------------------------
.text:00382C6E
.text:00382C6E loc_382C6E:                             ; DATA XREF: .rdata:stru_3893E0↓o
.text:00382C6E                 mov     eax, [ebp+ms_exc.exc_ptr]
.text:00382C71                 mov     eax, [eax]
.text:00382C73                 xor     ecx, ecx        ; Logical Exclusive OR
.text:00382C75                 cmp     dword ptr [eax], 406D1388h ; Compare Two Operands
.text:00382C7B                 setz    cl              ; Set Byte if Zero (ZF=1)
.text:00382C7E                 mov     eax, ecx
.text:00382C80                 retn                    ; Return Near from Procedure
.text:00382C81 ; ---------------------------------------------------------------------------
.text:00382C81
.text:00382C81 loc_382C81:                             ; DATA XREF: .rdata:stru_3893E0↓o
.text:00382C81                 mov     esp, [ebp+ms_exc.old_esp]
.text:00382C84
.text:00382C84 loc_382C84:                             ; CODE XREF: sub_382C20+4C↑j
.text:00382C84                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00382C8B                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:00382C8E                 mov     large fs:0, ecx
.text:00382C95                 pop     ecx
.text:00382C96                 pop     edi
.text:00382C97                 pop     esi
.text:00382C98                 pop     ebx
.text:00382C99                 mov     esp, ebp
.text:00382C9B                 pop     ebp
.text:00382C9C                 retn                    ; Return Near from Procedure
.text:00382C9C sub_382C20      endp
.text:00382C9C
.text:00382C9C ; ---------------------------------------------------------------------------
.text:00382C9D                 align 40h
.text:00382CC0
.text:00382CC0 loc_382CC0:                             ; CODE XREF: .text:00381325↑j
.text:00382CC0                 push    ebp
.text:00382CC1                 mov     ebp, esp
.text:00382CC3                 sub     esp, 404h       ; Integer Subtraction
.text:00382CC9                 mov     eax, ___security_cookie
.text:00382CCE                 xor     eax, ebp        ; Logical Exclusive OR
.text:00382CD0                 mov     [ebp-4], eax
.text:00382CD3                 push    esi
.text:00382CD4                 mov     esi, [ebp+8]
.text:00382CD7                 push    edi
.text:00382CD8                 mov     edi, dword_38A018
.text:00382CDE                 cmp     edi, 0FFFFFFFFh ; Compare Two Operands
.text:00382CE1                 jz      short loc_382D58 ; Jump if Zero (ZF=1)
.text:00382CE3                 test    esi, esi        ; Logical Compare
.text:00382CE5                 jz      short loc_382D43 ; Jump if Zero (ZF=1)
.text:00382CE7                 push    esi
.text:00382CE8                 call    sub_382980      ; Call Procedure
.text:00382CED                 add     eax, 3Ah ; ':'  ; Add
.text:00382CF0                 add     esp, 4          ; Add
.text:00382CF3                 cmp     eax, 400h       ; Compare Two Operands
.text:00382CF8                 ja      short loc_382D43 ; Jump if Above (CF=0 & ZF=0)
.text:00382CFA                 push    offset aTheVariable ; "The variable '"
.text:00382CFF                 lea     eax, [ebp-404h] ; Load Effective Address
.text:00382D05                 push    400h
.text:00382D0A                 push    eax
.text:00382D0B                 call    j_strcpy_s      ; Call Procedure
.text:00382D10                 push    esi
.text:00382D11                 lea     eax, [ebp-404h] ; Load Effective Address
.text:00382D17                 push    400h
.text:00382D1C                 push    eax
.text:00382D1D                 call    j_strcat_s      ; Call Procedure
.text:00382D22                 push    offset aIsBeingUsedWit ; "' is being used without being initializ"...
.text:00382D27                 lea     eax, [ebp-404h] ; Load Effective Address
.text:00382D2D                 push    400h
.text:00382D32                 push    eax
.text:00382D33                 call    j_strcat_s      ; Call Procedure
.text:00382D38                 add     esp, 24h        ; Add
.text:00382D3B                 lea     eax, [ebp-404h] ; Load Effective Address
.text:00382D41                 jmp     short loc_382D48 ; Jump
.text:00382D43 ; ---------------------------------------------------------------------------
.text:00382D43
.text:00382D43 loc_382D43:                             ; CODE XREF: .text:00382CE5↑j
.text:00382D43                                         ; .text:00382CF8↑j
.text:00382D43                 mov     eax, offset aAVariableIsBei ; "A variable is being used without being "...
.text:00382D48
.text:00382D48 loc_382D48:                             ; CODE XREF: .text:00382D41↑j
.text:00382D48                 push    eax
.text:00382D49                 mov     eax, [ebp+4]
.text:00382D4C                 push    3
.text:00382D4E                 push    edi
.text:00382D4F                 push    eax
.text:00382D50                 call    sub_3829A0      ; Call Procedure
.text:00382D55                 add     esp, 10h        ; Add
.text:00382D58
.text:00382D58 loc_382D58:                             ; CODE XREF: .text:00382CE1↑j
.text:00382D58                 mov     ecx, [ebp-4]
.text:00382D5B                 pop     edi
.text:00382D5C                 xor     ecx, ebp        ; Logical Exclusive OR
.text:00382D5E                 pop     esi
.text:00382D5F                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00382D64                 mov     esp, ebp
.text:00382D66                 pop     ebp
.text:00382D67                 retn                    ; Return Near from Procedure
.text:00382D67 ; ---------------------------------------------------------------------------
.text:00382D68                 db 38h dup(0CCh)
.text:00382DA0
.text:00382DA0 ; =============== S U B R O U T I N E =======================================
.text:00382DA0
.text:00382DA0 ; Attributes: bp-based frame
.text:00382DA0
.text:00382DA0 ; int __cdecl sub_382DA0(char *Buffer, size_t BufferCount, char *Format, _locale_t Locale, va_list ArgList)
.text:00382DA0 sub_382DA0      proc near               ; CODE XREF: sub_3811E0↑j
.text:00382DA0
.text:00382DA0 Buffer          = dword ptr  8
.text:00382DA0 BufferCount     = dword ptr  0Ch
.text:00382DA0 Format          = dword ptr  10h
.text:00382DA0 Locale          = dword ptr  14h
.text:00382DA0 ArgList         = dword ptr  18h
.text:00382DA0
.text:00382DA0                 push    ebp
.text:00382DA1                 mov     ebp, esp
.text:00382DA3                 call    sub_38131B      ; Call Procedure
.text:00382DA8                 push    [ebp+ArgList]   ; ArgList
.text:00382DAB                 push    [ebp+Locale]    ; Locale
.text:00382DAE                 push    [ebp+Format]    ; Format
.text:00382DB1                 push    [ebp+BufferCount] ; BufferCount
.text:00382DB4                 push    [ebp+Buffer]    ; Buffer
.text:00382DB7                 push    dword ptr [eax+4]
.text:00382DBA                 push    dword ptr [eax] ; Options
.text:00382DBC                 call    j___stdio_common_vsprintf_s ; Call Procedure
.text:00382DC1                 add     esp, 1Ch        ; Add
.text:00382DC4                 test    eax, eax        ; Logical Compare
.text:00382DC6                 jns     short loc_382DCB ; Jump if Not Sign (SF=0)
.text:00382DC8                 or      eax, 0FFFFFFFFh ; Logical Inclusive OR
.text:00382DCB
.text:00382DCB loc_382DCB:                             ; CODE XREF: sub_382DA0+26↑j
.text:00382DCB                 pop     ebp
.text:00382DCC                 retn                    ; Return Near from Procedure
.text:00382DCC sub_382DA0      endp
.text:00382DCC
.text:00382DCC ; ---------------------------------------------------------------------------
.text:00382DCD                 align 20h
.text:00382DE0
.text:00382DE0 ; =============== S U B R O U T I N E =======================================
.text:00382DE0
.text:00382DE0 ; Attributes: bp-based frame
.text:00382DE0
.text:00382DE0 ; int __cdecl sub_382DE0(char *Buffer, size_t BufferCount, char *Format, char ArgList)
.text:00382DE0 sub_382DE0      proc near               ; CODE XREF: sub_3812EE↑j
.text:00382DE0
.text:00382DE0 Buffer          = dword ptr  8
.text:00382DE0 BufferCount     = dword ptr  0Ch
.text:00382DE0 Format          = dword ptr  10h
.text:00382DE0 ArgList         = byte ptr  14h
.text:00382DE0
.text:00382DE0                 push    ebp
.text:00382DE1                 mov     ebp, esp
.text:00382DE3                 lea     eax, [ebp+ArgList] ; Load Effective Address
.text:00382DE6                 push    eax             ; ArgList
.text:00382DE7                 push    0               ; Locale
.text:00382DE9                 push    [ebp+Format]    ; Format
.text:00382DEC                 push    [ebp+BufferCount] ; BufferCount
.text:00382DEF                 push    [ebp+Buffer]    ; Buffer
.text:00382DF2                 call    sub_3811E0      ; Call Procedure
.text:00382DF7                 add     esp, 14h        ; Add
.text:00382DFA                 pop     ebp
.text:00382DFB                 retn                    ; Return Near from Procedure
.text:00382DFB sub_382DE0      endp
.text:00382DFB
.text:00382DFB ; ---------------------------------------------------------------------------
.text:00382DFC                 db 14h dup(0CCh)
.text:00382E10
.text:00382E10 ; =============== S U B R O U T I N E =======================================
.text:00382E10
.text:00382E10 ; Attributes: bp-based frame
.text:00382E10
.text:00382E10 ; int __cdecl sub_382E10(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:00382E10 sub_382E10      proc near               ; CODE XREF: sub_3813DE↑j
.text:00382E10
.text:00382E10 ExceptionInfo   = dword ptr  8
.text:00382E10
.text:00382E10                 push    ebp
.text:00382E11                 mov     ebp, esp
.text:00382E13                 push    0               ; lpTopLevelExceptionFilter
.text:00382E15                 call    ds:SetUnhandledExceptionFilter ; Indirect Call Near Procedure
.text:00382E1B                 mov     eax, [ebp+ExceptionInfo]
.text:00382E1E                 push    eax             ; ExceptionInfo
.text:00382E1F                 call    ds:UnhandledExceptionFilter ; Indirect Call Near Procedure
.text:00382E25                 push    0C0000409h      ; uExitCode
.text:00382E2A                 call    ds:GetCurrentProcess ; Indirect Call Near Procedure
.text:00382E30                 push    eax             ; hProcess
.text:00382E31                 call    ds:TerminateProcess ; Indirect Call Near Procedure
.text:00382E37                 pop     ebp
.text:00382E38                 retn                    ; Return Near from Procedure
.text:00382E38 sub_382E10      endp
.text:00382E38
.text:00382E38 ; ---------------------------------------------------------------------------
.text:00382E39                 db 17h dup(0CCh)
.text:00382E50
.text:00382E50 ; =============== S U B R O U T I N E =======================================
.text:00382E50
.text:00382E50 ; Attributes: bp-based frame
.text:00382E50
.text:00382E50 sub_382E50      proc near               ; CODE XREF: sub_38102D↑j
.text:00382E50
.text:00382E50 var_324         = dword ptr -324h
.text:00382E50 var_8           = dword ptr -8
.text:00382E50 var_s0          = dword ptr  0
.text:00382E50 arg_0           = byte ptr  8
.text:00382E50
.text:00382E50                 push    ebp
.text:00382E51                 mov     ebp, esp
.text:00382E53                 sub     esp, 324h       ; Integer Subtraction
.text:00382E59                 push    17h             ; ProcessorFeature
.text:00382E5B                 call    ds:IsProcessorFeaturePresent ; Indirect Call Near Procedure
.text:00382E61                 test    eax, eax        ; Logical Compare
.text:00382E63                 jz      short loc_382E6C ; Jump if Zero (ZF=1)
.text:00382E65                 mov     ecx, 2
.text:00382E6A                 int     29h             ; Win8: RtlFailFast(ecx)
.text:00382E6C ; ---------------------------------------------------------------------------
.text:00382E6C
.text:00382E6C loc_382E6C:                             ; CODE XREF: sub_382E50+13↑j
.text:00382E6C                 mov     dword_38A380, eax
.text:00382E71                 mov     dword_38A37C, ecx
.text:00382E77                 mov     dword_38A378, edx
.text:00382E7D                 mov     dword_38A374, ebx
.text:00382E83                 mov     dword_38A370, esi
.text:00382E89                 mov     dword_38A36C, edi
.text:00382E8F                 mov     word_38A398, ss
.text:00382E96                 mov     word_38A38C, cs
.text:00382E9D                 mov     word_38A368, ds
.text:00382EA4                 mov     word_38A364, es
.text:00382EAB                 mov     word_38A360, fs
.text:00382EB2                 mov     word_38A35C, gs
.text:00382EB9                 pushf                   ; Push Flags Register onto the Stack
.text:00382EBA                 pop     dword_38A390
.text:00382EC0                 mov     eax, [ebp+var_s0]
.text:00382EC3                 mov     dword_38A384, eax
.text:00382EC8                 mov     eax, [ebp+4]
.text:00382ECB                 mov     dword_38A388, eax
.text:00382ED0                 lea     eax, [ebp+arg_0] ; Load Effective Address
.text:00382ED3                 mov     dword_38A394, eax
.text:00382ED8                 mov     eax, [ebp+var_324]
.text:00382EDE                 mov     dword_38A2D0, 10001h
.text:00382EE8                 mov     eax, dword_38A388
.text:00382EED                 mov     dword_38A28C, eax
.text:00382EF2                 mov     dword_38A280, 0C0000409h
.text:00382EFC                 mov     dword_38A284, 1
.text:00382F06                 mov     dword_38A290, 1
.text:00382F10                 mov     ecx, 4
.text:00382F15                 imul    edx, ecx, 0     ; Signed Multiply
.text:00382F18                 mov     dword_38A294[edx], 2
.text:00382F22                 mov     eax, 4
.text:00382F27                 imul    ecx, eax, 0     ; Signed Multiply
.text:00382F2A                 mov     edx, ___security_cookie
.text:00382F30                 mov     [ebp+ecx+var_8], edx
.text:00382F34                 mov     eax, 4
.text:00382F39                 shl     eax, 0          ; Shift Logical Left
.text:00382F3C                 mov     ecx, dword_38A004
.text:00382F42                 mov     [ebp+eax+var_8], ecx
.text:00382F46                 push    offset ExceptionInfo ; ExceptionInfo
.text:00382F4B                 call    sub_3813DE      ; Call Procedure
.text:00382F50                 mov     esp, ebp
.text:00382F52                 pop     ebp
.text:00382F53                 retn                    ; Return Near from Procedure
.text:00382F53 sub_382E50      endp
.text:00382F53
.text:00382F53 ; ---------------------------------------------------------------------------
.text:00382F54                 db 4Ch dup(0CCh)
.text:00382FA0 ; ---------------------------------------------------------------------------
.text:00382FA0
.text:00382FA0 loc_382FA0:                             ; CODE XREF: .text:0038104B↑j
.text:00382FA0                 push    ebp
.text:00382FA1                 mov     ebp, esp
.text:00382FA3                 push    8
.text:00382FA5                 call    sub_381393      ; Call Procedure
.text:00382FAA                 pop     ebp
.text:00382FAB                 retn                    ; Return Near from Procedure
.text:00382FAB ; ---------------------------------------------------------------------------
.text:00382FAC                 align 10h
.text:00382FB0
.text:00382FB0 ; =============== S U B R O U T I N E =======================================
.text:00382FB0
.text:00382FB0 ; Attributes: bp-based frame
.text:00382FB0
.text:00382FB0 sub_382FB0      proc near               ; CODE XREF: sub_381393↑j
.text:00382FB0
.text:00382FB0 var_31C         = dword ptr -31Ch
.text:00382FB0 var_s0          = dword ptr  0
.text:00382FB0 arg_0           = dword ptr  8
.text:00382FB0
.text:00382FB0                 push    ebp
.text:00382FB1                 mov     ebp, esp
.text:00382FB3                 sub     esp, 31Ch       ; Integer Subtraction
.text:00382FB9                 push    17h             ; ProcessorFeature
.text:00382FBB                 call    ds:IsProcessorFeaturePresent ; Indirect Call Near Procedure
.text:00382FC1                 test    eax, eax        ; Logical Compare
.text:00382FC3                 jz      short loc_382FCA ; Jump if Zero (ZF=1)
.text:00382FC5                 mov     ecx, [ebp+arg_0]
.text:00382FC8                 int     29h             ; Win8: RtlFailFast(ecx)
.text:00382FCA ; ---------------------------------------------------------------------------
.text:00382FCA
.text:00382FCA loc_382FCA:                             ; CODE XREF: sub_382FB0+13↑j
.text:00382FCA                 mov     dword_38A380, eax
.text:00382FCF                 mov     dword_38A37C, ecx
.text:00382FD5                 mov     dword_38A378, edx
.text:00382FDB                 mov     dword_38A374, ebx
.text:00382FE1                 mov     dword_38A370, esi
.text:00382FE7                 mov     dword_38A36C, edi
.text:00382FED                 mov     word_38A398, ss
.text:00382FF4                 mov     word_38A38C, cs
.text:00382FFB                 mov     word_38A368, ds
.text:00383002                 mov     word_38A364, es
.text:00383009                 mov     word_38A360, fs
.text:00383010                 mov     word_38A35C, gs
.text:00383017                 pushf                   ; Push Flags Register onto the Stack
.text:00383018                 pop     dword_38A390
.text:0038301E                 mov     eax, [ebp+var_s0]
.text:00383021                 mov     dword_38A384, eax
.text:00383026                 mov     eax, [ebp+4]
.text:00383029                 mov     dword_38A388, eax
.text:0038302E                 lea     eax, [ebp+arg_0] ; Load Effective Address
.text:00383031                 mov     dword_38A394, eax
.text:00383036                 mov     eax, [ebp+var_31C]
.text:0038303C                 mov     eax, dword_38A388
.text:00383041                 mov     dword_38A28C, eax
.text:00383046                 mov     dword_38A280, 0C0000409h
.text:00383050                 mov     dword_38A284, 1
.text:0038305A                 mov     dword_38A290, 1
.text:00383064                 mov     ecx, 4
.text:00383069                 imul    edx, ecx, 0     ; Signed Multiply
.text:0038306C                 mov     eax, [ebp+arg_0]
.text:0038306F                 mov     dword_38A294[edx], eax
.text:00383075                 push    offset ExceptionInfo ; ExceptionInfo
.text:0038307A                 call    sub_3813DE      ; Call Procedure
.text:0038307F                 mov     esp, ebp
.text:00383081                 pop     ebp
.text:00383082                 retn                    ; Return Near from Procedure
.text:00383082 sub_382FB0      endp
.text:00383082
.text:00383082 ; ---------------------------------------------------------------------------
.text:00383083                 align 40h
.text:003830C0
.text:003830C0 loc_3830C0:                             ; CODE XREF: .text:003811CC↑j
.text:003830C0                 push    ebp
.text:003830C1                 mov     ebp, esp
.text:003830C3                 sub     esp, 320h       ; Integer Subtraction
.text:003830C9                 push    17h
.text:003830CB                 call    ds:IsProcessorFeaturePresent ; Indirect Call Near Procedure
.text:003830D1                 test    eax, eax        ; Logical Compare
.text:003830D3                 jz      short loc_3830DA ; Jump if Zero (ZF=1)
.text:003830D5                 mov     ecx, [ebp+8]
.text:003830D8                 int     29h             ; Win8: RtlFailFast(ecx)
.text:003830DA ; ---------------------------------------------------------------------------
.text:003830DA
.text:003830DA loc_3830DA:                             ; CODE XREF: .text:003830D3↑j
.text:003830DA                 mov     dword_38A380, eax
.text:003830DF                 mov     dword_38A37C, ecx
.text:003830E5                 mov     dword_38A378, edx
.text:003830EB                 mov     dword_38A374, ebx
.text:003830F1                 mov     dword_38A370, esi
.text:003830F7                 mov     dword_38A36C, edi
.text:003830FD                 mov     word_38A398, ss
.text:00383104                 mov     word_38A38C, cs
.text:0038310B                 mov     word_38A368, ds
.text:00383112                 mov     word_38A364, es
.text:00383119                 mov     word_38A360, fs
.text:00383120                 mov     word_38A35C, gs
.text:00383127                 pushf                   ; Push Flags Register onto the Stack
.text:00383128                 pop     dword_38A390
.text:0038312E                 mov     eax, [ebp+0]
.text:00383131                 mov     dword_38A384, eax
.text:00383136                 mov     eax, [ebp+4]
.text:00383139                 mov     dword_38A388, eax
.text:0038313E                 lea     eax, [ebp+8]    ; Load Effective Address
.text:00383141                 mov     dword_38A394, eax
.text:00383146                 mov     eax, [ebp-320h]
.text:0038314C                 mov     eax, dword_38A388
.text:00383151                 mov     dword_38A28C, eax
.text:00383156                 mov     dword_38A280, 0C0000409h
.text:00383160                 mov     dword_38A284, 1
.text:0038316A                 cmp     dword ptr [ebp+0Ch], 0 ; Compare Two Operands
.text:0038316E                 jbe     short loc_38317D ; Jump if Below or Equal (CF=1 | ZF=1)
.text:00383170                 cmp     dword ptr [ebp+10h], 0 ; Compare Two Operands
.text:00383174                 jnz     short loc_38317D ; Jump if Not Zero (ZF=0)
.text:00383176                 mov     dword ptr [ebp+0Ch], 0
.text:0038317D
.text:0038317D loc_38317D:                             ; CODE XREF: .text:0038316E↑j
.text:0038317D                                         ; .text:00383174↑j
.text:0038317D                 cmp     dword ptr [ebp+0Ch], 0Eh ; Compare Two Operands
.text:00383181                 jbe     short loc_38318C ; Jump if Below or Equal (CF=1 | ZF=1)
.text:00383183                 mov     ecx, [ebp+0Ch]
.text:00383186                 sub     ecx, 1          ; Integer Subtraction
.text:00383189                 mov     [ebp+0Ch], ecx
.text:0038318C
.text:0038318C loc_38318C:                             ; CODE XREF: .text:00383181↑j
.text:0038318C                 mov     edx, [ebp+0Ch]
.text:0038318F                 add     edx, 1          ; Add
.text:00383192                 mov     dword_38A290, edx
.text:00383198                 mov     eax, 4
.text:0038319D                 imul    ecx, eax, 0     ; Signed Multiply
.text:003831A0                 mov     edx, [ebp+8]
.text:003831A3                 mov     dword_38A294[ecx], edx
.text:003831A9                 mov     dword ptr [ebp-4], 0
.text:003831B0                 jmp     short loc_3831BB ; Jump
.text:003831B2 ; ---------------------------------------------------------------------------
.text:003831B2
.text:003831B2 loc_3831B2:                             ; CODE XREF: .text:003831D6↓j
.text:003831B2                 mov     eax, [ebp-4]
.text:003831B5                 add     eax, 1          ; Add
.text:003831B8                 mov     [ebp-4], eax
.text:003831BB
.text:003831BB loc_3831BB:                             ; CODE XREF: .text:003831B0↑j
.text:003831BB                 mov     ecx, [ebp-4]
.text:003831BE                 cmp     ecx, [ebp+0Ch]  ; Compare Two Operands
.text:003831C1                 jnb     short loc_3831D8 ; Jump if Not Below (CF=0)
.text:003831C3                 mov     edx, [ebp-4]
.text:003831C6                 mov     eax, [ebp-4]
.text:003831C9                 mov     ecx, [ebp+10h]
.text:003831CC                 mov     eax, [ecx+eax*4]
.text:003831CF                 mov     dword_38A298[edx*4], eax
.text:003831D6                 jmp     short loc_3831B2 ; Jump
.text:003831D8 ; ---------------------------------------------------------------------------
.text:003831D8
.text:003831D8 loc_3831D8:                             ; CODE XREF: .text:003831C1↑j
.text:003831D8                 push    offset ExceptionInfo
.text:003831DD                 call    sub_3813DE      ; Call Procedure
.text:003831E2                 mov     esp, ebp
.text:003831E4                 pop     ebp
.text:003831E5                 retn                    ; Return Near from Procedure
.text:003831E5 ; ---------------------------------------------------------------------------
.text:003831E6                 db 4Ah dup(0CCh)
.text:00383230
.text:00383230 ; =============== S U B R O U T I N E =======================================
.text:00383230
.text:00383230
.text:00383230 sub_383230      proc near               ; CODE XREF: sub_381087↑j
.text:00383230                 mov     eax, dword_38A63C
.text:00383235                 retn                    ; Return Near from Procedure
.text:00383235 sub_383230      endp
.text:00383235
.text:00383235 ; ---------------------------------------------------------------------------
.text:00383236                 align 10h
.text:00383240
.text:00383240 ; =============== S U B R O U T I N E =======================================
.text:00383240
.text:00383240
.text:00383240 sub_383240      proc near               ; CODE XREF: sub_3813A7↑j
.text:00383240                 mov     eax, dword_38A640
.text:00383245                 retn                    ; Return Near from Procedure
.text:00383245 sub_383240      endp
.text:00383245
.text:00383245 ; ---------------------------------------------------------------------------
.text:00383246                 align 10h
.text:00383250
.text:00383250 loc_383250:                             ; CODE XREF: .text:00381168↑j
.text:00383250                 push    ebp
.text:00383251                 mov     ebp, esp
.text:00383253                 mov     eax, [ebp+8]
.text:00383256                 cmp     eax, 4          ; Compare Two Operands
.text:00383259                 ja      short loc_383264 ; Jump if Above (CF=0 & ZF=0)
.text:0038325B                 mov     eax, ds:off_38838C[eax*4] ; "Stack pointer corruption"
.text:00383262                 pop     ebp
.text:00383263                 retn                    ; Return Near from Procedure
.text:00383264 ; ---------------------------------------------------------------------------
.text:00383264
.text:00383264 loc_383264:                             ; CODE XREF: .text:00383259↑j
.text:00383264                 xor     eax, eax        ; Logical Exclusive OR
.text:00383266                 pop     ebp
.text:00383267                 retn                    ; Return Near from Procedure
.text:00383267 ; ---------------------------------------------------------------------------
.text:00383268                 align 10h
.text:00383270
.text:00383270 loc_383270:                             ; CODE XREF: .text:00381032↑j
.text:00383270                 mov     eax, 5
.text:00383275                 retn                    ; Return Near from Procedure
.text:00383275 ; ---------------------------------------------------------------------------
.text:00383276                 align 10h
.text:00383280
.text:00383280 loc_383280:                             ; CODE XREF: .text:003811AE↑j
.text:00383280                 push    ebp
.text:00383281                 mov     ebp, esp
.text:00383283                 mov     eax, dword_38A63C
.text:00383288                 mov     ecx, [ebp+8]
.text:0038328B                 mov     dword_38A63C, ecx
.text:00383291                 mov     dword_38A640, 0
.text:0038329B                 pop     ebp
.text:0038329C                 retn                    ; Return Near from Procedure
.text:0038329C ; ---------------------------------------------------------------------------
.text:0038329D                 db 13h dup(0CCh)
.text:003832B0
.text:003832B0 ; =============== S U B R O U T I N E =======================================
.text:003832B0
.text:003832B0 ; Attributes: bp-based frame
.text:003832B0
.text:003832B0 sub_3832B0      proc near               ; CODE XREF: sub_381352↑j
.text:003832B0
.text:003832B0 arg_0           = dword ptr  8
.text:003832B0
.text:003832B0                 push    ebp
.text:003832B1                 mov     ebp, esp
.text:003832B3                 mov     eax, dword_38A640
.text:003832B8                 mov     ecx, [ebp+arg_0]
.text:003832BB                 mov     dword_38A640, ecx
.text:003832C1                 mov     dword_38A63C, 0
.text:003832CB                 pop     ebp
.text:003832CC                 retn                    ; Return Near from Procedure
.text:003832CC sub_3832B0      endp
.text:003832CC
.text:003832CC ; ---------------------------------------------------------------------------
.text:003832CD                 align 20h
.text:003832E0
.text:003832E0 loc_3832E0:                             ; CODE XREF: .text:0038116D↑j
.text:003832E0                 push    ebp
.text:003832E1                 mov     ebp, esp
.text:003832E3                 mov     edx, [ebp+8]
.text:003832E6                 cmp     edx, 4          ; Compare Two Operands
.text:003832E9                 ja      short loc_3832FE ; Jump if Above (CF=0 & ZF=0)
.text:003832EB                 mov     eax, dword_38A00C[edx*4]
.text:003832F2                 mov     ecx, [ebp+0Ch]
.text:003832F5                 mov     dword_38A00C[edx*4], ecx
.text:003832FC                 pop     ebp
.text:003832FD                 retn                    ; Return Near from Procedure
.text:003832FE ; ---------------------------------------------------------------------------
.text:003832FE
.text:003832FE loc_3832FE:                             ; CODE XREF: .text:003832E9↑j
.text:003832FE                 or      eax, 0FFFFFFFFh ; Logical Inclusive OR
.text:00383301                 pop     ebp
.text:00383302                 retn                    ; Return Near from Procedure
.text:00383302 ; ---------------------------------------------------------------------------
.text:00383303                 align 10h
.text:00383310
.text:00383310 ; =============== S U B R O U T I N E =======================================
.text:00383310
.text:00383310 ; Attributes: bp-based frame
.text:00383310
.text:00383310 sub_383310      proc near               ; CODE XREF: sub_3837C0+7E↓p
.text:00383310
.text:00383310 var_18          = dword ptr -18h
.text:00383310 var_14          = dword ptr -14h
.text:00383310 var_10          = dword ptr -10h
.text:00383310 var_C           = dword ptr -0Ch
.text:00383310 var_8           = dword ptr -8
.text:00383310 var_4           = dword ptr -4
.text:00383310 arg_0           = dword ptr  8
.text:00383310 arg_4           = dword ptr  0Ch
.text:00383310
.text:00383310                 push    ebp
.text:00383311                 mov     ebp, esp
.text:00383313                 sub     esp, 18h        ; Integer Subtraction
.text:00383316                 mov     eax, [ebp+arg_0]
.text:00383319                 mov     [ebp+var_C], eax
.text:0038331C                 mov     ecx, [ebp+var_C]
.text:0038331F                 mov     edx, [ebp+var_C]
.text:00383322                 add     edx, [ecx+3Ch]  ; Add
.text:00383325                 mov     [ebp+var_14], edx
.text:00383328                 mov     eax, [ebp+var_14]
.text:0038332B                 mov     [ebp+var_8], eax
.text:0038332E                 mov     ecx, [ebp+var_8]
.text:00383331                 movzx   edx, word ptr [ecx+14h] ; Move with Zero-Extend
.text:00383335                 mov     eax, [ebp+var_8]
.text:00383338                 lea     ecx, [eax+edx+18h] ; Load Effective Address
.text:0038333C                 mov     [ebp+var_10], ecx
.text:0038333F                 mov     edx, [ebp+var_8]
.text:00383342                 movzx   eax, word ptr [edx+6] ; Move with Zero-Extend
.text:00383346                 imul    ecx, eax, 28h ; '(' ; Signed Multiply
.text:00383349                 add     ecx, [ebp+var_10] ; Add
.text:0038334C                 mov     [ebp+var_18], ecx
.text:0038334F                 mov     edx, [ebp+var_10]
.text:00383352                 mov     [ebp+var_4], edx
.text:00383355                 jmp     short loc_383360 ; Jump
.text:00383357 ; ---------------------------------------------------------------------------
.text:00383357
.text:00383357 loc_383357:                             ; CODE XREF: sub_383310:loc_383389↓j
.text:00383357                 mov     eax, [ebp+var_4]
.text:0038335A                 add     eax, 28h ; '('  ; Add
.text:0038335D                 mov     [ebp+var_4], eax
.text:00383360
.text:00383360 loc_383360:                             ; CODE XREF: sub_383310+45↑j
.text:00383360                 mov     ecx, [ebp+var_4]
.text:00383363                 cmp     ecx, [ebp+var_18] ; Compare Two Operands
.text:00383366                 jz      short loc_38338B ; Jump if Zero (ZF=1)
.text:00383368                 mov     edx, [ebp+var_4]
.text:0038336B                 mov     eax, [ebp+arg_4]
.text:0038336E                 cmp     eax, [edx+0Ch]  ; Compare Two Operands
.text:00383371                 jb      short loc_383389 ; Jump if Below (CF=1)
.text:00383373                 mov     ecx, [ebp+var_4]
.text:00383376                 mov     edx, [ecx+0Ch]
.text:00383379                 mov     eax, [ebp+var_4]
.text:0038337C                 add     edx, [eax+8]    ; Add
.text:0038337F                 cmp     [ebp+arg_4], edx ; Compare Two Operands
.text:00383382                 jnb     short loc_383389 ; Jump if Not Below (CF=0)
.text:00383384                 mov     eax, [ebp+var_4]
.text:00383387                 jmp     short loc_38338D ; Jump
.text:00383389 ; ---------------------------------------------------------------------------
.text:00383389
.text:00383389 loc_383389:                             ; CODE XREF: sub_383310+61↑j
.text:00383389                                         ; sub_383310+72↑j
.text:00383389                 jmp     short loc_383357 ; Jump
.text:0038338B ; ---------------------------------------------------------------------------
.text:0038338B
.text:0038338B loc_38338B:                             ; CODE XREF: sub_383310+56↑j
.text:0038338B                 xor     eax, eax        ; Logical Exclusive OR
.text:0038338D
.text:0038338D loc_38338D:                             ; CODE XREF: sub_383310+77↑j
.text:0038338D                 mov     esp, ebp
.text:0038338F                 pop     ebp
.text:00383390                 retn                    ; Return Near from Procedure
.text:00383390 sub_383310      endp
.text:00383390
.text:00383390 ; ---------------------------------------------------------------------------
.text:00383391                 align 40h
.text:003833C0
.text:003833C0 ; =============== S U B R O U T I N E =======================================
.text:003833C0
.text:003833C0 ; Attributes: bp-based frame
.text:003833C0
.text:003833C0 sub_3833C0      proc near               ; CODE XREF: sub_3837C0+4B↓p
.text:003833C0
.text:003833C0 var_10          = dword ptr -10h
.text:003833C0 var_C           = dword ptr -0Ch
.text:003833C0 var_8           = dword ptr -8
.text:003833C0 var_4           = dword ptr -4
.text:003833C0 arg_0           = dword ptr  8
.text:003833C0
.text:003833C0                 push    ebp
.text:003833C1                 mov     ebp, esp
.text:003833C3                 sub     esp, 10h        ; Integer Subtraction
.text:003833C6                 cmp     [ebp+arg_0], 0  ; Compare Two Operands
.text:003833CA                 jnz     short loc_3833D0 ; Jump if Not Zero (ZF=0)
.text:003833CC                 xor     al, al          ; Logical Exclusive OR
.text:003833CE                 jmp     short loc_383425 ; Jump
.text:003833D0 ; ---------------------------------------------------------------------------
.text:003833D0
.text:003833D0 loc_3833D0:                             ; CODE XREF: sub_3833C0+A↑j
.text:003833D0                 mov     eax, [ebp+arg_0]
.text:003833D3                 mov     [ebp+var_4], eax
.text:003833D6                 mov     ecx, [ebp+var_4]
.text:003833D9                 movzx   edx, word ptr [ecx] ; Move with Zero-Extend
.text:003833DC                 cmp     edx, 5A4Dh      ; Compare Two Operands
.text:003833E2                 jz      short loc_3833E8 ; Jump if Zero (ZF=1)
.text:003833E4                 xor     al, al          ; Logical Exclusive OR
.text:003833E6                 jmp     short loc_383425 ; Jump
.text:003833E8 ; ---------------------------------------------------------------------------
.text:003833E8
.text:003833E8 loc_3833E8:                             ; CODE XREF: sub_3833C0+22↑j
.text:003833E8                 mov     eax, [ebp+var_4]
.text:003833EB                 mov     ecx, [ebp+var_4]
.text:003833EE                 add     ecx, [eax+3Ch]  ; Add
.text:003833F1                 mov     [ebp+var_C], ecx
.text:003833F4                 mov     edx, [ebp+var_C]
.text:003833F7                 mov     [ebp+var_8], edx
.text:003833FA                 mov     eax, [ebp+var_8]
.text:003833FD                 cmp     dword ptr [eax], 4550h ; Compare Two Operands
.text:00383403                 jz      short loc_383409 ; Jump if Zero (ZF=1)
.text:00383405                 xor     al, al          ; Logical Exclusive OR
.text:00383407                 jmp     short loc_383425 ; Jump
.text:00383409 ; ---------------------------------------------------------------------------
.text:00383409
.text:00383409 loc_383409:                             ; CODE XREF: sub_3833C0+43↑j
.text:00383409                 mov     ecx, [ebp+var_8]
.text:0038340C                 add     ecx, 18h        ; Add
.text:0038340F                 mov     [ebp+var_10], ecx
.text:00383412                 mov     edx, [ebp+var_10]
.text:00383415                 movzx   eax, word ptr [edx] ; Move with Zero-Extend
.text:00383418                 cmp     eax, 10Bh       ; Compare Two Operands
.text:0038341D                 jz      short loc_383423 ; Jump if Zero (ZF=1)
.text:0038341F                 xor     al, al          ; Logical Exclusive OR
.text:00383421                 jmp     short loc_383425 ; Jump
.text:00383423 ; ---------------------------------------------------------------------------
.text:00383423
.text:00383423 loc_383423:                             ; CODE XREF: sub_3833C0+5D↑j
.text:00383423                 mov     al, 1
.text:00383425
.text:00383425 loc_383425:                             ; CODE XREF: sub_3833C0+E↑j
.text:00383425                                         ; sub_3833C0+26↑j ...
.text:00383425                 mov     esp, ebp
.text:00383427                 pop     ebp
.text:00383428                 retn                    ; Return Near from Procedure
.text:00383428 sub_3833C0      endp
.text:00383428
.text:00383428 ; ---------------------------------------------------------------------------
.text:00383429                 db 27h dup(0CCh)
.text:00383450
.text:00383450 ; =============== S U B R O U T I N E =======================================
.text:00383450
.text:00383450 ; Attributes: bp-based frame
.text:00383450
.text:00383450 sub_383450      proc near               ; CODE XREF: sub_38139D↑j
.text:00383450                 push    ebp
.text:00383451                 mov     ebp, esp
.text:00383453                 mov     eax, large fs:18h
.text:00383459                 pop     ebp
.text:0038345A                 retn                    ; Return Near from Procedure
.text:0038345A sub_383450      endp
.text:0038345A
.text:0038345A ; ---------------------------------------------------------------------------
.text:0038345B                 align 10h
.text:00383460
.text:00383460 ; =============== S U B R O U T I N E =======================================
.text:00383460
.text:00383460 ; Attributes: bp-based frame
.text:00383460
.text:00383460 sub_383460      proc near               ; CODE XREF: sub_381302↑j
.text:00383460
.text:00383460 var_8           = dword ptr -8
.text:00383460 var_4           = dword ptr -4
.text:00383460
.text:00383460                 push    ebp
.text:00383461                 mov     ebp, esp
.text:00383463                 sub     esp, 8          ; Integer Subtraction
.text:00383466                 call    sub_3811BD      ; Call Procedure
.text:0038346B                 test    eax, eax        ; Logical Compare
.text:0038346D                 jnz     short loc_383473 ; Jump if Not Zero (ZF=0)
.text:0038346F                 xor     al, al          ; Logical Exclusive OR
.text:00383471                 jmp     short loc_3834A5 ; Jump
.text:00383473 ; ---------------------------------------------------------------------------
.text:00383473
.text:00383473 loc_383473:                             ; CODE XREF: sub_383460+D↑j
.text:00383473                 call    sub_38139D      ; Call Procedure
.text:00383478                 mov     eax, [eax+4]
.text:0038347B                 mov     [ebp+var_4], eax
.text:0038347E
.text:0038347E loc_38347E:                             ; CODE XREF: sub_383460:loc_3834A1↓j
.text:0038347E                 mov     ecx, [ebp+var_4]
.text:00383481                 mov     edx, offset unk_38A64C
.text:00383486                 xor     eax, eax        ; Logical Exclusive OR
.text:00383488                 lock cmpxchg [edx], ecx ; Compare and Exchange
.text:0038348C                 mov     [ebp+var_8], eax
.text:0038348F                 cmp     [ebp+var_8], 0  ; Compare Two Operands
.text:00383493                 jz      short loc_3834A3 ; Jump if Zero (ZF=1)
.text:00383495                 mov     eax, [ebp+var_4]
.text:00383498                 cmp     eax, [ebp+var_8] ; Compare Two Operands
.text:0038349B                 jnz     short loc_3834A1 ; Jump if Not Zero (ZF=0)
.text:0038349D                 mov     al, 1
.text:0038349F                 jmp     short loc_3834A5 ; Jump
.text:003834A1 ; ---------------------------------------------------------------------------
.text:003834A1
.text:003834A1 loc_3834A1:                             ; CODE XREF: sub_383460+3B↑j
.text:003834A1                 jmp     short loc_38347E ; Jump
.text:003834A3 ; ---------------------------------------------------------------------------
.text:003834A3
.text:003834A3 loc_3834A3:                             ; CODE XREF: sub_383460+33↑j
.text:003834A3                 xor     al, al          ; Logical Exclusive OR
.text:003834A5
.text:003834A5 loc_3834A5:                             ; CODE XREF: sub_383460+11↑j
.text:003834A5                                         ; sub_383460+3F↑j
.text:003834A5                 mov     esp, ebp
.text:003834A7                 pop     ebp
.text:003834A8                 retn                    ; Return Near from Procedure
.text:003834A8 sub_383460      endp
.text:003834A8
.text:003834A8 ; ---------------------------------------------------------------------------
.text:003834A9                 align 20h
.text:003834C0
.text:003834C0 loc_3834C0:                             ; CODE XREF: .text:00381154↑j
.text:003834C0                 push    ebp
.text:003834C1                 mov     ebp, esp
.text:003834C3                 call    sub_3811BD      ; Call Procedure
.text:003834C8                 test    eax, eax        ; Logical Compare
.text:003834CA                 jz      short loc_3834D3 ; Jump if Zero (ZF=1)
.text:003834CC                 call    sub_3811C2      ; Call Procedure
.text:003834D1                 jmp     short loc_3834E5 ; Jump
.text:003834D3 ; ---------------------------------------------------------------------------
.text:003834D3
.text:003834D3 loc_3834D3:                             ; CODE XREF: .text:003834CA↑j
.text:003834D3                 call    sub_381221      ; Call Procedure
.text:003834D8                 test    eax, eax        ; Logical Compare
.text:003834DA                 jz      short loc_3834E0 ; Jump if Zero (ZF=1)
.text:003834DC                 xor     al, al          ; Logical Exclusive OR
.text:003834DE                 jmp     short loc_3834E7 ; Jump
.text:003834E0 ; ---------------------------------------------------------------------------
.text:003834E0
.text:003834E0 loc_3834E0:                             ; CODE XREF: .text:003834DA↑j
.text:003834E0                 call    sub_381140      ; Call Procedure
.text:003834E5
.text:003834E5 loc_3834E5:                             ; CODE XREF: .text:003834D1↑j
.text:003834E5                 mov     al, 1
.text:003834E7
.text:003834E7 loc_3834E7:                             ; CODE XREF: .text:003834DE↑j
.text:003834E7                 pop     ebp
.text:003834E8                 retn                    ; Return Near from Procedure
.text:003834E8 ; ---------------------------------------------------------------------------
.text:003834E9                 align 20h
.text:00383500
.text:00383500 loc_383500:                             ; CODE XREF: .text:003810B4↑j
.text:00383500                 push    ebp
.text:00383501                 mov     ebp, esp
.text:00383503                 push    0
.text:00383505                 call    sub_381145      ; Call Procedure
.text:0038350A                 add     esp, 4          ; Add
.text:0038350D                 movzx   eax, al         ; Move with Zero-Extend
.text:00383510                 test    eax, eax        ; Logical Compare
.text:00383512                 jnz     short loc_383518 ; Jump if Not Zero (ZF=0)
.text:00383514                 xor     al, al          ; Logical Exclusive OR
.text:00383516                 jmp     short loc_38351A ; Jump
.text:00383518 ; ---------------------------------------------------------------------------
.text:00383518
.text:00383518 loc_383518:                             ; CODE XREF: .text:00383512↑j
.text:00383518                 mov     al, 1
.text:0038351A
.text:0038351A loc_38351A:                             ; CODE XREF: .text:00383516↑j
.text:0038351A                 pop     ebp
.text:0038351B                 retn                    ; Return Near from Procedure
.text:0038351B ; ---------------------------------------------------------------------------
.text:0038351C                 db 14h dup(0CCh)
.text:00383530 ; ---------------------------------------------------------------------------
.text:00383530
.text:00383530 loc_383530:                             ; CODE XREF: .text:0038124E↑j
.text:00383530                 push    ebp
.text:00383531                 mov     ebp, esp
.text:00383533                 call    sub_381267      ; Call Procedure
.text:00383538                 movzx   eax, al         ; Move with Zero-Extend
.text:0038353B                 test    eax, eax        ; Logical Compare
.text:0038353D                 jnz     short loc_383543 ; Jump if Not Zero (ZF=0)
.text:0038353F                 xor     al, al          ; Logical Exclusive OR
.text:00383541                 jmp     short loc_38355A ; Jump
.text:00383543 ; ---------------------------------------------------------------------------
.text:00383543
.text:00383543 loc_383543:                             ; CODE XREF: .text:0038353D↑j
.text:00383543                 call    sub_38128A      ; Call Procedure
.text:00383548                 movzx   ecx, al         ; Move with Zero-Extend
.text:0038354B                 test    ecx, ecx        ; Logical Compare
.text:0038354D                 jnz     short loc_383558 ; Jump if Not Zero (ZF=0)
.text:0038354F                 call    sub_38111D      ; Call Procedure
.text:00383554                 xor     al, al          ; Logical Exclusive OR
.text:00383556                 jmp     short loc_38355A ; Jump
.text:00383558 ; ---------------------------------------------------------------------------
.text:00383558
.text:00383558 loc_383558:                             ; CODE XREF: .text:0038354D↑j
.text:00383558                 mov     al, 1
.text:0038355A
.text:0038355A loc_38355A:                             ; CODE XREF: .text:00383541↑j
.text:0038355A                                         ; .text:00383556↑j
.text:0038355A                 pop     ebp
.text:0038355B                 retn                    ; Return Near from Procedure
.text:0038355B ; ---------------------------------------------------------------------------
.text:0038355C                 db 14h dup(0CCh)
.text:00383570 ; ---------------------------------------------------------------------------
.text:00383570
.text:00383570 loc_383570:                             ; CODE XREF: .text:00381280↑j
.text:00383570                 push    ebp
.text:00383571                 mov     ebp, esp
.text:00383573                 call    sub_3811A9      ; Call Procedure
.text:00383578                 call    sub_38111D      ; Call Procedure
.text:0038357D                 mov     al, 1
.text:0038357F                 pop     ebp
.text:00383580                 retn                    ; Return Near from Procedure
.text:00383580 ; ---------------------------------------------------------------------------
.text:00383581                 align 10h
.text:00383590
.text:00383590 loc_383590:                             ; CODE XREF: .text:003810FF↑j
.text:00383590                 push    ebp
.text:00383591                 mov     ebp, esp
.text:00383593                 sub     esp, 8          ; Integer Subtraction
.text:00383596                 call    sub_3811BD      ; Call Procedure
.text:0038359B                 test    eax, eax        ; Logical Compare
.text:0038359D                 jnz     short loc_3835C7 ; Jump if Not Zero (ZF=0)
.text:0038359F                 cmp     dword ptr [ebp+0Ch], 1 ; Compare Two Operands
.text:003835A3                 jnz     short loc_3835C7 ; Jump if Not Zero (ZF=0)
.text:003835A5                 mov     eax, [ebp+14h]
.text:003835A8                 mov     [ebp-8], eax
.text:003835AB                 mov     ecx, [ebp+10h]
.text:003835AE                 push    ecx
.text:003835AF                 push    0
.text:003835B1                 mov     edx, [ebp+8]
.text:003835B4                 push    edx
.text:003835B5                 mov     eax, [ebp-8]
.text:003835B8                 mov     [ebp-4], eax
.text:003835BB                 mov     ecx, [ebp-4]
.text:003835BE                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:003835C4                 call    dword ptr [ebp-4] ; Indirect Call Near Procedure
.text:003835C7
.text:003835C7 loc_3835C7:                             ; CODE XREF: .text:0038359D↑j
.text:003835C7                                         ; .text:003835A3↑j
.text:003835C7                 mov     ecx, [ebp+1Ch]
.text:003835CA                 push    ecx
.text:003835CB                 mov     edx, [ebp+18h]
.text:003835CE                 push    edx
.text:003835CF                 call    j__seh_filter_dll ; Call Procedure
.text:003835D4                 add     esp, 8          ; Add
.text:003835D7                 mov     esp, ebp
.text:003835D9                 pop     ebp
.text:003835DA                 retn                    ; Return Near from Procedure
.text:003835DA ; ---------------------------------------------------------------------------
.text:003835DB                 db 15h dup(0CCh)
.text:003835F0 ; ---------------------------------------------------------------------------
.text:003835F0
.text:003835F0 loc_3835F0:                             ; CODE XREF: .text:00381113↑j
.text:003835F0                 push    ebp
.text:003835F1                 mov     ebp, esp
.text:003835F3                 call    sub_3811BD      ; Call Procedure
.text:003835F8                 test    eax, eax        ; Logical Compare
.text:003835FA                 jz      short loc_38360B ; Jump if Zero (ZF=1)
.text:003835FC                 push    offset Table
.text:00383601                 call    j__execute_onexit_table ; Call Procedure
.text:00383606                 add     esp, 4          ; Add
.text:00383609                 jmp     short loc_383619 ; Jump
.text:0038360B ; ---------------------------------------------------------------------------
.text:0038360B
.text:0038360B loc_38360B:                             ; CODE XREF: .text:003835FA↑j
.text:0038360B                 call    sub_381208      ; Call Procedure
.text:00383610                 test    eax, eax        ; Logical Compare
.text:00383612                 jnz     short loc_383619 ; Jump if Not Zero (ZF=0)
.text:00383614                 call    j__cexit        ; Call Procedure
.text:00383619
.text:00383619 loc_383619:                             ; CODE XREF: .text:00383609↑j
.text:00383619                                         ; .text:00383612↑j
.text:00383619                 pop     ebp
.text:0038361A                 retn                    ; Return Near from Procedure
.text:0038361A ; ---------------------------------------------------------------------------
.text:0038361B                 db 15h dup(0CCh)
.text:00383630 ; ---------------------------------------------------------------------------
.text:00383630
.text:00383630 loc_383630:                             ; CODE XREF: .text:00381064↑j
.text:00383630                 push    ebp
.text:00383631                 mov     ebp, esp
.text:00383633                 push    0
.text:00383635                 call    sub_3813D4      ; Call Procedure
.text:0038363A                 add     esp, 4          ; Add
.text:0038363D                 call    sub_381271      ; Call Procedure
.text:00383642                 pop     ebp
.text:00383643                 retn                    ; Return Near from Procedure
.text:00383643 ; ---------------------------------------------------------------------------
.text:00383644                 align 10h
.text:00383650
.text:00383650 ; =============== S U B R O U T I N E =======================================
.text:00383650
.text:00383650 ; Attributes: bp-based frame
.text:00383650
.text:00383650 sub_383650      proc near               ; CODE XREF: sub_3812CB↑j
.text:00383650
.text:00383650 arg_0           = dword ptr  8
.text:00383650
.text:00383650                 push    ebp
.text:00383651                 mov     ebp, esp
.text:00383653                 cmp     [ebp+arg_0], 0  ; Compare Two Operands
.text:00383657                 jnz     short loc_383660 ; Jump if Not Zero (ZF=0)
.text:00383659                 mov     byte_38A650, 1
.text:00383660
.text:00383660 loc_383660:                             ; CODE XREF: sub_383650+7↑j
.text:00383660                 call    sub_3811C2      ; Call Procedure
.text:00383665                 call    sub_38129E      ; Call Procedure
.text:0038366A                 movzx   eax, al         ; Move with Zero-Extend
.text:0038366D                 test    eax, eax        ; Logical Compare
.text:0038366F                 jnz     short loc_383675 ; Jump if Not Zero (ZF=0)
.text:00383671                 xor     al, al          ; Logical Exclusive OR
.text:00383673                 jmp     short loc_383691 ; Jump
.text:00383675 ; ---------------------------------------------------------------------------
.text:00383675
.text:00383675 loc_383675:                             ; CODE XREF: sub_383650+1F↑j
.text:00383675                 call    sub_3812A3      ; Call Procedure
.text:0038367A                 movzx   ecx, al         ; Move with Zero-Extend
.text:0038367D                 test    ecx, ecx        ; Logical Compare
.text:0038367F                 jnz     short loc_38368F ; Jump if Not Zero (ZF=0)
.text:00383681                 push    0
.text:00383683                 call    sub_38101E      ; Call Procedure
.text:00383688                 add     esp, 4          ; Add
.text:0038368B                 xor     al, al          ; Logical Exclusive OR
.text:0038368D                 jmp     short loc_383691 ; Jump
.text:0038368F ; ---------------------------------------------------------------------------
.text:0038368F
.text:0038368F loc_38368F:                             ; CODE XREF: sub_383650+2F↑j
.text:0038368F                 mov     al, 1
.text:00383691
.text:00383691 loc_383691:                             ; CODE XREF: sub_383650+23↑j
.text:00383691                                         ; sub_383650+3D↑j
.text:00383691                 pop     ebp
.text:00383692                 retn                    ; Return Near from Procedure
.text:00383692 sub_383650      endp
.text:00383692
.text:00383692 ; ---------------------------------------------------------------------------
.text:00383693                 db 1Dh dup(0CCh)
.text:003836B0
.text:003836B0 ; =============== S U B R O U T I N E =======================================
.text:003836B0
.text:003836B0 ; Attributes: bp-based frame
.text:003836B0
.text:003836B0 sub_3836B0      proc near               ; CODE XREF: sub_381145↑j
.text:003836B0
.text:003836B0 var_1C          = dword ptr -1Ch
.text:003836B0 var_18          = dword ptr -18h
.text:003836B0 var_14          = dword ptr -14h
.text:003836B0 var_10          = dword ptr -10h
.text:003836B0 var_C           = dword ptr -0Ch
.text:003836B0 var_8           = dword ptr -8
.text:003836B0 var_4           = dword ptr -4
.text:003836B0 arg_0           = dword ptr  8
.text:003836B0
.text:003836B0                 push    ebp
.text:003836B1                 mov     ebp, esp
.text:003836B3                 sub     esp, 1Ch        ; Integer Subtraction
.text:003836B6                 movzx   eax, byte_38A651 ; Move with Zero-Extend
.text:003836BD                 test    eax, eax        ; Logical Compare
.text:003836BF                 jz      short loc_3836C8 ; Jump if Zero (ZF=1)
.text:003836C1                 mov     al, 1
.text:003836C3                 jmp     loc_38377E      ; Jump
.text:003836C8 ; ---------------------------------------------------------------------------
.text:003836C8
.text:003836C8 loc_3836C8:                             ; CODE XREF: sub_3836B0+F↑j
.text:003836C8                 cmp     [ebp+arg_0], 0  ; Compare Two Operands
.text:003836CC                 jz      short loc_3836DB ; Jump if Zero (ZF=1)
.text:003836CE                 cmp     [ebp+arg_0], 1  ; Compare Two Operands
.text:003836D2                 jz      short loc_3836DB ; Jump if Zero (ZF=1)
.text:003836D4                 push    5
.text:003836D6                 call    sub_3811EF      ; Call Procedure
.text:003836DB
.text:003836DB loc_3836DB:                             ; CODE XREF: sub_3836B0+1C↑j
.text:003836DB                                         ; sub_3836B0+22↑j
.text:003836DB                 call    sub_3811BD      ; Call Procedure
.text:003836E0                 test    eax, eax        ; Logical Compare
.text:003836E2                 jz      short loc_383716 ; Jump if Zero (ZF=1)
.text:003836E4                 cmp     [ebp+arg_0], 0  ; Compare Two Operands
.text:003836E8                 jnz     short loc_383716 ; Jump if Not Zero (ZF=0)
.text:003836EA                 push    offset Table    ; Table
.text:003836EF                 call    j__initialize_onexit_table ; Call Procedure
.text:003836F4                 add     esp, 4          ; Add
.text:003836F7                 test    eax, eax        ; Logical Compare
.text:003836F9                 jz      short loc_3836FF ; Jump if Zero (ZF=1)
.text:003836FB                 xor     al, al          ; Logical Exclusive OR
.text:003836FD                 jmp     short loc_38377E ; Jump
.text:003836FF ; ---------------------------------------------------------------------------
.text:003836FF
.text:003836FF loc_3836FF:                             ; CODE XREF: sub_3836B0+49↑j
.text:003836FF                 push    offset stru_38A660 ; Table
.text:00383704                 call    j__initialize_onexit_table ; Call Procedure
.text:00383709                 add     esp, 4          ; Add
.text:0038370C                 test    eax, eax        ; Logical Compare
.text:0038370E                 jz      short loc_383714 ; Jump if Zero (ZF=1)
.text:00383710                 xor     al, al          ; Logical Exclusive OR
.text:00383712                 jmp     short loc_38377E ; Jump
.text:00383714 ; ---------------------------------------------------------------------------
.text:00383714
.text:00383714 loc_383714:                             ; CODE XREF: sub_3836B0+5E↑j
.text:00383714                 jmp     short loc_383775 ; Jump
.text:00383716 ; ---------------------------------------------------------------------------
.text:00383716
.text:00383716 loc_383716:                             ; CODE XREF: sub_3836B0+32↑j
.text:00383716                                         ; sub_3836B0+38↑j
.text:00383716                 mov     [ebp+var_4], 0FFFFFFFFh
.text:0038371D                 mov     ecx, [ebp+var_4]
.text:00383720                 mov     [ebp+var_10], ecx
.text:00383723                 mov     edx, [ebp+var_4]
.text:00383726                 mov     [ebp+var_C], edx
.text:00383729                 mov     eax, [ebp+var_4]
.text:0038372C                 mov     [ebp+var_8], eax
.text:0038372F                 mov     ecx, [ebp+var_10]
.text:00383732                 mov     Table._first, ecx
.text:00383738                 mov     edx, [ebp+var_C]
.text:0038373B                 mov     Table._last, edx
.text:00383741                 mov     eax, [ebp+var_8]
.text:00383744                 mov     Table._end, eax
.text:00383749                 mov     ecx, [ebp+var_4]
.text:0038374C                 mov     [ebp+var_1C], ecx
.text:0038374F                 mov     edx, [ebp+var_4]
.text:00383752                 mov     [ebp+var_18], edx
.text:00383755                 mov     eax, [ebp+var_4]
.text:00383758                 mov     [ebp+var_14], eax
.text:0038375B                 mov     ecx, [ebp+var_1C]
.text:0038375E                 mov     stru_38A660._first, ecx
.text:00383764                 mov     edx, [ebp+var_18]
.text:00383767                 mov     stru_38A660._last, edx
.text:0038376D                 mov     eax, [ebp+var_14]
.text:00383770                 mov     stru_38A660._end, eax
.text:00383775
.text:00383775 loc_383775:                             ; CODE XREF: sub_3836B0:loc_383714↑j
.text:00383775                 mov     byte_38A651, 1
.text:0038377C                 mov     al, 1
.text:0038377E
.text:0038377E loc_38377E:                             ; CODE XREF: sub_3836B0+13↑j
.text:0038377E                                         ; sub_3836B0+4D↑j ...
.text:0038377E                 mov     esp, ebp
.text:00383780                 pop     ebp
.text:00383781                 retn                    ; Return Near from Procedure
.text:00383781 sub_3836B0      endp ; sp-analysis failed
.text:00383781
.text:00383781 ; ---------------------------------------------------------------------------
.text:00383782                 align 40h
.text:003837C0
.text:003837C0 ; =============== S U B R O U T I N E =======================================
.text:003837C0
.text:003837C0 ; Attributes: bp-based frame
.text:003837C0
.text:003837C0 sub_3837C0      proc near               ; CODE XREF: sub_381131↑j
.text:003837C0
.text:003837C0 var_38          = dword ptr -38h
.text:003837C0 var_34          = dword ptr -34h
.text:003837C0 var_30          = dword ptr -30h
.text:003837C0 var_2C          = dword ptr -2Ch
.text:003837C0 var_28          = dword ptr -28h
.text:003837C0 var_24          = dword ptr -24h
.text:003837C0 var_1D          = byte ptr -1Dh
.text:003837C0 var_1C          = byte ptr -1Ch
.text:003837C0 var_1B          = byte ptr -1Bh
.text:003837C0 var_1A          = byte ptr -1Ah
.text:003837C0 var_19          = byte ptr -19h
.text:003837C0 ms_exc          = CPPEH_RECORD ptr -18h
.text:003837C0 arg_0           = dword ptr  8
.text:003837C0
.text:003837C0                 push    ebp
.text:003837C1                 mov     ebp, esp
.text:003837C3                 push    0FFFFFFFEh
.text:003837C5                 push    offset stru_389400
.text:003837CA                 push    offset SEH_412240
.text:003837CF                 mov     eax, large fs:0
.text:003837D5                 push    eax
.text:003837D6                 add     esp, 0FFFFFFD8h ; Add
.text:003837D9                 push    ebx
.text:003837DA                 push    esi
.text:003837DB                 push    edi
.text:003837DC                 mov     eax, ___security_cookie
.text:003837E1                 xor     [ebp+ms_exc.registration.ScopeTable], eax ; Logical Exclusive OR
.text:003837E4                 xor     eax, ebp        ; Logical Exclusive OR
.text:003837E6                 push    eax
.text:003837E7                 lea     eax, [ebp+ms_exc.registration] ; Load Effective Address
.text:003837EA                 mov     large fs:0, eax
.text:003837F0                 mov     [ebp+ms_exc.old_esp], esp
.text:003837F3                 mov     eax, [ebp+arg_0]
.text:003837F6                 mov     [ebp+var_30], eax
.text:003837F9                 mov     [ebp+var_24], 370000h
.text:00383800                 mov     [ebp+ms_exc.registration.TryLevel], 0
.text:00383807                 mov     ecx, [ebp+var_24]
.text:0038380A                 push    ecx
.text:0038380B                 call    sub_3833C0      ; Call Procedure
.text:00383810                 add     esp, 4          ; Add
.text:00383813                 movzx   edx, al         ; Move with Zero-Extend
.text:00383816                 test    edx, edx        ; Logical Compare
.text:00383818                 jnz     short loc_38382D ; Jump if Not Zero (ZF=0)
.text:0038381A                 mov     [ebp+var_19], 0
.text:0038381E                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00383825                 mov     al, [ebp+var_19]
.text:00383828                 jmp     loc_3838D7      ; Jump
.text:0038382D ; ---------------------------------------------------------------------------
.text:0038382D
.text:0038382D loc_38382D:                             ; CODE XREF: sub_3837C0+58↑j
.text:0038382D                 mov     eax, [ebp+var_30]
.text:00383830                 sub     eax, [ebp+var_24] ; Integer Subtraction
.text:00383833                 mov     [ebp+var_34], eax
.text:00383836                 mov     ecx, [ebp+var_34]
.text:00383839                 push    ecx
.text:0038383A                 mov     edx, [ebp+var_24]
.text:0038383D                 push    edx
.text:0038383E                 call    sub_383310      ; Call Procedure
.text:00383843                 add     esp, 8          ; Add
.text:00383846                 mov     [ebp+var_28], eax
.text:00383849                 cmp     [ebp+var_28], 0 ; Compare Two Operands
.text:0038384D                 jnz     short loc_38385F ; Jump if Not Zero (ZF=0)
.text:0038384F                 mov     [ebp+var_1A], 0
.text:00383853                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:0038385A                 mov     al, [ebp+var_1A]
.text:0038385D                 jmp     short loc_3838D7 ; Jump
.text:0038385F ; ---------------------------------------------------------------------------
.text:0038385F
.text:0038385F loc_38385F:                             ; CODE XREF: sub_3837C0+8D↑j
.text:0038385F                 mov     eax, [ebp+var_28]
.text:00383862                 mov     ecx, [eax+24h]
.text:00383865                 and     ecx, 80000000h  ; Logical AND
.text:0038386B                 jz      short loc_38387D ; Jump if Zero (ZF=1)
.text:0038386D                 mov     [ebp+var_1B], 0
.text:00383871                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00383878                 mov     al, [ebp+var_1B]
.text:0038387B                 jmp     short loc_3838D7 ; Jump
.text:0038387D ; ---------------------------------------------------------------------------
.text:0038387D
.text:0038387D loc_38387D:                             ; CODE XREF: sub_3837C0+AB↑j
.text:0038387D                 mov     [ebp+var_1C], 1
.text:00383881                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00383888                 mov     al, [ebp+var_1C]
.text:0038388B                 jmp     short loc_3838D7 ; Jump
.text:0038388D ; ---------------------------------------------------------------------------
.text:0038388D                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00383894                 jmp     short loc_3838D7 ; Jump
.text:00383896 ; ---------------------------------------------------------------------------
.text:00383896
.text:00383896 loc_383896:                             ; DATA XREF: .rdata:stru_389400↓o
.text:00383896                 mov     edx, [ebp+ms_exc.exc_ptr]
.text:00383899                 mov     eax, [edx]
.text:0038389B                 mov     ecx, [eax]
.text:0038389D                 mov     [ebp+var_38], ecx
.text:003838A0                 cmp     [ebp+var_38], 0C0000005h ; Compare Two Operands
.text:003838A7                 jnz     short loc_3838B2 ; Jump if Not Zero (ZF=0)
.text:003838A9                 mov     [ebp+var_2C], 1
.text:003838B0                 jmp     short loc_3838B9 ; Jump
.text:003838B2 ; ---------------------------------------------------------------------------
.text:003838B2
.text:003838B2 loc_3838B2:                             ; CODE XREF: sub_3837C0+E7↑j
.text:003838B2                 mov     [ebp+var_2C], 0
.text:003838B9
.text:003838B9 loc_3838B9:                             ; CODE XREF: sub_3837C0+F0↑j
.text:003838B9                 mov     eax, [ebp+var_2C]
.text:003838BC                 retn                    ; Return Near from Procedure
.text:003838BD ; ---------------------------------------------------------------------------
.text:003838BD
.text:003838BD loc_3838BD:                             ; DATA XREF: .rdata:stru_389400↓o
.text:003838BD                 mov     esp, [ebp+ms_exc.old_esp]
.text:003838C0                 mov     [ebp+var_1D], 0
.text:003838C4                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:003838CB                 mov     al, [ebp+var_1D]
.text:003838CE                 jmp     short loc_3838D7 ; Jump
.text:003838D0 ; ---------------------------------------------------------------------------
.text:003838D0                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:003838D7
.text:003838D7 loc_3838D7:                             ; CODE XREF: sub_3837C0+68↑j
.text:003838D7                                         ; sub_3837C0+9D↑j ...
.text:003838D7                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:003838DA                 mov     large fs:0, ecx
.text:003838E1                 pop     ecx
.text:003838E2                 pop     edi
.text:003838E3                 pop     esi
.text:003838E4                 pop     ebx
.text:003838E5                 mov     esp, ebp
.text:003838E7                 pop     ebp
.text:003838E8                 retn                    ; Return Near from Procedure
.text:003838E8 sub_3837C0      endp
.text:003838E8
.text:003838E8 ; ---------------------------------------------------------------------------
.text:003838E9                 db 57h dup(0CCh)
.text:00383940
.text:00383940 ; =============== S U B R O U T I N E =======================================
.text:00383940
.text:00383940 ; Attributes: bp-based frame
.text:00383940
.text:00383940 sub_383940      proc near               ; CODE XREF: sub_38118B↑j
.text:00383940
.text:00383940 arg_0           = byte ptr  8
.text:00383940
.text:00383940                 push    ebp
.text:00383941                 mov     ebp, esp
.text:00383943                 call    sub_3811BD      ; Call Procedure
.text:00383948                 test    eax, eax        ; Logical Compare
.text:0038394A                 jnz     short loc_38394E ; Jump if Not Zero (ZF=0)
.text:0038394C                 jmp     short loc_383961 ; Jump
.text:0038394E ; ---------------------------------------------------------------------------
.text:0038394E
.text:0038394E loc_38394E:                             ; CODE XREF: sub_383940+A↑j
.text:0038394E                 movzx   eax, [ebp+arg_0] ; Move with Zero-Extend
.text:00383952                 test    eax, eax        ; Logical Compare
.text:00383954                 jz      short loc_383958 ; Jump if Zero (ZF=1)
.text:00383956                 jmp     short loc_383961 ; Jump
.text:00383958 ; ---------------------------------------------------------------------------
.text:00383958
.text:00383958 loc_383958:                             ; CODE XREF: sub_383940+14↑j
.text:00383958                 xor     ecx, ecx        ; Logical Exclusive OR
.text:0038395A                 mov     edx, offset unk_38A64C
.text:0038395F                 xchg    ecx, [edx]      ; Exchange Register/Memory with Register
.text:00383961
.text:00383961 loc_383961:                             ; CODE XREF: sub_383940+C↑j
.text:00383961                                         ; sub_383940+16↑j
.text:00383961                 pop     ebp
.text:00383962                 retn                    ; Return Near from Procedure
.text:00383962 sub_383940      endp
.text:00383962
.text:00383962 ; ---------------------------------------------------------------------------
.text:00383963                 align 10h
.text:00383970
.text:00383970 ; =============== S U B R O U T I N E =======================================
.text:00383970
.text:00383970 ; Attributes: bp-based frame
.text:00383970
.text:00383970 sub_383970      proc near               ; CODE XREF: sub_38119A↑j
.text:00383970
.text:00383970 arg_0           = byte ptr  8
.text:00383970 arg_4           = byte ptr  0Ch
.text:00383970
.text:00383970                 push    ebp
.text:00383971                 mov     ebp, esp
.text:00383973                 movzx   eax, byte_38A650 ; Move with Zero-Extend
.text:0038397A                 test    eax, eax        ; Logical Compare
.text:0038397C                 jz      short loc_38398A ; Jump if Zero (ZF=1)
.text:0038397E                 movzx   ecx, [ebp+arg_4] ; Move with Zero-Extend
.text:00383982                 test    ecx, ecx        ; Logical Compare
.text:00383984                 jz      short loc_38398A ; Jump if Zero (ZF=1)
.text:00383986                 mov     al, 1
.text:00383988                 jmp     short loc_3839A6 ; Jump
.text:0038398A ; ---------------------------------------------------------------------------
.text:0038398A
.text:0038398A loc_38398A:                             ; CODE XREF: sub_383970+C↑j
.text:0038398A                                         ; sub_383970+14↑j
.text:0038398A                 movzx   edx, [ebp+arg_0] ; Move with Zero-Extend
.text:0038398E                 push    edx
.text:0038398F                 call    sub_38113B      ; Call Procedure
.text:00383994                 add     esp, 4          ; Add
.text:00383997                 movzx   eax, [ebp+arg_0] ; Move with Zero-Extend
.text:0038399B                 push    eax
.text:0038399C                 call    sub_38101E      ; Call Procedure
.text:003839A1                 add     esp, 4          ; Add
.text:003839A4                 mov     al, 1
.text:003839A6
.text:003839A6 loc_3839A6:                             ; CODE XREF: sub_383970+18↑j
.text:003839A6                 pop     ebp
.text:003839A7                 retn                    ; Return Near from Procedure
.text:003839A7 sub_383970      endp
.text:003839A7
.text:003839A7 ; ---------------------------------------------------------------------------
.text:003839A8                 align 20h
.text:003839C0
.text:003839C0 ; =============== S U B R O U T I N E =======================================
.text:003839C0
.text:003839C0 ; Attributes: bp-based frame
.text:003839C0
.text:003839C0 ; int __cdecl sub_3839C0(_PVFV Function)
.text:003839C0 sub_3839C0      proc near               ; CODE XREF: sub_38122B↑j
.text:003839C0
.text:003839C0 var_C           = dword ptr -0Ch
.text:003839C0 var_8           = dword ptr -8
.text:003839C0 var_4           = dword ptr -4
.text:003839C0 Function        = dword ptr  8
.text:003839C0
.text:003839C0                 push    ebp
.text:003839C1                 mov     ebp, esp
.text:003839C3                 sub     esp, 0Ch        ; Integer Subtraction
.text:003839C6                 mov     eax, Table._first
.text:003839CB                 mov     [ebp+var_C], eax
.text:003839CE                 cmp     [ebp+var_C], 0FFFFFFFFh ; Compare Two Operands
.text:003839D2                 jnz     short loc_3839FA ; Jump if Not Zero (ZF=0)
.text:003839D4                 mov     ecx, [ebp+Function]
.text:003839D7                 push    ecx             ; Function
.text:003839D8                 call    j__crt_atexit   ; Call Procedure
.text:003839DD                 add     esp, 4          ; Add
.text:003839E0                 test    eax, eax        ; Logical Compare
.text:003839E2                 jnz     short loc_3839EC ; Jump if Not Zero (ZF=0)
.text:003839E4                 mov     edx, [ebp+Function]
.text:003839E7                 mov     [ebp+var_4], edx
.text:003839EA                 jmp     short loc_3839F3 ; Jump
.text:003839EC ; ---------------------------------------------------------------------------
.text:003839EC
.text:003839EC loc_3839EC:                             ; CODE XREF: sub_3839C0+22↑j
.text:003839EC                 mov     [ebp+var_4], 0
.text:003839F3
.text:003839F3 loc_3839F3:                             ; CODE XREF: sub_3839C0+2A↑j
.text:003839F3                 mov     eax, [ebp+var_4]
.text:003839F6                 jmp     short loc_383A21 ; Jump
.text:003839F8 ; ---------------------------------------------------------------------------
.text:003839F8                 jmp     short loc_383A21 ; Jump
.text:003839FA ; ---------------------------------------------------------------------------
.text:003839FA
.text:003839FA loc_3839FA:                             ; CODE XREF: sub_3839C0+12↑j
.text:003839FA                 mov     eax, [ebp+Function]
.text:003839FD                 push    eax             ; Function
.text:003839FE                 push    offset Table    ; Table
.text:00383A03                 call    j__register_onexit_function ; Call Procedure
.text:00383A08                 add     esp, 8          ; Add
.text:00383A0B                 test    eax, eax        ; Logical Compare
.text:00383A0D                 jnz     short loc_383A17 ; Jump if Not Zero (ZF=0)
.text:00383A0F                 mov     ecx, [ebp+Function]
.text:00383A12                 mov     [ebp+var_8], ecx
.text:00383A15                 jmp     short loc_383A1E ; Jump
.text:00383A17 ; ---------------------------------------------------------------------------
.text:00383A17
.text:00383A17 loc_383A17:                             ; CODE XREF: sub_3839C0+4D↑j
.text:00383A17                 mov     [ebp+var_8], 0
.text:00383A1E
.text:00383A1E loc_383A1E:                             ; CODE XREF: sub_3839C0+55↑j
.text:00383A1E                 mov     eax, [ebp+var_8]
.text:00383A21
.text:00383A21 loc_383A21:                             ; CODE XREF: sub_3839C0+36↑j
.text:00383A21                                         ; sub_3839C0+38↑j
.text:00383A21                 mov     esp, ebp
.text:00383A23                 pop     ebp
.text:00383A24                 retn                    ; Return Near from Procedure
.text:00383A24 sub_3839C0      endp
.text:00383A24
.text:00383A24 ; ---------------------------------------------------------------------------
.text:00383A25                 align 20h
.text:00383A40
.text:00383A40 loc_383A40:                             ; CODE XREF: .text:0038123A↑j
.text:00383A40                 push    ebp
.text:00383A41                 mov     ebp, esp
.text:00383A43                 sub     esp, 8          ; Integer Subtraction
.text:00383A46                 mov     eax, stru_38A660._first
.text:00383A4B                 mov     [ebp-4], eax
.text:00383A4E                 cmp     dword ptr [ebp-4], 0FFFFFFFFh ; Compare Two Operands
.text:00383A52                 jnz     short loc_383A64 ; Jump if Not Zero (ZF=0)
.text:00383A54                 mov     ecx, [ebp+8]
.text:00383A57                 push    ecx
.text:00383A58                 call    j__crt_at_quick_exit ; Call Procedure
.text:00383A5D                 add     esp, 4          ; Add
.text:00383A60                 jmp     short loc_383A7B ; Jump
.text:00383A62 ; ---------------------------------------------------------------------------
.text:00383A62                 jmp     short loc_383A7B ; Jump
.text:00383A64 ; ---------------------------------------------------------------------------
.text:00383A64
.text:00383A64 loc_383A64:                             ; CODE XREF: .text:00383A52↑j
.text:00383A64                 mov     edx, [ebp+8]
.text:00383A67                 mov     [ebp-8], edx
.text:00383A6A                 mov     eax, [ebp-8]
.text:00383A6D                 push    eax
.text:00383A6E                 push    offset stru_38A660
.text:00383A73                 call    j__register_onexit_function ; Call Procedure
.text:00383A78                 add     esp, 8          ; Add
.text:00383A7B
.text:00383A7B loc_383A7B:                             ; CODE XREF: .text:00383A60↑j
.text:00383A7B                                         ; .text:00383A62↑j
.text:00383A7B                 mov     esp, ebp
.text:00383A7D                 pop     ebp
.text:00383A7E                 retn                    ; Return Near from Procedure
.text:00383A7E ; ---------------------------------------------------------------------------
.text:00383A7F                 db 11h dup(0CCh)
.text:00383A90
.text:00383A90 ; =============== S U B R O U T I N E =======================================
.text:00383A90
.text:00383A90 ; Attributes: bp-based frame
.text:00383A90
.text:00383A90 ; int __cdecl sub_383A90(_PVFV Function)
.text:00383A90 sub_383A90      proc near               ; CODE XREF: sub_38120D↑j
.text:00383A90
.text:00383A90 var_4           = dword ptr -4
.text:00383A90 Function        = dword ptr  8
.text:00383A90
.text:00383A90                 push    ebp
.text:00383A91                 mov     ebp, esp
.text:00383A93                 push    ecx
.text:00383A94                 mov     eax, [ebp+Function]
.text:00383A97                 push    eax             ; Function
.text:00383A98                 call    sub_38122B      ; Call Procedure
.text:00383A9D                 add     esp, 4          ; Add
.text:00383AA0                 test    eax, eax        ; Logical Compare
.text:00383AA2                 jz      short loc_383AAD ; Jump if Zero (ZF=1)
.text:00383AA4                 mov     [ebp+var_4], 0
.text:00383AAB                 jmp     short loc_383AB4 ; Jump
.text:00383AAD ; ---------------------------------------------------------------------------
.text:00383AAD
.text:00383AAD loc_383AAD:                             ; CODE XREF: sub_383A90+12↑j
.text:00383AAD                 mov     [ebp+var_4], 0FFFFFFFFh
.text:00383AB4
.text:00383AB4 loc_383AB4:                             ; CODE XREF: sub_383A90+1B↑j
.text:00383AB4                 mov     eax, [ebp+var_4]
.text:00383AB7                 mov     esp, ebp
.text:00383AB9                 pop     ebp
.text:00383ABA                 retn                    ; Return Near from Procedure
.text:00383ABA sub_383A90      endp
.text:00383ABA
.text:00383ABA ; ---------------------------------------------------------------------------
.text:00383ABB                 db 15h dup(0CCh)
.text:00383AD0
.text:00383AD0 ; =============== S U B R O U T I N E =======================================
.text:00383AD0
.text:00383AD0 ; Attributes: bp-based frame
.text:00383AD0
.text:00383AD0 sub_383AD0      proc near               ; CODE XREF: sub_383B60:loc_383B8C↓p
.text:00383AD0
.text:00383AD0 PerformanceCount= LARGE_INTEGER ptr -14h
.text:00383AD0 SystemTimeAsFileTime= _FILETIME ptr -0Ch
.text:00383AD0 var_4           = dword ptr -4
.text:00383AD0
.text:00383AD0                 push    ebp
.text:00383AD1                 mov     ebp, esp
.text:00383AD3                 sub     esp, 14h        ; Integer Subtraction
.text:00383AD6                 xor     eax, eax        ; Logical Exclusive OR
.text:00383AD8                 mov     [ebp+SystemTimeAsFileTime.dwLowDateTime], eax
.text:00383ADB                 mov     [ebp+SystemTimeAsFileTime.dwHighDateTime], eax
.text:00383ADE                 lea     ecx, [ebp+SystemTimeAsFileTime] ; Load Effective Address
.text:00383AE1                 push    ecx             ; lpSystemTimeAsFileTime
.text:00383AE2                 call    ds:GetSystemTimeAsFileTime ; Indirect Call Near Procedure
.text:00383AE8                 mov     edx, [ebp+SystemTimeAsFileTime.dwLowDateTime]
.text:00383AEB                 mov     [ebp+var_4], edx
.text:00383AEE                 mov     eax, [ebp+var_4]
.text:00383AF1                 xor     eax, [ebp+SystemTimeAsFileTime.dwHighDateTime] ; Logical Exclusive OR
.text:00383AF4                 mov     [ebp+var_4], eax
.text:00383AF7                 call    ds:GetCurrentThreadId ; Indirect Call Near Procedure
.text:00383AFD                 xor     eax, [ebp+var_4] ; Logical Exclusive OR
.text:00383B00                 mov     [ebp+var_4], eax
.text:00383B03                 call    ds:GetCurrentProcessId ; Indirect Call Near Procedure
.text:00383B09                 xor     eax, [ebp+var_4] ; Logical Exclusive OR
.text:00383B0C                 mov     [ebp+var_4], eax
.text:00383B0F                 lea     ecx, [ebp+PerformanceCount] ; Load Effective Address
.text:00383B12                 push    ecx             ; lpPerformanceCount
.text:00383B13                 call    ds:QueryPerformanceCounter ; Indirect Call Near Procedure
.text:00383B19                 mov     edx, [ebp+var_4]
.text:00383B1C                 xor     edx, dword ptr [ebp+PerformanceCount] ; Logical Exclusive OR
.text:00383B1F                 mov     [ebp+var_4], edx
.text:00383B22                 mov     eax, [ebp+var_4]
.text:00383B25                 xor     eax, dword ptr [ebp+PerformanceCount+4] ; Logical Exclusive OR
.text:00383B28                 mov     [ebp+var_4], eax
.text:00383B2B                 mov     ecx, [ebp+var_4]
.text:00383B2E                 lea     edx, [ebp+var_4] ; Load Effective Address
.text:00383B31                 xor     ecx, edx        ; Logical Exclusive OR
.text:00383B33                 mov     [ebp+var_4], ecx
.text:00383B36                 mov     eax, [ebp+var_4]
.text:00383B39                 mov     esp, ebp
.text:00383B3B                 pop     ebp
.text:00383B3C                 retn                    ; Return Near from Procedure
.text:00383B3C sub_383AD0      endp
.text:00383B3C
.text:00383B3C ; ---------------------------------------------------------------------------
.text:00383B3D                 db 23h dup(0CCh)
.text:00383B60
.text:00383B60 ; =============== S U B R O U T I N E =======================================
.text:00383B60
.text:00383B60 ; Attributes: bp-based frame
.text:00383B60
.text:00383B60 sub_383B60      proc near               ; CODE XREF: sub_3813CF↑j
.text:00383B60
.text:00383B60 var_4           = dword ptr -4
.text:00383B60
.text:00383B60                 push    ebp
.text:00383B61                 mov     ebp, esp
.text:00383B63                 push    ecx
.text:00383B64                 cmp     ___security_cookie, 0BB40E64Eh ; Compare Two Operands
.text:00383B6E                 jz      short loc_383B8C ; Jump if Zero (ZF=1)
.text:00383B70                 mov     eax, ___security_cookie
.text:00383B75                 and     eax, 0FFFF0000h ; Logical AND
.text:00383B7A                 jz      short loc_383B8C ; Jump if Zero (ZF=1)
.text:00383B7C                 mov     ecx, ___security_cookie
.text:00383B82                 not     ecx             ; One's Complement Negation
.text:00383B84                 mov     dword_38A004, ecx
.text:00383B8A                 jmp     short loc_383BD6 ; Jump
.text:00383B8C ; ---------------------------------------------------------------------------
.text:00383B8C
.text:00383B8C loc_383B8C:                             ; CODE XREF: sub_383B60+E↑j
.text:00383B8C                                         ; sub_383B60+1A↑j
.text:00383B8C                 call    sub_383AD0      ; Call Procedure
.text:00383B91                 mov     [ebp+var_4], eax
.text:00383B94                 cmp     [ebp+var_4], 0BB40E64Eh ; Compare Two Operands
.text:00383B9B                 jnz     short loc_383BA6 ; Jump if Not Zero (ZF=0)
.text:00383B9D                 mov     [ebp+var_4], 0BB40E64Fh
.text:00383BA4                 jmp     short loc_383BC2 ; Jump
.text:00383BA6 ; ---------------------------------------------------------------------------
.text:00383BA6
.text:00383BA6 loc_383BA6:                             ; CODE XREF: sub_383B60+3B↑j
.text:00383BA6                 mov     edx, [ebp+var_4]
.text:00383BA9                 and     edx, 0FFFF0000h ; Logical AND
.text:00383BAF                 jnz     short loc_383BC2 ; Jump if Not Zero (ZF=0)
.text:00383BB1                 mov     eax, [ebp+var_4]
.text:00383BB4                 or      eax, 4711h      ; Logical Inclusive OR
.text:00383BB9                 shl     eax, 10h        ; Shift Logical Left
.text:00383BBC                 or      eax, [ebp+var_4] ; Logical Inclusive OR
.text:00383BBF                 mov     [ebp+var_4], eax
.text:00383BC2
.text:00383BC2 loc_383BC2:                             ; CODE XREF: sub_383B60+44↑j
.text:00383BC2                                         ; sub_383B60+4F↑j
.text:00383BC2                 mov     ecx, [ebp+var_4]
.text:00383BC5                 mov     ___security_cookie, ecx
.text:00383BCB                 mov     edx, [ebp+var_4]
.text:00383BCE                 not     edx             ; One's Complement Negation
.text:00383BD0                 mov     dword_38A004, edx
.text:00383BD6
.text:00383BD6 loc_383BD6:                             ; CODE XREF: sub_383B60+2A↑j
.text:00383BD6                 mov     esp, ebp
.text:00383BD8                 pop     ebp
.text:00383BD9                 retn                    ; Return Near from Procedure
.text:00383BD9 sub_383B60      endp
.text:00383BD9
.text:00383BD9 ; ---------------------------------------------------------------------------
.text:00383BDA                 align 40h
.text:00383C00
.text:00383C00 ; =============== S U B R O U T I N E =======================================
.text:00383C00
.text:00383C00 ; Attributes: bp-based frame
.text:00383C00
.text:00383C00 sub_383C00      proc near               ; CODE XREF: UserMathErrorFunction↑j
.text:00383C00                 push    ebp
.text:00383C01                 mov     ebp, esp
.text:00383C03                 xor     eax, eax        ; Logical Exclusive OR
.text:00383C05                 pop     ebp
.text:00383C06                 retn                    ; Return Near from Procedure
.text:00383C06 sub_383C00      endp
.text:00383C06
.text:00383C06 ; ---------------------------------------------------------------------------
.text:00383C07                 align 10h
.text:00383C10
.text:00383C10 ; =============== S U B R O U T I N E =======================================
.text:00383C10
.text:00383C10 ; Attributes: bp-based frame
.text:00383C10
.text:00383C10 sub_383C10      proc near               ; CODE XREF: sub_3812B2↑j
.text:00383C10                 push    ebp
.text:00383C11                 mov     ebp, esp
.text:00383C13                 mov     eax, 1
.text:00383C18                 pop     ebp
.text:00383C19                 retn                    ; Return Near from Procedure
.text:00383C19 sub_383C10      endp
.text:00383C19
.text:00383C19 ; ---------------------------------------------------------------------------
.text:00383C1A                 align 10h
.text:00383C20
.text:00383C20 ; =============== S U B R O U T I N E =======================================
.text:00383C20
.text:00383C20 ; Attributes: bp-based frame
.text:00383C20
.text:00383C20 sub_383C20      proc near               ; CODE XREF: sub_38112C↑j
.text:00383C20                 push    ebp
.text:00383C21                 mov     ebp, esp
.text:00383C23                 xor     eax, eax        ; Logical Exclusive OR
.text:00383C25                 pop     ebp
.text:00383C26                 retn                    ; Return Near from Procedure
.text:00383C26 sub_383C20      endp
.text:00383C26
.text:00383C26 ; ---------------------------------------------------------------------------
.text:00383C27                 align 10h
.text:00383C30
.text:00383C30 ; =============== S U B R O U T I N E =======================================
.text:00383C30
.text:00383C30 ; Attributes: bp-based frame
.text:00383C30
.text:00383C30 sub_383C30      proc near               ; CODE XREF: sub_3810DC↑j
.text:00383C30                 push    ebp
.text:00383C31                 mov     ebp, esp
.text:00383C33                 mov     eax, 4000h
.text:00383C38                 pop     ebp
.text:00383C39                 retn                    ; Return Near from Procedure
.text:00383C39 sub_383C30      endp
.text:00383C39
.text:00383C39 ; ---------------------------------------------------------------------------
.text:00383C3A                 align 10h
.text:00383C40
.text:00383C40 ; =============== S U B R O U T I N E =======================================
.text:00383C40
.text:00383C40 ; Attributes: bp-based frame
.text:00383C40
.text:00383C40 sub_383C40      proc near               ; CODE XREF: sub_381159↑j
.text:00383C40                 push    ebp
.text:00383C41                 mov     ebp, esp
.text:00383C43                 xor     eax, eax        ; Logical Exclusive OR
.text:00383C45                 pop     ebp
.text:00383C46                 retn                    ; Return Near from Procedure
.text:00383C46 sub_383C40      endp
.text:00383C46
.text:00383C46 ; ---------------------------------------------------------------------------
.text:00383C47                 align 10h
.text:00383C50
.text:00383C50 ; =============== S U B R O U T I N E =======================================
.text:00383C50
.text:00383C50 ; Attributes: bp-based frame
.text:00383C50
.text:00383C50 sub_383C50      proc near               ; CODE XREF: sub_381294↑j
.text:00383C50                 push    ebp
.text:00383C51                 mov     ebp, esp
.text:00383C53                 xor     eax, eax        ; Logical Exclusive OR
.text:00383C55                 pop     ebp
.text:00383C56                 retn                    ; Return Near from Procedure
.text:00383C56 sub_383C50      endp
.text:00383C56
.text:00383C56 ; ---------------------------------------------------------------------------
.text:00383C57                 align 10h
.text:00383C60
.text:00383C60 ; =============== S U B R O U T I N E =======================================
.text:00383C60
.text:00383C60 ; Attributes: bp-based frame
.text:00383C60
.text:00383C60 sub_383C60      proc near               ; CODE XREF: sub_381091↑j
.text:00383C60                 push    ebp
.text:00383C61                 mov     ebp, esp
.text:00383C63                 push    offset ListHead ; ListHead
.text:00383C68                 call    ds:InitializeSListHead ; Indirect Call Near Procedure
.text:00383C6E                 pop     ebp
.text:00383C6F                 retn                    ; Return Near from Procedure
.text:00383C6F sub_383C60      endp
.text:00383C6F
.text:00383C6F ; ---------------------------------------------------------------------------
.text:00383C70                 align 20h
.text:00383C80
.text:00383C80 loc_383C80:                             ; CODE XREF: .text:0038127B↑j
.text:00383C80                 push    ebp
.text:00383C81                 mov     ebp, esp
.text:00383C83                 push    offset ListHead
.text:00383C88                 call    j___std_type_info_destroy_list ; Call Procedure
.text:00383C8D                 add     esp, 4          ; Add
.text:00383C90                 pop     ebp
.text:00383C91                 retn                    ; Return Near from Procedure
.text:00383C91 ; ---------------------------------------------------------------------------
.text:00383C92                 align 10h
.text:00383CA0
.text:00383CA0 ; =============== S U B R O U T I N E =======================================
.text:00383CA0
.text:00383CA0 ; Attributes: bp-based frame
.text:00383CA0
.text:00383CA0 sub_383CA0      proc near               ; CODE XREF: sub_38130C↑j
.text:00383CA0                 push    ebp
.text:00383CA1                 mov     ebp, esp
.text:00383CA3                 mov     al, 1
.text:00383CA5                 pop     ebp
.text:00383CA6                 retn                    ; Return Near from Procedure
.text:00383CA6 sub_383CA0      endp
.text:00383CA6
.text:00383CA6 ; ---------------------------------------------------------------------------
.text:00383CA7                 align 10h
.text:00383CB0
.text:00383CB0 ; =============== S U B R O U T I N E =======================================
.text:00383CB0
.text:00383CB0 ; Attributes: bp-based frame
.text:00383CB0
.text:00383CB0 sub_383CB0      proc near               ; CODE XREF: sub_381348↑j
.text:00383CB0                 push    ebp
.text:00383CB1                 mov     ebp, esp
.text:00383CB3                 push    30000h          ; Mask
.text:00383CB8                 push    10000h          ; NewValue
.text:00383CBD                 push    0               ; CurrentState
.text:00383CBF                 call    j__controlfp_s  ; Call Procedure
.text:00383CC4                 add     esp, 0Ch        ; Add
.text:00383CC7                 test    eax, eax        ; Logical Compare
.text:00383CC9                 jz      short loc_383CD2 ; Jump if Zero (ZF=1)
.text:00383CCB                 push    7
.text:00383CCD                 call    sub_3811EF      ; Call Procedure
.text:00383CD2
.text:00383CD2 loc_383CD2:                             ; CODE XREF: sub_383CB0+19↑j
.text:00383CD2                 pop     ebp
.text:00383CD3                 retn                    ; Return Near from Procedure
.text:00383CD3 sub_383CB0      endp ; sp-analysis failed
.text:00383CD3
.text:00383CD3 ; ---------------------------------------------------------------------------
.text:00383CD4                 align 10h
.text:00383CE0
.text:00383CE0 ; =============== S U B R O U T I N E =======================================
.text:00383CE0
.text:00383CE0 ; Attributes: bp-based frame
.text:00383CE0
.text:00383CE0 sub_383CE0      proc near               ; CODE XREF: sub_3813B1↑j
.text:00383CE0                 push    ebp
.text:00383CE1                 mov     ebp, esp
.text:00383CE3                 pop     ebp
.text:00383CE4                 retn                    ; Return Near from Procedure
.text:00383CE4 sub_383CE0      endp
.text:00383CE4
.text:00383CE4 ; ---------------------------------------------------------------------------
.text:00383CE5                 align 10h
.text:00383CF0
.text:00383CF0 ; =============== S U B R O U T I N E =======================================
.text:00383CF0
.text:00383CF0 ; Attributes: bp-based frame
.text:00383CF0
.text:00383CF0 sub_383CF0      proc near               ; CODE XREF: sub_38103C↑j
.text:00383CF0                 push    ebp
.text:00383CF1                 mov     ebp, esp
.text:00383CF3                 pop     ebp
.text:00383CF4                 retn                    ; Return Near from Procedure
.text:00383CF4 sub_383CF0      endp
.text:00383CF4
.text:00383CF4 ; ---------------------------------------------------------------------------
.text:00383CF5                 align 10h
.text:00383D00
.text:00383D00 ; =============== S U B R O U T I N E =======================================
.text:00383D00
.text:00383D00 ; Attributes: bp-based frame
.text:00383D00
.text:00383D00 sub_383D00      proc near               ; CODE XREF: sub_38137A↑j
.text:00383D00                 push    ebp
.text:00383D01                 mov     ebp, esp
.text:00383D03                 mov     eax, offset unk_38A688
.text:00383D08                 pop     ebp
.text:00383D09                 retn                    ; Return Near from Procedure
.text:00383D09 sub_383D00      endp
.text:00383D09
.text:00383D09 ; ---------------------------------------------------------------------------
.text:00383D0A                 align 10h
.text:00383D10
.text:00383D10 ; =============== S U B R O U T I N E =======================================
.text:00383D10
.text:00383D10 ; Attributes: bp-based frame
.text:00383D10
.text:00383D10 sub_383D10      proc near               ; CODE XREF: sub_381186↑j
.text:00383D10
.text:00383D10 var_8           = dword ptr -8
.text:00383D10 var_4           = dword ptr -4
.text:00383D10
.text:00383D10                 push    ebp
.text:00383D11                 mov     ebp, esp
.text:00383D13                 sub     esp, 8          ; Integer Subtraction
.text:00383D16                 call    sub_38131B      ; Call Procedure
.text:00383D1B                 mov     [ebp+var_4], eax
.text:00383D1E                 mov     eax, [ebp+var_4]
.text:00383D21                 mov     ecx, [eax]
.text:00383D23                 or      ecx, 24h        ; Logical Inclusive OR
.text:00383D26                 mov     edx, [eax+4]
.text:00383D29                 mov     eax, [ebp+var_4]
.text:00383D2C                 mov     [eax], ecx
.text:00383D2E                 mov     [eax+4], edx
.text:00383D31                 call    sub_38137A      ; Call Procedure
.text:00383D36                 mov     [ebp+var_8], eax
.text:00383D39                 mov     ecx, [ebp+var_8]
.text:00383D3C                 mov     edx, [ecx]
.text:00383D3E                 or      edx, 2          ; Logical Inclusive OR
.text:00383D41                 mov     eax, [ecx+4]
.text:00383D44                 mov     ecx, [ebp+var_8]
.text:00383D47                 mov     [ecx], edx
.text:00383D49                 mov     [ecx+4], eax
.text:00383D4C                 mov     esp, ebp
.text:00383D4E                 pop     ebp
.text:00383D4F                 retn                    ; Return Near from Procedure
.text:00383D4F sub_383D10      endp
.text:00383D4F
.text:00383D4F ; ---------------------------------------------------------------------------
.text:00383D50                 align 20h
.text:00383D60
.text:00383D60 ; =============== S U B R O U T I N E =======================================
.text:00383D60
.text:00383D60 ; Attributes: bp-based frame
.text:00383D60
.text:00383D60 sub_383D60      proc near               ; CODE XREF: sub_381226↑j
.text:00383D60
.text:00383D60 var_4           = dword ptr -4
.text:00383D60
.text:00383D60                 push    ebp
.text:00383D61                 mov     ebp, esp
.text:00383D63                 push    ecx
.text:00383D64                 cmp     dword_38A028, 0 ; Compare Two Operands
.text:00383D6B                 jnz     short loc_383D76 ; Jump if Not Zero (ZF=0)
.text:00383D6D                 mov     [ebp+var_4], 1
.text:00383D74                 jmp     short loc_383D7D ; Jump
.text:00383D76 ; ---------------------------------------------------------------------------
.text:00383D76
.text:00383D76 loc_383D76:                             ; CODE XREF: sub_383D60+B↑j
.text:00383D76                 mov     [ebp+var_4], 0
.text:00383D7D
.text:00383D7D loc_383D7D:                             ; CODE XREF: sub_383D60+14↑j
.text:00383D7D                 mov     eax, [ebp+var_4]
.text:00383D80                 mov     esp, ebp
.text:00383D82                 pop     ebp
.text:00383D83                 retn                    ; Return Near from Procedure
.text:00383D83 sub_383D60      endp
.text:00383D83
.text:00383D83 ; ---------------------------------------------------------------------------
.text:00383D84                 align 10h
.text:00383D90
.text:00383D90 ; =============== S U B R O U T I N E =======================================
.text:00383D90
.text:00383D90 ; Attributes: bp-based frame
.text:00383D90
.text:00383D90 sub_383D90      proc near               ; CODE XREF: sub_381050↑j
.text:00383D90                 push    ebp
.text:00383D91                 mov     ebp, esp
.text:00383D93                 mov     eax, offset unk_38A6B8
.text:00383D98                 pop     ebp
.text:00383D99                 retn                    ; Return Near from Procedure
.text:00383D99 sub_383D90      endp
.text:00383D99
.text:00383D99 ; ---------------------------------------------------------------------------
.text:00383D9A                 align 10h
.text:00383DA0
.text:00383DA0 ; =============== S U B R O U T I N E =======================================
.text:00383DA0
.text:00383DA0 ; Attributes: bp-based frame
.text:00383DA0
.text:00383DA0 sub_383DA0      proc near               ; CODE XREF: sub_381037↑j
.text:00383DA0                 push    ebp
.text:00383DA1                 mov     ebp, esp
.text:00383DA3                 mov     eax, offset unk_38A6AC
.text:00383DA8                 pop     ebp
.text:00383DA9                 retn                    ; Return Near from Procedure
.text:00383DA9 sub_383DA0      endp
.text:00383DA9
.text:00383DA9 ; ---------------------------------------------------------------------------
.text:00383DAA                 align 10h
.text:00383DB0
.text:00383DB0 ; =============== S U B R O U T I N E =======================================
.text:00383DB0
.text:00383DB0 ; Attributes: bp-based frame
.text:00383DB0
.text:00383DB0 sub_383DB0      proc near               ; CODE XREF: sub_3811EF↑j
.text:00383DB0
.text:00383DB0 var_32C         = dword ptr -32Ch
.text:00383DB0 var_2A0         = word ptr -2A0h
.text:00383DB0 var_29C         = word ptr -29Ch
.text:00383DB0 var_298         = word ptr -298h
.text:00383DB0 var_294         = word ptr -294h
.text:00383DB0 var_290         = dword ptr -290h
.text:00383DB0 var_28C         = dword ptr -28Ch
.text:00383DB0 var_288         = dword ptr -288h
.text:00383DB0 var_284         = dword ptr -284h
.text:00383DB0 var_280         = dword ptr -280h
.text:00383DB0 var_27C         = dword ptr -27Ch
.text:00383DB0 var_278         = dword ptr -278h
.text:00383DB0 var_274         = dword ptr -274h
.text:00383DB0 var_270         = word ptr -270h
.text:00383DB0 var_26C         = dword ptr -26Ch
.text:00383DB0 var_268         = dword ptr -268h
.text:00383DB0 var_264         = word ptr -264h
.text:00383DB0 var_60          = dword ptr -60h
.text:00383DB0 var_5C          = dword ptr -5Ch
.text:00383DB0 var_54          = dword ptr -54h
.text:00383DB0 ExceptionInfo   = _EXCEPTION_POINTERS ptr -10h
.text:00383DB0 var_8           = dword ptr -8
.text:00383DB0 var_2           = byte ptr -2
.text:00383DB0 var_1           = byte ptr -1
.text:00383DB0 arg_0           = dword ptr  8
.text:00383DB0
.text:00383DB0                 push    ebp
.text:00383DB1                 mov     ebp, esp
.text:00383DB3                 sub     esp, 32Ch       ; Integer Subtraction
.text:00383DB9                 push    17h             ; ProcessorFeature
.text:00383DBB                 call    ds:IsProcessorFeaturePresent ; Indirect Call Near Procedure
.text:00383DC1                 test    eax, eax        ; Logical Compare
.text:00383DC3                 jz      short loc_383DCA ; Jump if Zero (ZF=1)
.text:00383DC5                 mov     ecx, [ebp+arg_0]
.text:00383DC8                 int     29h             ; Win8: RtlFailFast(ecx)
.text:00383DCA ; ---------------------------------------------------------------------------
.text:00383DCA
.text:00383DCA loc_383DCA:                             ; CODE XREF: sub_383DB0+13↑j
.text:00383DCA                 push    3
.text:00383DCC                 call    sub_3812C1      ; Call Procedure
.text:00383DD1                 add     esp, 4          ; Add
.text:00383DD4                 push    2CCh            ; Size
.text:00383DD9                 push    0               ; Val
.text:00383DDB                 lea     eax, [ebp+var_32C] ; Load Effective Address
.text:00383DE1                 push    eax             ; void *
.text:00383DE2                 call    j_memset        ; Call Procedure
.text:00383DE7                 add     esp, 0Ch        ; Add
.text:00383DEA                 mov     [ebp+var_27C], eax
.text:00383DF0                 mov     [ebp+var_280], ecx
.text:00383DF6                 mov     [ebp+var_284], edx
.text:00383DFC                 mov     [ebp+var_288], ebx
.text:00383E02                 mov     [ebp+var_28C], esi
.text:00383E08                 mov     [ebp+var_290], edi
.text:00383E0E                 mov     [ebp+var_264], ss
.text:00383E15                 mov     [ebp+var_270], cs
.text:00383E1C                 mov     [ebp+var_294], ds
.text:00383E23                 mov     [ebp+var_298], es
.text:00383E2A                 mov     [ebp+var_29C], fs
.text:00383E31                 mov     [ebp+var_2A0], gs
.text:00383E38                 pushf                   ; Push Flags Register onto the Stack
.text:00383E39                 pop     [ebp+var_26C]
.text:00383E3F                 mov     [ebp+var_32C], 10001h
.text:00383E49                 mov     ecx, [ebp+4]
.text:00383E4C                 mov     [ebp+var_274], ecx
.text:00383E52                 lea     edx, [ebp+4]    ; Load Effective Address
.text:00383E55                 mov     [ebp+var_268], edx
.text:00383E5B                 lea     eax, [ebp+4]    ; Load Effective Address
.text:00383E5E                 mov     ecx, [eax-4]
.text:00383E61                 mov     [ebp+var_278], ecx
.text:00383E67                 push    50h ; 'P'       ; Size
.text:00383E69                 push    0               ; Val
.text:00383E6B                 lea     edx, [ebp+var_60] ; Load Effective Address
.text:00383E6E                 push    edx             ; void *
.text:00383E6F                 call    j_memset        ; Call Procedure
.text:00383E74                 add     esp, 0Ch        ; Add
.text:00383E77                 mov     [ebp+var_60], 40000015h
.text:00383E7E                 mov     [ebp+var_5C], 1
.text:00383E85                 mov     eax, [ebp+4]
.text:00383E88                 mov     [ebp+var_54], eax
.text:00383E8B                 call    ds:IsDebuggerPresent ; Indirect Call Near Procedure
.text:00383E91                 cmp     eax, 1          ; Compare Two Operands
.text:00383E94                 jnz     short loc_383E9C ; Jump if Not Zero (ZF=0)
.text:00383E96                 mov     [ebp+var_1], 1
.text:00383E9A                 jmp     short loc_383EA0 ; Jump
.text:00383E9C ; ---------------------------------------------------------------------------
.text:00383E9C
.text:00383E9C loc_383E9C:                             ; CODE XREF: sub_383DB0+E4↑j
.text:00383E9C                 mov     [ebp+var_1], 0
.text:00383EA0
.text:00383EA0 loc_383EA0:                             ; CODE XREF: sub_383DB0+EA↑j
.text:00383EA0                 mov     cl, [ebp+var_1]
.text:00383EA3                 mov     [ebp+var_2], cl
.text:00383EA6                 lea     edx, [ebp+var_60] ; Load Effective Address
.text:00383EA9                 mov     [ebp+ExceptionInfo.ExceptionRecord], edx
.text:00383EAC                 lea     eax, [ebp+var_32C] ; Load Effective Address
.text:00383EB2                 mov     [ebp+ExceptionInfo.ContextRecord], eax
.text:00383EB5                 push    0               ; lpTopLevelExceptionFilter
.text:00383EB7                 call    ds:SetUnhandledExceptionFilter ; Indirect Call Near Procedure
.text:00383EBD                 lea     ecx, [ebp+ExceptionInfo] ; Load Effective Address
.text:00383EC0                 push    ecx             ; ExceptionInfo
.text:00383EC1                 call    ds:UnhandledExceptionFilter ; Indirect Call Near Procedure
.text:00383EC7                 mov     [ebp+var_8], eax
.text:00383ECA                 cmp     [ebp+var_8], 0  ; Compare Two Operands
.text:00383ECE                 jnz     short loc_383EE2 ; Jump if Not Zero (ZF=0)
.text:00383ED0                 movzx   edx, [ebp+var_2] ; Move with Zero-Extend
.text:00383ED4                 test    edx, edx        ; Logical Compare
.text:00383ED6                 jnz     short loc_383EE2 ; Jump if Not Zero (ZF=0)
.text:00383ED8                 push    3
.text:00383EDA                 call    sub_3812C1      ; Call Procedure
.text:00383EDF                 add     esp, 4          ; Add
.text:00383EE2
.text:00383EE2 loc_383EE2:                             ; CODE XREF: sub_383DB0+11E↑j
.text:00383EE2                                         ; sub_383DB0+126↑j
.text:00383EE2                 mov     esp, ebp
.text:00383EE4                 pop     ebp
.text:00383EE5                 retn                    ; Return Near from Procedure
.text:00383EE5 sub_383DB0      endp
.text:00383EE5
.text:00383EE5 ; ---------------------------------------------------------------------------
.text:00383EE6                 db 5Ah dup(0CCh)
.text:00383F40 ; ---------------------------------------------------------------------------
.text:00383F40
.text:00383F40 loc_383F40:                             ; CODE XREF: .text:003810B9↑j
.text:00383F40                 push    ebp
.text:00383F41                 mov     ebp, esp
.text:00383F43                 sub     esp, 48h        ; Integer Subtraction
.text:00383F46                 push    44h ; 'D'
.text:00383F48                 push    0
.text:00383F4A                 lea     eax, [ebp-48h]  ; Load Effective Address
.text:00383F4D                 push    eax
.text:00383F4E                 call    j_memset        ; Call Procedure
.text:00383F53                 add     esp, 0Ch        ; Add
.text:00383F56                 lea     ecx, [ebp-48h]  ; Load Effective Address
.text:00383F59                 push    ecx
.text:00383F5A                 call    ds:GetStartupInfoW ; Indirect Call Near Procedure
.text:00383F60                 mov     edx, [ebp-1Ch]
.text:00383F63                 and     edx, 1          ; Logical AND
.text:00383F66                 jz      short loc_383F71 ; Jump if Zero (ZF=1)
.text:00383F68                 movzx   eax, word ptr [ebp-18h] ; Move with Zero-Extend
.text:00383F6C                 mov     [ebp-4], eax
.text:00383F6F                 jmp     short loc_383F78 ; Jump
.text:00383F71 ; ---------------------------------------------------------------------------
.text:00383F71
.text:00383F71 loc_383F71:                             ; CODE XREF: .text:00383F66↑j
.text:00383F71                 mov     dword ptr [ebp-4], 0Ah
.text:00383F78
.text:00383F78 loc_383F78:                             ; CODE XREF: .text:00383F6F↑j
.text:00383F78                 mov     ax, [ebp-4]
.text:00383F7C                 mov     esp, ebp
.text:00383F7E                 pop     ebp
.text:00383F7F                 retn                    ; Return Near from Procedure
.text:00383F7F ; ---------------------------------------------------------------------------
.text:00383F80                 db 10h dup(0CCh)
.text:00383F90
.text:00383F90 ; =============== S U B R O U T I N E =======================================
.text:00383F90
.text:00383F90 ; Attributes: bp-based frame
.text:00383F90
.text:00383F90 sub_383F90      proc near               ; CODE XREF: sub_381230↑j
.text:00383F90                 push    ebp
.text:00383F91                 mov     ebp, esp
.text:00383F93                 call    sub_38105A      ; Call Procedure
.text:00383F98                 pop     ebp
.text:00383F99                 retn                    ; Return Near from Procedure
.text:00383F99 sub_383F90      endp
.text:00383F99
.text:00383F99 ; ---------------------------------------------------------------------------
.text:00383F9A                 align 10h
.text:00383FA0
.text:00383FA0 ; =============== S U B R O U T I N E =======================================
.text:00383FA0
.text:00383FA0 ; Attributes: bp-based frame
.text:00383FA0
.text:00383FA0 sub_383FA0      proc near               ; CODE XREF: sub_381299↑j
.text:00383FA0                 push    ebp
.text:00383FA1                 mov     ebp, esp
.text:00383FA3                 xor     eax, eax        ; Logical Exclusive OR
.text:00383FA5                 pop     ebp
.text:00383FA6                 retn                    ; Return Near from Procedure
.text:00383FA6 sub_383FA0      endp
.text:00383FA6
.text:00383FA6 ; ---------------------------------------------------------------------------
.text:00383FA7                 align 10h
.text:00383FB0
.text:00383FB0 ; =============== S U B R O U T I N E =======================================
.text:00383FB0
.text:00383FB0 ; Attributes: bp-based frame
.text:00383FB0
.text:00383FB0 sub_383FB0      proc near               ; CODE XREF: sub_381316↑j
.text:00383FB0
.text:00383FB0 var_8           = dword ptr -8
.text:00383FB0 var_4           = dword ptr -4
.text:00383FB0
.text:00383FB0                 push    ebp
.text:00383FB1                 mov     ebp, esp
.text:00383FB3                 sub     esp, 8          ; Integer Subtraction
.text:00383FB6                 push    0               ; lpModuleName
.text:00383FB8                 call    ds:GetModuleHandleW ; Indirect Call Near Procedure
.text:00383FBE                 mov     [ebp+var_4], eax
.text:00383FC1                 cmp     [ebp+var_4], 0  ; Compare Two Operands
.text:00383FC5                 jnz     short loc_383FCB ; Jump if Not Zero (ZF=0)
.text:00383FC7                 xor     al, al          ; Logical Exclusive OR
.text:00383FC9                 jmp     short loc_38402F ; Jump
.text:00383FCB ; ---------------------------------------------------------------------------
.text:00383FCB
.text:00383FCB loc_383FCB:                             ; CODE XREF: sub_383FB0+15↑j
.text:00383FCB                 mov     eax, [ebp+var_4]
.text:00383FCE                 movzx   ecx, word ptr [eax] ; Move with Zero-Extend
.text:00383FD1                 cmp     ecx, 5A4Dh      ; Compare Two Operands
.text:00383FD7                 jz      short loc_383FDD ; Jump if Zero (ZF=1)
.text:00383FD9                 xor     al, al          ; Logical Exclusive OR
.text:00383FDB                 jmp     short loc_38402F ; Jump
.text:00383FDD ; ---------------------------------------------------------------------------
.text:00383FDD
.text:00383FDD loc_383FDD:                             ; CODE XREF: sub_383FB0+27↑j
.text:00383FDD                 mov     edx, [ebp+var_4]
.text:00383FE0                 mov     eax, [ebp+var_4]
.text:00383FE3                 add     eax, [edx+3Ch]  ; Add
.text:00383FE6                 mov     [ebp+var_8], eax
.text:00383FE9                 mov     ecx, [ebp+var_8]
.text:00383FEC                 cmp     dword ptr [ecx], 4550h ; Compare Two Operands
.text:00383FF2                 jz      short loc_383FF8 ; Jump if Zero (ZF=1)
.text:00383FF4                 xor     al, al          ; Logical Exclusive OR
.text:00383FF6                 jmp     short loc_38402F ; Jump
.text:00383FF8 ; ---------------------------------------------------------------------------
.text:00383FF8
.text:00383FF8 loc_383FF8:                             ; CODE XREF: sub_383FB0+42↑j
.text:00383FF8                 mov     edx, [ebp+var_8]
.text:00383FFB                 movzx   eax, word ptr [edx+18h] ; Move with Zero-Extend
.text:00383FFF                 cmp     eax, 10Bh       ; Compare Two Operands
.text:00384004                 jz      short loc_38400A ; Jump if Zero (ZF=1)
.text:00384006                 xor     al, al          ; Logical Exclusive OR
.text:00384008                 jmp     short loc_38402F ; Jump
.text:0038400A ; ---------------------------------------------------------------------------
.text:0038400A
.text:0038400A loc_38400A:                             ; CODE XREF: sub_383FB0+54↑j
.text:0038400A                 mov     ecx, [ebp+var_8]
.text:0038400D                 cmp     dword ptr [ecx+74h], 0Eh ; Compare Two Operands
.text:00384011                 ja      short loc_384017 ; Jump if Above (CF=0 & ZF=0)
.text:00384013                 xor     al, al          ; Logical Exclusive OR
.text:00384015                 jmp     short loc_38402F ; Jump
.text:00384017 ; ---------------------------------------------------------------------------
.text:00384017
.text:00384017 loc_384017:                             ; CODE XREF: sub_383FB0+61↑j
.text:00384017                 mov     edx, 8
.text:0038401C                 imul    eax, edx, 0Eh   ; Signed Multiply
.text:0038401F                 mov     ecx, [ebp+var_8]
.text:00384022                 cmp     dword ptr [ecx+eax+78h], 0 ; Compare Two Operands
.text:00384027                 jnz     short loc_38402D ; Jump if Not Zero (ZF=0)
.text:00384029                 xor     al, al          ; Logical Exclusive OR
.text:0038402B                 jmp     short loc_38402F ; Jump
.text:0038402D ; ---------------------------------------------------------------------------
.text:0038402D
.text:0038402D loc_38402D:                             ; CODE XREF: sub_383FB0+77↑j
.text:0038402D                 mov     al, 1
.text:0038402F
.text:0038402F loc_38402F:                             ; CODE XREF: sub_383FB0+19↑j
.text:0038402F                                         ; sub_383FB0+2B↑j ...
.text:0038402F                 mov     esp, ebp
.text:00384031                 pop     ebp
.text:00384032                 retn                    ; Return Near from Procedure
.text:00384032 sub_383FB0      endp
.text:00384032
.text:00384032 ; ---------------------------------------------------------------------------
.text:00384033                 db 2Dh dup(0CCh)
.text:00384060
.text:00384060 ; =============== S U B R O U T I N E =======================================
.text:00384060
.text:00384060 ; Attributes: bp-based frame
.text:00384060
.text:00384060 sub_384060      proc near               ; CODE XREF: sub_38134D↑j
.text:00384060                 push    ebp
.text:00384061                 mov     ebp, esp
.text:00384063                 push    offset TopLevelExceptionFilter ; lpTopLevelExceptionFilter
.text:00384068                 call    ds:SetUnhandledExceptionFilter ; Indirect Call Near Procedure
.text:0038406E                 pop     ebp
.text:0038406F                 retn                    ; Return Near from Procedure
.text:0038406F sub_384060      endp
.text:0038406F
.text:0038406F ; ---------------------------------------------------------------------------
.text:00384070                 align 20h
.text:00384080
.text:00384080 ; =============== S U B R O U T I N E =======================================
.text:00384080
.text:00384080 ; Attributes: bp-based frame
.text:00384080
.text:00384080 sub_384080      proc near               ; CODE XREF: sub_38105A↑j
.text:00384080                                         ; .text:0038123F↑j
.text:00384080                 push    ebp
.text:00384081                 mov     ebp, esp
.text:00384083                 xor     eax, eax        ; Logical Exclusive OR
.text:00384085                 pop     ebp
.text:00384086                 retn                    ; Return Near from Procedure
.text:00384086 sub_384080      endp
.text:00384086
.text:00384086 ; ---------------------------------------------------------------------------
.text:00384087                 align 10h
.text:00384090
.text:00384090 ; =============== S U B R O U T I N E =======================================
.text:00384090
.text:00384090 ; Attributes: bp-based frame
.text:00384090
.text:00384090 sub_384090      proc near               ; CODE XREF: TopLevelExceptionFilter↑j
.text:00384090
.text:00384090 var_8           = dword ptr -8
.text:00384090 var_4           = dword ptr -4
.text:00384090 arg_0           = dword ptr  8
.text:00384090
.text:00384090                 push    ebp
.text:00384091                 mov     ebp, esp
.text:00384093                 sub     esp, 8          ; Integer Subtraction
.text:00384096                 mov     eax, [ebp+arg_0]
.text:00384099                 mov     ecx, [eax]
.text:0038409B                 mov     [ebp+var_4], ecx
.text:0038409E                 mov     edx, [ebp+var_4]
.text:003840A1                 cmp     dword ptr [edx], 0E06D7363h ; Compare Two Operands
.text:003840A7                 jnz     short loc_384104 ; Jump if Not Zero (ZF=0)
.text:003840A9                 mov     eax, [ebp+var_4]
.text:003840AC                 cmp     dword ptr [eax+10h], 3 ; Compare Two Operands
.text:003840B0                 jnz     short loc_384104 ; Jump if Not Zero (ZF=0)
.text:003840B2                 mov     ecx, [ebp+var_4]
.text:003840B5                 cmp     dword ptr [ecx+14h], 19930520h ; Compare Two Operands
.text:003840BC                 jz      short loc_3840E2 ; Jump if Zero (ZF=1)
.text:003840BE                 mov     edx, [ebp+var_4]
.text:003840C1                 cmp     dword ptr [edx+14h], 19930521h ; Compare Two Operands
.text:003840C8                 jz      short loc_3840E2 ; Jump if Zero (ZF=1)
.text:003840CA                 mov     eax, [ebp+var_4]
.text:003840CD                 cmp     dword ptr [eax+14h], 19930522h ; Compare Two Operands
.text:003840D4                 jz      short loc_3840E2 ; Jump if Zero (ZF=1)
.text:003840D6                 mov     ecx, [ebp+var_4]
.text:003840D9                 cmp     dword ptr [ecx+14h], 1994000h ; Compare Two Operands
.text:003840E0                 jnz     short loc_384104 ; Jump if Not Zero (ZF=0)
.text:003840E2
.text:003840E2 loc_3840E2:                             ; CODE XREF: sub_384090+2C↑j
.text:003840E2                                         ; sub_384090+38↑j ...
.text:003840E2                 call    j___current_exception ; Call Procedure
.text:003840E7                 mov     edx, [ebp+var_4]
.text:003840EA                 mov     [eax], edx
.text:003840EC                 mov     eax, [ebp+arg_0]
.text:003840EF                 mov     ecx, [eax+4]
.text:003840F2                 mov     [ebp+var_8], ecx
.text:003840F5                 call    j___current_exception_context ; Call Procedure
.text:003840FA                 mov     edx, [ebp+var_8]
.text:003840FD                 mov     [eax], edx
.text:003840FF                 call    j_terminate     ; Call Procedure
.text:00384104
.text:00384104 loc_384104:                             ; CODE XREF: sub_384090+17↑j
.text:00384104                                         ; sub_384090+20↑j ...
.text:00384104                 xor     eax, eax        ; Logical Exclusive OR
.text:00384106                 mov     esp, ebp
.text:00384108                 pop     ebp
.text:00384109                 retn    4               ; Return Near from Procedure
.text:00384109 sub_384090      endp
.text:00384109
.text:00384109 ; ---------------------------------------------------------------------------
.text:0038410C                 db 24h dup(0CCh)
.text:00384130
.text:00384130 ; =============== S U B R O U T I N E =======================================
.text:00384130
.text:00384130 ; Attributes: bp-based frame
.text:00384130
.text:00384130 sub_384130      proc near               ; CODE XREF: sub_3812C1↑j
.text:00384130                 push    ebp
.text:00384131                 mov     ebp, esp
.text:00384133                 mov     dword_38A694, 0
.text:0038413D                 pop     ebp
.text:0038413E                 retn                    ; Return Near from Procedure
.text:0038413E sub_384130      endp
.text:0038413E
.text:0038413E ; ---------------------------------------------------------------------------
.text:0038413F                 db 11h dup(0CCh)
.text:00384150
.text:00384150 ; =============== S U B R O U T I N E =======================================
.text:00384150
.text:00384150
.text:00384150 sub_384150      proc near               ; CODE XREF: sub_38100A↑j
.text:00384150                 push    esi
.text:00384151                 mov     esi, offset unk_388DA8
.text:00384156                 mov     eax, esi
.text:00384158                 cmp     eax, offset unk_388FAC ; Compare Two Operands
.text:0038415D                 jnb     short loc_38417C ; Jump if Not Below (CF=0)
.text:0038415F                 push    edi
.text:00384160
.text:00384160 loc_384160:                             ; CODE XREF: sub_384150+29↓j
.text:00384160                 mov     edi, [esi]
.text:00384162                 test    edi, edi        ; Logical Compare
.text:00384164                 jz      short loc_384170 ; Jump if Zero (ZF=1)
.text:00384166                 mov     ecx, edi
.text:00384168                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:0038416E                 call    edi             ; Indirect Call Near Procedure
.text:00384170
.text:00384170 loc_384170:                             ; CODE XREF: sub_384150+14↑j
.text:00384170                 add     esi, 4          ; Add
.text:00384173                 cmp     esi, offset unk_388FAC ; Compare Two Operands
.text:00384179                 jb      short loc_384160 ; Jump if Below (CF=1)
.text:0038417B                 pop     edi
.text:0038417C
.text:0038417C loc_38417C:                             ; CODE XREF: sub_384150+D↑j
.text:0038417C                 pop     esi
.text:0038417D                 retn                    ; Return Near from Procedure
.text:0038417D sub_384150      endp
.text:0038417D
.text:0038417D ; ---------------------------------------------------------------------------
.text:0038417E                 db 12h dup(0CCh)
.text:00384190
.text:00384190 ; =============== S U B R O U T I N E =======================================
.text:00384190
.text:00384190
.text:00384190 sub_384190      proc near               ; CODE XREF: Function↑j
.text:00384190                 push    esi
.text:00384191                 mov     esi, offset unk_3890B4
.text:00384196                 mov     eax, esi
.text:00384198                 cmp     eax, offset unk_3892B8 ; Compare Two Operands
.text:0038419D                 jnb     short loc_3841BC ; Jump if Not Below (CF=0)
.text:0038419F                 push    edi
.text:003841A0
.text:003841A0 loc_3841A0:                             ; CODE XREF: sub_384190+29↓j
.text:003841A0                 mov     edi, [esi]
.text:003841A2                 test    edi, edi        ; Logical Compare
.text:003841A4                 jz      short loc_3841B0 ; Jump if Zero (ZF=1)
.text:003841A6                 mov     ecx, edi
.text:003841A8                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:003841AE                 call    edi             ; Indirect Call Near Procedure
.text:003841B0
.text:003841B0 loc_3841B0:                             ; CODE XREF: sub_384190+14↑j
.text:003841B0                 add     esi, 4          ; Add
.text:003841B3                 cmp     esi, offset unk_3892B8 ; Compare Two Operands
.text:003841B9                 jb      short loc_3841A0 ; Jump if Below (CF=1)
.text:003841BB                 pop     edi
.text:003841BC
.text:003841BC loc_3841BC:                             ; CODE XREF: sub_384190+D↑j
.text:003841BC                 pop     esi
.text:003841BD                 retn                    ; Return Near from Procedure
.text:003841BD sub_384190      endp
.text:003841BD
.text:003841BD ; ---------------------------------------------------------------------------
.text:003841BE                 db 12h dup(0CCh)
.text:003841D0
.text:003841D0 ; =============== S U B R O U T I N E =======================================
.text:003841D0
.text:003841D0 ; Attributes: bp-based frame
.text:003841D0
.text:003841D0 SEH_412240      proc near               ; CODE XREF: SEH_412C20+14↓p
.text:003841D0                                         ; DATA XREF: sub_382240+A↑o ...
.text:003841D0
.text:003841D0 arg_0           = dword ptr  8
.text:003841D0 arg_4           = dword ptr  0Ch
.text:003841D0 arg_8           = dword ptr  10h
.text:003841D0 arg_C           = dword ptr  14h
.text:003841D0
.text:003841D0 SEH_4137C0:
.text:003841D0                 push    ebp
.text:003841D1                 mov     ebp, esp
.text:003841D3                 mov     eax, [ebp+arg_0]
.text:003841D6                 mov     ecx, [eax]
.text:003841D8                 push    ecx
.text:003841D9                 call    sub_3813BB      ; Call Procedure
.text:003841DE                 add     esp, 4          ; Add
.text:003841E1                 mov     edx, [ebp+arg_0]
.text:003841E4                 mov     [edx], eax
.text:003841E6                 mov     eax, [ebp+arg_C]
.text:003841E9                 push    eax
.text:003841EA                 mov     ecx, [ebp+arg_8]
.text:003841ED                 push    ecx
.text:003841EE                 mov     edx, [ebp+arg_4]
.text:003841F1                 push    edx
.text:003841F2                 mov     eax, [ebp+arg_0]
.text:003841F5                 push    eax
.text:003841F6                 push    offset j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:003841FB                 push    offset ___security_cookie
.text:00384200                 call    j__except_handler4_common ; Call Procedure
.text:00384205                 add     esp, 18h        ; Add
.text:00384208                 pop     ebp
.text:00384209                 retn                    ; Return Near from Procedure
.text:00384209 SEH_412240      endp
.text:00384209
.text:00384209 ; ---------------------------------------------------------------------------
.text:0038420A                 align 20h
.text:00384220
.text:00384220 ; =============== S U B R O U T I N E =======================================
.text:00384220
.text:00384220 ; Attributes: bp-based frame
.text:00384220
.text:00384220 sub_384220      proc near               ; CODE XREF: sub_38128F↑j
.text:00384220
.text:00384220 var_4           = dword ptr -4
.text:00384220
.text:00384220                 push    ebp
.text:00384221                 mov     ebp, esp
.text:00384223                 push    ecx
.text:00384224                 mov     [ebp+var_4], ecx
.text:00384227                 mov     esp, ebp
.text:00384229                 pop     ebp
.text:0038422A                 retn                    ; Return Near from Procedure
.text:0038422A sub_384220      endp
.text:0038422A
.text:0038422A ; ---------------------------------------------------------------------------
.text:0038422B                 align 10h
.text:00384230
.text:00384230 ; =============== S U B R O U T I N E =======================================
.text:00384230
.text:00384230 ; Attributes: bp-based frame
.text:00384230
.text:00384230 sub_384230      proc near               ; CODE XREF: sub_381339↑j
.text:00384230
.text:00384230 var_4           = dword ptr -4
.text:00384230 arg_0           = dword ptr  8
.text:00384230
.text:00384230                 push    ebp
.text:00384231                 mov     ebp, esp
.text:00384233                 push    ecx
.text:00384234                 mov     eax, [ebp+arg_0]
.text:00384237                 mov     ecx, [eax]
.text:00384239                 mov     [ebp+var_4], ecx
.text:0038423C                 mov     eax, [ebp+var_4]
.text:0038423F                 mov     esp, ebp
.text:00384241                 pop     ebp
.text:00384242                 retn                    ; Return Near from Procedure
.text:00384242 sub_384230      endp
.text:00384242
.text:00384242 ; ---------------------------------------------------------------------------
.text:00384243                 align 10h
.text:00384250
.text:00384250 ; =============== S U B R O U T I N E =======================================
.text:00384250
.text:00384250 ; Attributes: bp-based frame
.text:00384250
.text:00384250 sub_384250      proc near               ; CODE XREF: sub_38109B↑j
.text:00384250
.text:00384250 arg_0           = dword ptr  8
.text:00384250
.text:00384250                 push    ebp
.text:00384251                 mov     ebp, esp
.text:00384253                 mov     eax, [ebp+arg_0]
.text:00384256                 push    eax
.text:00384257                 call    sub_381339      ; Call Procedure
.text:0038425C                 add     esp, 4          ; Add
.text:0038425F                 pop     ebp
.text:00384260                 retn                    ; Return Near from Procedure
.text:00384260 sub_384250      endp
.text:00384260
.text:00384260 ; ---------------------------------------------------------------------------
.text:00384261                 align 10h
.text:00384270
.text:00384270 loc_384270:                             ; CODE XREF: .text:003812B7↑j
.text:00384270                 push    ebp
.text:00384271                 mov     ebp, esp
.text:00384273                 mov     eax, [ebp+8]
.text:00384276                 push    eax
.text:00384277                 call    sub_384330      ; Call Procedure
.text:0038427C                 add     esp, 4          ; Add
.text:0038427F                 test    eax, eax        ; Logical Compare
.text:00384281                 jz      short loc_384284 ; Jump if Zero (ZF=1)
.text:00384283                 int     3               ; Trap to Debugger
.text:00384284
.text:00384284 loc_384284:                             ; CODE XREF: .text:00384281↑j
.text:00384284                 pop     ebp
.text:00384285                 retn                    ; Return Near from Procedure
.text:00384285 ; ---------------------------------------------------------------------------
.text:00384286                 align 10h
.text:00384290
.text:00384290 loc_384290:                             ; CODE XREF: .text:00381217↑j
.text:00384290                 push    ebp
.text:00384291                 mov     ebp, esp
.text:00384293                 mov     eax, [ebp+8]
.text:00384296                 push    eax
.text:00384297                 call    sub_384330      ; Call Procedure
.text:0038429C                 add     esp, 4          ; Add
.text:0038429F                 test    eax, eax        ; Logical Compare
.text:003842A1                 jz      short loc_3842AA ; Jump if Zero (ZF=1)
.text:003842A3                 mov     ecx, 41h ; 'A'
.text:003842A8                 int     29h             ; Win8: RtlFailFast(ecx)
.text:003842AA ; ---------------------------------------------------------------------------
.text:003842AA
.text:003842AA loc_3842AA:                             ; CODE XREF: .text:003842A1↑j
.text:003842AA                 pop     ebp
.text:003842AB                 retn                    ; Return Near from Procedure
.text:003842AB ; ---------------------------------------------------------------------------
.text:003842AC                 align 20h
.text:003842C0
.text:003842C0 loc_3842C0:                             ; CODE XREF: .text:00381073↑j
.text:003842C0                 push    ebp
.text:003842C1                 mov     ebp, esp
.text:003842C3                 pop     ebp
.text:003842C4                 retn                    ; Return Near from Procedure
.text:003842C4 ; ---------------------------------------------------------------------------
.text:003842C5                 align 10h
.text:003842D0
.text:003842D0 loc_3842D0:                             ; CODE XREF: .text:003812D5↑j
.text:003842D0                 push    ebp
.text:003842D1                 mov     ebp, esp
.text:003842D3                 mov     eax, [ebp+8]
.text:003842D6                 push    eax
.text:003842D7                 call    sub_384330      ; Call Procedure
.text:003842DC                 add     esp, 4          ; Add
.text:003842DF                 test    eax, eax        ; Logical Compare
.text:003842E1                 jz      short loc_3842EF ; Jump if Zero (ZF=1)
.text:003842E3                 mov     ecx, [ebp+8]
.text:003842E6                 push    ecx
.text:003842E7                 call    sub_384300      ; Call Procedure
.text:003842EC                 add     esp, 4          ; Add
.text:003842EF
.text:003842EF loc_3842EF:                             ; CODE XREF: .text:003842E1↑j
.text:003842EF                 pop     ebp
.text:003842F0                 retn                    ; Return Near from Procedure
.text:003842F0 ; ---------------------------------------------------------------------------
.text:003842F1                 align 10h
.text:00384300
.text:00384300 ; =============== S U B R O U T I N E =======================================
.text:00384300
.text:00384300 ; Attributes: bp-based frame
.text:00384300
.text:00384300 sub_384300      proc near               ; CODE XREF: .text:003842E7↑p
.text:00384300                                         ; .text:0038444F↓p
.text:00384300
.text:00384300 arg_0           = dword ptr  8
.text:00384300
.text:00384300                 push    ebp
.text:00384301                 mov     ebp, esp
.text:00384303                 cmp     ds:___castguard_check_failure_os_handled_fptr, 0 ; Compare Two Operands
.text:0038430A                 jz      short loc_38431B ; Jump if Zero (ZF=1)
.text:0038430C                 mov     eax, [ebp+arg_0]
.text:0038430F                 push    eax
.text:00384310                 mov     ecx, ds:___castguard_check_failure_os_handled_fptr
.text:00384316                 call    ecx ; ___castguard_check_failure_os_handled_fptr ; Indirect Call Near Procedure
.text:00384318                 add     esp, 4          ; Add
.text:0038431B
.text:0038431B loc_38431B:                             ; CODE XREF: sub_384300+A↑j
.text:0038431B                 pop     ebp
.text:0038431C                 retn                    ; Return Near from Procedure
.text:0038431C sub_384300      endp
.text:0038431C
.text:0038431C ; ---------------------------------------------------------------------------
.text:0038431D                 db 13h dup(0CCh)
.text:00384330
.text:00384330 ; =============== S U B R O U T I N E =======================================
.text:00384330
.text:00384330 ; Attributes: bp-based frame
.text:00384330
.text:00384330 sub_384330      proc near               ; CODE XREF: .text:00384277↑p
.text:00384330                                         ; .text:00384297↑p ...
.text:00384330
.text:00384330 var_10          = dword ptr -10h
.text:00384330 var_C           = dword ptr -0Ch
.text:00384330 var_8           = dword ptr -8
.text:00384330 var_4           = dword ptr -4
.text:00384330 arg_0           = dword ptr  8
.text:00384330
.text:00384330                 push    ebp
.text:00384331                 mov     ebp, esp
.text:00384333                 sub     esp, 10h        ; Integer Subtraction
.text:00384336                 mov     [ebp+var_4], offset unk_388940
.text:0038433D                 mov     [ebp+var_C], offset unk_388A80
.text:00384344                 mov     eax, [ebp+var_C]
.text:00384347                 sub     eax, [ebp+var_4] ; Integer Subtraction
.text:0038434A                 mov     [ebp+var_10], eax
.text:0038434D                 mov     ecx, [ebp+arg_0]
.text:00384350                 sub     ecx, [ebp+var_4] ; Integer Subtraction
.text:00384353                 cmp     ecx, [ebp+var_10] ; Compare Two Operands
.text:00384356                 ja      short loc_384361 ; Jump if Above (CF=0 & ZF=0)
.text:00384358                 mov     [ebp+var_8], 1
.text:0038435F                 jmp     short loc_384368 ; Jump
.text:00384361 ; ---------------------------------------------------------------------------
.text:00384361
.text:00384361 loc_384361:                             ; CODE XREF: sub_384330+26↑j
.text:00384361                 mov     [ebp+var_8], 0
.text:00384368
.text:00384368 loc_384368:                             ; CODE XREF: sub_384330+2F↑j
.text:00384368                 mov     eax, [ebp+var_8]
.text:0038436B                 mov     esp, ebp
.text:0038436D                 pop     ebp
.text:0038436E                 retn                    ; Return Near from Procedure
.text:0038436E sub_384330      endp
.text:0038436E
.text:0038436E ; ---------------------------------------------------------------------------
.text:0038436F                 align 20h
.text:00384380
.text:00384380 loc_384380:                             ; CODE XREF: .text:003812D0↑j
.text:00384380                 push    ebp
.text:00384381                 mov     ebp, esp
.text:00384383                 mov     eax, [ebp+10h]
.text:00384386                 push    eax
.text:00384387                 mov     ecx, [ebp+0Ch]
.text:0038438A                 push    ecx
.text:0038438B                 mov     edx, [ebp+8]
.text:0038438E                 push    edx
.text:0038438F                 call    sub_384470      ; Call Procedure
.text:00384394                 add     esp, 0Ch        ; Add
.text:00384397                 test    eax, eax        ; Logical Compare
.text:00384399                 jz      short loc_3843AC ; Jump if Zero (ZF=1)
.text:0038439B                 mov     eax, [ebp+8]
.text:0038439E                 push    eax
.text:0038439F                 call    sub_384330      ; Call Procedure
.text:003843A4                 add     esp, 4          ; Add
.text:003843A7                 test    eax, eax        ; Logical Compare
.text:003843A9                 jz      short loc_3843AC ; Jump if Zero (ZF=1)
.text:003843AB                 int     3               ; Trap to Debugger
.text:003843AC
.text:003843AC loc_3843AC:                             ; CODE XREF: .text:00384399↑j
.text:003843AC                                         ; .text:003843A9↑j
.text:003843AC                 pop     ebp
.text:003843AD                 retn                    ; Return Near from Procedure
.text:003843AD ; ---------------------------------------------------------------------------
.text:003843AE                 align 20h
.text:003843C0
.text:003843C0 loc_3843C0:                             ; CODE XREF: .text:003812DF↑j
.text:003843C0                 push    ebp
.text:003843C1                 mov     ebp, esp
.text:003843C3                 mov     eax, [ebp+10h]
.text:003843C6                 push    eax
.text:003843C7                 mov     ecx, [ebp+0Ch]
.text:003843CA                 push    ecx
.text:003843CB                 mov     edx, [ebp+8]
.text:003843CE                 push    edx
.text:003843CF                 call    sub_384470      ; Call Procedure
.text:003843D4                 add     esp, 0Ch        ; Add
.text:003843D7                 test    eax, eax        ; Logical Compare
.text:003843D9                 jz      short loc_3843F2 ; Jump if Zero (ZF=1)
.text:003843DB                 mov     eax, [ebp+8]
.text:003843DE                 push    eax
.text:003843DF                 call    sub_384330      ; Call Procedure
.text:003843E4                 add     esp, 4          ; Add
.text:003843E7                 test    eax, eax        ; Logical Compare
.text:003843E9                 jz      short loc_3843F2 ; Jump if Zero (ZF=1)
.text:003843EB                 mov     ecx, 41h ; 'A'
.text:003843F0                 int     29h             ; Win8: RtlFailFast(ecx)
.text:003843F2 ; ---------------------------------------------------------------------------
.text:003843F2
.text:003843F2 loc_3843F2:                             ; CODE XREF: .text:003843D9↑j
.text:003843F2                                         ; .text:003843E9↑j
.text:003843F2                 pop     ebp
.text:003843F3                 retn                    ; Return Near from Procedure
.text:003843F3 ; ---------------------------------------------------------------------------
.text:003843F4                 db 1Ch dup(0CCh)
.text:00384410 ; ---------------------------------------------------------------------------
.text:00384410
.text:00384410 loc_384410:                             ; CODE XREF: .text:003812A8↑j
.text:00384410                 push    ebp
.text:00384411                 mov     ebp, esp
.text:00384413                 pop     ebp
.text:00384414                 retn                    ; Return Near from Procedure
.text:00384414 ; ---------------------------------------------------------------------------
.text:00384415                 align 10h
.text:00384420
.text:00384420 loc_384420:                             ; CODE XREF: .text:00381375↑j
.text:00384420                 push    ebp
.text:00384421                 mov     ebp, esp
.text:00384423                 mov     eax, [ebp+10h]
.text:00384426                 push    eax
.text:00384427                 mov     ecx, [ebp+0Ch]
.text:0038442A                 push    ecx
.text:0038442B                 mov     edx, [ebp+8]
.text:0038442E                 push    edx
.text:0038442F                 call    sub_384470      ; Call Procedure
.text:00384434                 add     esp, 0Ch        ; Add
.text:00384437                 test    eax, eax        ; Logical Compare
.text:00384439                 jz      short loc_384457 ; Jump if Zero (ZF=1)
.text:0038443B                 mov     eax, [ebp+8]
.text:0038443E                 push    eax
.text:0038443F                 call    sub_384330      ; Call Procedure
.text:00384444                 add     esp, 4          ; Add
.text:00384447                 test    eax, eax        ; Logical Compare
.text:00384449                 jz      short loc_384457 ; Jump if Zero (ZF=1)
.text:0038444B                 mov     ecx, [ebp+8]
.text:0038444E                 push    ecx
.text:0038444F                 call    sub_384300      ; Call Procedure
.text:00384454                 add     esp, 4          ; Add
.text:00384457
.text:00384457 loc_384457:                             ; CODE XREF: .text:00384439↑j
.text:00384457                                         ; .text:00384449↑j
.text:00384457                 pop     ebp
.text:00384458                 retn                    ; Return Near from Procedure
.text:00384458 ; ---------------------------------------------------------------------------
.text:00384459                 db 17h dup(0CCh)
.text:00384470
.text:00384470 ; =============== S U B R O U T I N E =======================================
.text:00384470
.text:00384470 ; Attributes: bp-based frame
.text:00384470
.text:00384470 sub_384470      proc near               ; CODE XREF: .text:0038438F↑p
.text:00384470                                         ; .text:003843CF↑p ...
.text:00384470
.text:00384470 var_C           = dword ptr -0Ch
.text:00384470 var_8           = dword ptr -8
.text:00384470 var_4           = dword ptr -4
.text:00384470 arg_0           = dword ptr  8
.text:00384470 arg_4           = dword ptr  0Ch
.text:00384470 arg_8           = dword ptr  10h
.text:00384470
.text:00384470                 push    ebp
.text:00384471                 mov     ebp, esp
.text:00384473                 sub     esp, 0Ch        ; Integer Subtraction
.text:00384476                 mov     [ebp+var_8], offset unk_388940
.text:0038447D                 mov     eax, [ebp+var_8]
.text:00384480                 add     eax, [ebp+arg_4] ; Add
.text:00384483                 mov     [ebp+var_C], eax
.text:00384486                 mov     ecx, [ebp+arg_0]
.text:00384489                 sub     ecx, [ebp+var_C] ; Integer Subtraction
.text:0038448C                 cmp     ecx, [ebp+arg_8] ; Compare Two Operands
.text:0038448F                 jbe     short loc_38449A ; Jump if Below or Equal (CF=1 | ZF=1)
.text:00384491                 mov     [ebp+var_4], 1
.text:00384498                 jmp     short loc_3844A1 ; Jump
.text:0038449A ; ---------------------------------------------------------------------------
.text:0038449A
.text:0038449A loc_38449A:                             ; CODE XREF: sub_384470+1F↑j
.text:0038449A                 mov     [ebp+var_4], 0
.text:003844A1
.text:003844A1 loc_3844A1:                             ; CODE XREF: sub_384470+28↑j
.text:003844A1                 mov     eax, [ebp+var_4]
.text:003844A4                 mov     esp, ebp
.text:003844A6                 pop     ebp
.text:003844A7                 retn                    ; Return Near from Procedure
.text:003844A7 sub_384470      endp
.text:003844A7
.text:003844A7 ; ---------------------------------------------------------------------------
.text:003844A8                 align 20h
.text:003844C0
.text:003844C0 loc_3844C0:                             ; CODE XREF: .text:00381055↑j
.text:003844C0                 push    ebp
.text:003844C1                 mov     ebp, esp
.text:003844C3                 push    ecx
.text:003844C4                 push    offset ___guard_check_icall_fptr
.text:003844C9                 call    sub_38109B      ; Call Procedure
.text:003844CE                 add     esp, 4          ; Add
.text:003844D1                 cmp     eax, offset sub_38128F ; Compare Two Operands
.text:003844D6                 jz      short loc_3844E1 ; Jump if Zero (ZF=1)
.text:003844D8                 mov     dword ptr [ebp-4], 1
.text:003844DF                 jmp     short loc_3844E8 ; Jump
.text:003844E1 ; ---------------------------------------------------------------------------
.text:003844E1
.text:003844E1 loc_3844E1:                             ; CODE XREF: .text:003844D6↑j
.text:003844E1                 mov     dword ptr [ebp-4], 0
.text:003844E8
.text:003844E8 loc_3844E8:                             ; CODE XREF: .text:003844DF↑j
.text:003844E8                 mov     eax, [ebp-4]
.text:003844EB                 mov     esp, ebp
.text:003844ED                 pop     ebp
.text:003844EE                 retn                    ; Return Near from Procedure
.text:003844EE ; ---------------------------------------------------------------------------
.text:003844EF                 align 20h
.text:00384500
.text:00384500 ; =============== S U B R O U T I N E =======================================
.text:00384500
.text:00384500 ; Attributes: bp-based frame
.text:00384500
.text:00384500 sub_384500      proc near               ; CODE XREF: sub_384AA0+C9↓p
.text:00384500
.text:00384500 FullPath        = word ptr -414h
.text:00384500 Buffer          = word ptr -20Ch
.text:00384500 var_4           = dword ptr -4
.text:00384500
.text:00384500                 push    ebp
.text:00384501                 mov     ebp, esp
.text:00384503                 sub     esp, 414h       ; Integer Subtraction
.text:00384509                 mov     eax, ___security_cookie
.text:0038450E                 xor     eax, ebp        ; Logical Exclusive OR
.text:00384510                 mov     [ebp+var_4], eax
.text:00384513                 cmp     byte_38A69C, 0  ; Compare Two Operands
.text:0038451A                 jnz     loc_38463A      ; Jump if Not Zero (ZF=0)
.text:00384520                 mov     byte_38A69C, 1
.text:00384527                 call    sub_3846A0      ; Call Procedure
.text:0038452C                 test    eax, eax        ; Logical Compare
.text:0038452E                 jnz     loc_38463C      ; Jump if Not Zero (ZF=0)
.text:00384534                 push    offset aVcruntime140dD_0 ; "VCRUNTIME140D.dll"
.text:00384539                 call    j___vcrt_GetModuleHandleW ; Call Procedure
.text:0038453E                 add     esp, 4          ; Add
.text:00384541                 test    eax, eax        ; Logical Compare
.text:00384543                 jz      short loc_3845BD ; Jump if Zero (ZF=1)
.text:00384545                 push    104h
.text:0038454A                 lea     ecx, [ebp+FullPath] ; Load Effective Address
.text:00384550                 push    ecx
.text:00384551                 push    eax
.text:00384552                 call    j___vcrt_GetModuleFileNameW ; Call Procedure
.text:00384557                 add     esp, 0Ch        ; Add
.text:0038455A                 test    eax, eax        ; Logical Compare
.text:0038455C                 jz      short loc_3845BD ; Jump if Zero (ZF=1)
.text:0038455E                 push    104h            ; BufferCount
.text:00384563                 lea     eax, [ebp+Buffer] ; Load Effective Address
.text:00384569                 push    eax             ; Buffer
.text:0038456A                 lea     eax, [ebp+FullPath] ; Load Effective Address
.text:00384570                 push    eax             ; FullPath
.text:00384571                 call    sub_384990      ; Call Procedure
.text:00384576                 add     esp, 0Ch        ; Add
.text:00384579                 test    eax, eax        ; Logical Compare
.text:0038457B                 jz      short loc_3845BD ; Jump if Zero (ZF=1)
.text:0038457D                 push    900h
.text:00384582                 lea     eax, [ebp+Buffer] ; Load Effective Address
.text:00384588                 push    0
.text:0038458A                 push    eax
.text:0038458B                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:00384590                 add     esp, 0Ch        ; Add
.text:00384593                 test    eax, eax        ; Logical Compare
.text:00384595                 jnz     loc_38463C      ; Jump if Not Zero (ZF=0)
.text:0038459B                 call    ds:GetLastError ; Indirect Call Near Procedure
.text:003845A1                 cmp     eax, 57h ; 'W'  ; Compare Two Operands
.text:003845A4                 jnz     short loc_3845BD ; Jump if Not Zero (ZF=0)
.text:003845A6                 push    8
.text:003845A8                 lea     eax, [ebp+Buffer] ; Load Effective Address
.text:003845AE                 push    0
.text:003845B0                 push    eax
.text:003845B1                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:003845B6                 add     esp, 0Ch        ; Add
.text:003845B9                 test    eax, eax        ; Logical Compare
.text:003845BB                 jnz     short loc_38463C ; Jump if Not Zero (ZF=0)
.text:003845BD
.text:003845BD loc_3845BD:                             ; CODE XREF: sub_384500+43↑j
.text:003845BD                                         ; sub_384500+5C↑j ...
.text:003845BD                 push    0A00h
.text:003845C2                 push    0
.text:003845C4                 push    offset aMspdb140 ; "MSPDB140"
.text:003845C9                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:003845CE                 add     esp, 0Ch        ; Add
.text:003845D1                 test    eax, eax        ; Logical Compare
.text:003845D3                 jnz     short loc_38463C ; Jump if Not Zero (ZF=0)
.text:003845D5                 call    ds:GetLastError ; Indirect Call Near Procedure
.text:003845DB                 cmp     eax, 57h ; 'W'  ; Compare Two Operands
.text:003845DE                 jnz     short loc_38463A ; Jump if Not Zero (ZF=0)
.text:003845E0                 push    104h
.text:003845E5                 lea     eax, [ebp+FullPath] ; Load Effective Address
.text:003845EB                 push    eax
.text:003845EC                 push    0
.text:003845EE                 call    j___vcrt_GetModuleFileNameW ; Call Procedure
.text:003845F3                 add     esp, 0Ch        ; Add
.text:003845F6                 test    eax, eax        ; Logical Compare
.text:003845F8                 jz      short loc_38463A ; Jump if Zero (ZF=1)
.text:003845FA                 push    104h            ; BufferCount
.text:003845FF                 lea     eax, [ebp+Buffer] ; Load Effective Address
.text:00384605                 push    eax             ; Buffer
.text:00384606                 lea     eax, [ebp+FullPath] ; Load Effective Address
.text:0038460C                 push    eax             ; FullPath
.text:0038460D                 call    sub_384990      ; Call Procedure
.text:00384612                 add     esp, 0Ch        ; Add
.text:00384615                 test    eax, eax        ; Logical Compare
.text:00384617                 jz      short loc_38463A ; Jump if Zero (ZF=1)
.text:00384619                 push    8
.text:0038461B                 lea     eax, [ebp+Buffer] ; Load Effective Address
.text:00384621                 push    0
.text:00384623                 push    eax
.text:00384624                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:00384629                 add     esp, 0Ch        ; Add
.text:0038462C                 mov     ecx, [ebp+var_4]
.text:0038462F                 xor     ecx, ebp        ; StackCookie
.text:00384631                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00384636                 mov     esp, ebp
.text:00384638                 pop     ebp
.text:00384639                 retn                    ; Return Near from Procedure
.text:0038463A ; ---------------------------------------------------------------------------
.text:0038463A
.text:0038463A loc_38463A:                             ; CODE XREF: sub_384500+1A↑j
.text:0038463A                                         ; sub_384500+DE↑j ...
.text:0038463A                 xor     eax, eax        ; Logical Exclusive OR
.text:0038463C
.text:0038463C loc_38463C:                             ; CODE XREF: sub_384500+2E↑j
.text:0038463C                                         ; sub_384500+95↑j ...
.text:0038463C                 mov     ecx, [ebp+var_4]
.text:0038463F                 xor     ecx, ebp        ; StackCookie
.text:00384641                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00384646                 mov     esp, ebp
.text:00384648                 pop     ebp
.text:00384649                 retn                    ; Return Near from Procedure
.text:00384649 sub_384500      endp
.text:00384649
.text:00384649 ; ---------------------------------------------------------------------------
.text:0038464A                 db 56h dup(0CCh)
.text:003846A0
.text:003846A0 ; =============== S U B R O U T I N E =======================================
.text:003846A0
.text:003846A0 ; Attributes: bp-based frame
.text:003846A0
.text:003846A0 sub_3846A0      proc near               ; CODE XREF: sub_384500+27↑p
.text:003846A0
.text:003846A0 var_21C         = dword ptr -21Ch
.text:003846A0 var_218         = dword ptr -218h
.text:003846A0 var_214         = dword ptr -214h
.text:003846A0 var_210         = dword ptr -210h
.text:003846A0 var_20C         = dword ptr -20Ch
.text:003846A0 var_208         = dword ptr -208h
.text:003846A0 var_204         = dword ptr -204h
.text:003846A0 var_200         = dword ptr -200h
.text:003846A0 var_1FC         = dword ptr -1FCh
.text:003846A0 var_1F8         = dword ptr -1F8h
.text:003846A0 var_1F4         = dword ptr -1F4h
.text:003846A0 var_1F0         = dword ptr -1F0h
.text:003846A0 var_1EC         = word ptr -1ECh
.text:003846A0 var_4           = dword ptr -4
.text:003846A0
.text:003846A0                 push    ebp
.text:003846A1                 mov     ebp, esp
.text:003846A3                 sub     esp, 21Ch       ; Integer Subtraction
.text:003846A9                 mov     eax, ___security_cookie
.text:003846AE                 xor     eax, ebp        ; Logical Exclusive OR
.text:003846B0                 mov     [ebp+var_4], eax
.text:003846B3                 push    ebx
.text:003846B4                 push    esi
.text:003846B5                 push    edi
.text:003846B6                 push    800h
.text:003846BB                 push    0
.text:003846BD                 push    offset aApiMsWinCoreRe ; "api-ms-win-core-registry-l1-1-0.dll"
.text:003846C2                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:003846C7                 mov     edi, eax
.text:003846C9                 add     esp, 0Ch        ; Add
.text:003846CC                 test    edi, edi        ; Logical Compare
.text:003846CE                 jnz     short loc_384709 ; Jump if Not Zero (ZF=0)
.text:003846D0                 push    800h
.text:003846D5                 push    eax
.text:003846D6                 push    offset aAdvapi32Dll ; "advapi32.dll"
.text:003846DB                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:003846E0                 mov     edi, eax
.text:003846E2                 add     esp, 0Ch        ; Add
.text:003846E5                 test    edi, edi        ; Logical Compare
.text:003846E7                 jnz     short loc_384709 ; Jump if Not Zero (ZF=0)
.text:003846E9                 call    ds:GetLastError ; Indirect Call Near Procedure
.text:003846EF                 cmp     eax, 57h ; 'W'  ; Compare Two Operands
.text:003846F2                 jnz     short loc_38476D ; Jump if Not Zero (ZF=0)
.text:003846F4                 push    edi
.text:003846F5                 push    edi
.text:003846F6                 push    offset aAdvapi32Dll ; "advapi32.dll"
.text:003846FB                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:00384700                 mov     edi, eax
.text:00384702                 add     esp, 0Ch        ; Add
.text:00384705                 test    edi, edi        ; Logical Compare
.text:00384707                 jz      short loc_38476D ; Jump if Zero (ZF=1)
.text:00384709
.text:00384709 loc_384709:                             ; CODE XREF: sub_3846A0+2E↑j
.text:00384709                                         ; sub_3846A0+47↑j
.text:00384709                 push    offset ProcName ; "RegOpenKeyExW"
.text:0038470E                 push    edi             ; hModule
.text:0038470F                 call    ds:GetProcAddress ; Indirect Call Near Procedure
.text:00384715                 mov     esi, eax
.text:00384717                 test    esi, esi        ; Logical Compare
.text:00384719                 jz      short loc_38476D ; Jump if Zero (ZF=1)
.text:0038471B                 push    offset aRegqueryvaluee ; "RegQueryValueExW"
.text:00384720                 push    edi             ; hModule
.text:00384721                 call    ds:GetProcAddress ; Indirect Call Near Procedure
.text:00384727                 mov     ebx, eax
.text:00384729                 test    ebx, ebx        ; Logical Compare
.text:0038472B                 jz      short loc_38476D ; Jump if Zero (ZF=1)
.text:0038472D                 push    offset aRegclosekey ; "RegCloseKey"
.text:00384732                 push    edi             ; hModule
.text:00384733                 call    ds:GetProcAddress ; Indirect Call Near Procedure
.text:00384739                 mov     [ebp+var_218], eax
.text:0038473F                 test    eax, eax        ; Logical Compare
.text:00384741                 jz      short loc_38476D ; Jump if Zero (ZF=1)
.text:00384743                 lea     eax, [ebp+var_210] ; Load Effective Address
.text:00384749                 mov     ecx, esi
.text:0038474B                 push    eax
.text:0038474C                 push    1
.text:0038474E                 push    0
.text:00384750                 push    offset aSoftwareWow643 ; "SOFTWARE\\Wow6432Node\\Microsoft\\Visua"...
.text:00384755                 push    80000002h
.text:0038475A                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384760                 call    esi             ; Indirect Call Near Procedure
.text:00384762                 test    eax, eax        ; Logical Compare
.text:00384764                 jz      short loc_384780 ; Jump if Zero (ZF=1)
.text:00384766                 push    edi             ; hLibModule
.text:00384767                 call    ds:FreeLibrary  ; Indirect Call Near Procedure
.text:0038476D
.text:0038476D loc_38476D:                             ; CODE XREF: sub_3846A0+52↑j
.text:0038476D                                         ; sub_3846A0+67↑j ...
.text:0038476D                 pop     edi
.text:0038476E                 pop     esi
.text:0038476F                 xor     eax, eax        ; Logical Exclusive OR
.text:00384771                 pop     ebx
.text:00384772                 mov     ecx, [ebp+var_4]
.text:00384775                 xor     ecx, ebp        ; StackCookie
.text:00384777                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:0038477C                 mov     esp, ebp
.text:0038477E                 pop     ebp
.text:0038477F                 retn                    ; Return Near from Procedure
.text:00384780 ; ---------------------------------------------------------------------------
.text:00384780
.text:00384780 loc_384780:                             ; CODE XREF: sub_3846A0+C4↑j
.text:00384780                 lea     eax, [ebp+var_214] ; Load Effective Address
.text:00384786                 mov     [ebp+var_214], 208h
.text:00384790                 push    eax
.text:00384791                 lea     eax, [ebp+var_20C] ; Load Effective Address
.text:00384797                 mov     ecx, ebx
.text:00384799                 push    eax
.text:0038479A                 lea     eax, [ebp+var_21C] ; Load Effective Address
.text:003847A0                 push    eax
.text:003847A1                 push    0
.text:003847A3                 push    offset aProductdir ; "ProductDir"
.text:003847A8                 push    [ebp+var_210]
.text:003847AE                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:003847B4                 call    ebx             ; Indirect Call Near Procedure
.text:003847B6                 push    [ebp+var_210]
.text:003847BC                 mov     ebx, [ebp+var_218]
.text:003847C2                 mov     esi, eax
.text:003847C4                 mov     ecx, ebx
.text:003847C6                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:003847CC                 call    ebx             ; Indirect Call Near Procedure
.text:003847CE                 push    edi             ; hLibModule
.text:003847CF                 call    ds:FreeLibrary  ; Indirect Call Near Procedure
.text:003847D5                 test    esi, esi        ; Logical Compare
.text:003847D7                 jnz     short loc_38476D ; Jump if Not Zero (ZF=0)
.text:003847D9                 cmp     [ebp+var_21C], 1 ; Compare Two Operands
.text:003847E0                 jnz     short loc_38476D ; Jump if Not Zero (ZF=0)
.text:003847E2                 mov     ecx, [ebp+var_214]
.text:003847E8                 test    cl, 1           ; Logical Compare
.text:003847EB                 jnz     short loc_38476D ; Jump if Not Zero (ZF=0)
.text:003847ED                 shr     ecx, 1          ; Shift Logical Right
.text:003847EF                 mov     edx, ecx
.text:003847F1                 cmp     ecx, 2          ; Compare Two Operands
.text:003847F4                 jb      loc_38476D      ; Jump if Below (CF=1)
.text:003847FA                 dec     ecx             ; Decrement by 1
.text:003847FB                 lea     eax, [ebp+var_20C] ; Load Effective Address
.text:00384801                 cmp     [eax+ecx*2], si ; Compare Two Operands
.text:00384805                 lea     eax, [eax+ecx*2] ; Load Effective Address
.text:00384808                 jnz     loc_38476D      ; Jump if Not Zero (ZF=0)
.text:0038480E                 cmp     word ptr [eax-2], 5Ch ; '\' ; Compare Two Operands
.text:00384813                 jz      short loc_38481F ; Jump if Zero (ZF=1)
.text:00384815                 mov     ecx, 5Ch ; '\'
.text:0038481A                 mov     [eax], cx
.text:0038481D                 mov     ecx, edx
.text:0038481F
.text:0038481F loc_38481F:                             ; CODE XREF: sub_3846A0+173↑j
.text:0038481F                 mov     eax, ecx
.text:00384821                 not     eax             ; One's Complement Negation
.text:00384823                 cmp     eax, 12h        ; Compare Two Operands
.text:00384826                 jb      loc_38476D      ; Jump if Below (CF=1)
.text:0038482C                 lea     eax, [ecx+11h]  ; Load Effective Address
.text:0038482F                 cmp     eax, 104h       ; Compare Two Operands
.text:00384834                 ja      loc_38476D      ; Jump if Above (CF=0 & ZF=0)
.text:0038483A                 mov     eax, ds:dword_388470
.text:0038483F                 mov     [ebp+ecx*2+var_20C], eax
.text:00384846                 mov     eax, ds:dword_388474
.text:0038484B                 mov     [ebp+ecx*2+var_208], eax
.text:00384852                 mov     eax, ds:dword_388478
.text:00384857                 mov     [ebp+ecx*2+var_204], eax
.text:0038485E                 mov     eax, ds:dword_38847C
.text:00384863                 mov     [ebp+ecx*2+var_200], eax
.text:0038486A                 mov     eax, ds:dword_388480
.text:0038486F                 mov     [ebp+ecx*2+var_1FC], eax
.text:00384876                 mov     eax, ds:dword_388484
.text:0038487B                 mov     [ebp+ecx*2+var_1F8], eax
.text:00384882                 mov     eax, ds:dword_388488
.text:00384887                 mov     [ebp+ecx*2+var_1F4], eax
.text:0038488E                 mov     eax, ds:dword_38848C
.text:00384893                 mov     [ebp+ecx*2+var_1F0], eax
.text:0038489A                 mov     ax, ds:word_388490
.text:003848A0                 push    900h
.text:003848A5                 mov     [ebp+ecx*2+var_1EC], ax
.text:003848AD                 lea     eax, [ebp+var_20C] ; Load Effective Address
.text:003848B3                 push    0
.text:003848B5                 push    eax
.text:003848B6                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:003848BB                 mov     esi, eax
.text:003848BD                 add     esp, 0Ch        ; Add
.text:003848C0                 test    esi, esi        ; Logical Compare
.text:003848C2                 jnz     short loc_3848E3 ; Jump if Not Zero (ZF=0)
.text:003848C4                 call    ds:GetLastError ; Indirect Call Near Procedure
.text:003848CA                 cmp     eax, 57h ; 'W'  ; Compare Two Operands
.text:003848CD                 jnz     short loc_3848E3 ; Jump if Not Zero (ZF=0)
.text:003848CF                 push    8
.text:003848D1                 lea     eax, [ebp+var_20C] ; Load Effective Address
.text:003848D7                 push    esi
.text:003848D8                 push    eax
.text:003848D9                 call    j___vcrt_LoadLibraryExW ; Call Procedure
.text:003848DE                 add     esp, 0Ch        ; Add
.text:003848E1                 mov     esi, eax
.text:003848E3
.text:003848E3 loc_3848E3:                             ; CODE XREF: sub_3846A0+222↑j
.text:003848E3                                         ; sub_3846A0+22D↑j
.text:003848E3                 mov     ecx, [ebp+var_4]
.text:003848E6                 mov     eax, esi
.text:003848E8                 pop     edi
.text:003848E9                 pop     esi
.text:003848EA                 xor     ecx, ebp        ; StackCookie
.text:003848EC                 pop     ebx
.text:003848ED                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:003848F2                 mov     esp, ebp
.text:003848F4                 pop     ebp
.text:003848F5                 retn                    ; Return Near from Procedure
.text:003848F5 sub_3846A0      endp
.text:003848F5
.text:003848F5 ; ---------------------------------------------------------------------------
.text:003848F6                 db 9Ah dup(0CCh)
.text:00384990
.text:00384990 ; =============== S U B R O U T I N E =======================================
.text:00384990
.text:00384990 ; Attributes: bp-based frame
.text:00384990
.text:00384990 ; int __cdecl sub_384990(wchar_t *FullPath, wchar_t *Buffer, size_t BufferCount)
.text:00384990 sub_384990      proc near               ; CODE XREF: sub_384500+71↑p
.text:00384990                                         ; sub_384500+10D↑p
.text:00384990
.text:00384990 Dir             = word ptr -60Ch
.text:00384990 Filename        = word ptr -40Ch
.text:00384990 Ext             = word ptr -20Ch
.text:00384990 Drive           = word ptr -0Ch
.text:00384990 var_4           = dword ptr -4
.text:00384990 FullPath        = dword ptr  8
.text:00384990 Buffer          = dword ptr  0Ch
.text:00384990 BufferCount     = dword ptr  10h
.text:00384990
.text:00384990                 push    ebp
.text:00384991                 mov     ebp, esp
.text:00384993                 sub     esp, 60Ch       ; Integer Subtraction
.text:00384999                 mov     eax, ___security_cookie
.text:0038499E                 xor     eax, ebp        ; Logical Exclusive OR
.text:003849A0                 mov     [ebp+var_4], eax
.text:003849A3                 mov     eax, [ebp+FullPath]
.text:003849A6                 lea     ecx, [ebp+Ext]  ; Load Effective Address
.text:003849AC                 push    esi
.text:003849AD                 mov     esi, [ebp+Buffer]
.text:003849B0                 push    100h            ; ExtCount
.text:003849B5                 push    ecx             ; Ext
.text:003849B6                 push    100h            ; FilenameCount
.text:003849BB                 lea     ecx, [ebp+Filename] ; Load Effective Address
.text:003849C1                 push    ecx             ; Filename
.text:003849C2                 push    100h            ; DirCount
.text:003849C7                 lea     ecx, [ebp+Dir]  ; Load Effective Address
.text:003849CD                 push    ecx             ; Dir
.text:003849CE                 push    3               ; DriveCount
.text:003849D0                 lea     ecx, [ebp+Drive] ; Load Effective Address
.text:003849D3                 push    ecx             ; Drive
.text:003849D4                 push    eax             ; FullPath
.text:003849D5                 call    j__wsplitpath_s ; Call Procedure
.text:003849DA                 add     esp, 24h        ; Add
.text:003849DD                 test    eax, eax        ; Logical Compare
.text:003849DF                 jnz     short loc_384A4E ; Jump if Not Zero (ZF=0)
.text:003849E1                 push    offset aMspdb140_0 ; "MSPDB140"
.text:003849E6                 lea     eax, [ebp+Filename] ; Load Effective Address
.text:003849EC                 push    9               ; SizeInWords
.text:003849EE                 push    eax             ; Destination
.text:003849EF                 call    j_wcscpy_s      ; Call Procedure
.text:003849F4                 add     esp, 0Ch        ; Add
.text:003849F7                 test    eax, eax        ; Logical Compare
.text:003849F9                 jnz     short loc_384A4E ; Jump if Not Zero (ZF=0)
.text:003849FB                 push    offset aDll     ; "DLL"
.text:00384A00                 lea     eax, [ebp+Ext]  ; Load Effective Address
.text:00384A06                 push    4               ; SizeInWords
.text:00384A08                 push    eax             ; Destination
.text:00384A09                 call    j_wcscpy_s      ; Call Procedure
.text:00384A0E                 add     esp, 0Ch        ; Add
.text:00384A11                 test    eax, eax        ; Logical Compare
.text:00384A13                 jnz     short loc_384A4E ; Jump if Not Zero (ZF=0)
.text:00384A15                 lea     eax, [ebp+Ext]  ; Load Effective Address
.text:00384A1B                 push    eax             ; Ext
.text:00384A1C                 lea     eax, [ebp+Filename] ; Load Effective Address
.text:00384A22                 push    eax             ; Filename
.text:00384A23                 lea     eax, [ebp+Dir]  ; Load Effective Address
.text:00384A29                 push    eax             ; Dir
.text:00384A2A                 lea     eax, [ebp+Drive] ; Load Effective Address
.text:00384A2D                 push    eax             ; Drive
.text:00384A2E                 push    [ebp+BufferCount] ; BufferCount
.text:00384A31                 push    esi             ; Buffer
.text:00384A32                 call    j__wmakepath_s  ; Call Procedure
.text:00384A37                 add     esp, 18h        ; Add
.text:00384A3A                 neg     eax             ; Two's Complement Negation
.text:00384A3C                 sbb     eax, eax        ; Integer Subtraction with Borrow
.text:00384A3E                 inc     eax             ; Increment by 1
.text:00384A3F                 pop     esi
.text:00384A40                 mov     ecx, [ebp+var_4]
.text:00384A43                 xor     ecx, ebp        ; StackCookie
.text:00384A45                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00384A4A                 mov     esp, ebp
.text:00384A4C                 pop     ebp
.text:00384A4D                 retn                    ; Return Near from Procedure
.text:00384A4E ; ---------------------------------------------------------------------------
.text:00384A4E
.text:00384A4E loc_384A4E:                             ; CODE XREF: sub_384990+4F↑j
.text:00384A4E                                         ; sub_384990+69↑j ...
.text:00384A4E                 mov     ecx, [ebp+var_4]
.text:00384A51                 xor     eax, eax        ; Logical Exclusive OR
.text:00384A53                 xor     ecx, ebp        ; StackCookie
.text:00384A55                 pop     esi
.text:00384A56                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:00384A5B                 mov     esp, ebp
.text:00384A5D                 pop     ebp
.text:00384A5E                 retn                    ; Return Near from Procedure
.text:00384A5E sub_384990      endp
.text:00384A5E
.text:00384A5E ; ---------------------------------------------------------------------------
.text:00384A5F                 db 41h dup(0CCh)
.text:00384AA0
.text:00384AA0 ; =============== S U B R O U T I N E =======================================
.text:00384AA0
.text:00384AA0 ; Attributes: bp-based frame
.text:00384AA0
.text:00384AA0 sub_384AA0      proc near               ; CODE XREF: sub_38107D↑j
.text:00384AA0
.text:00384AA0 Buffer          = _MEMORY_BASIC_INFORMATION ptr -4Ch
.text:00384AA0 var_30          = byte ptr -30h
.text:00384AA0 var_2C          = dword ptr -2Ch
.text:00384AA0 var_28          = dword ptr -28h
.text:00384AA0 var_24          = dword ptr -24h
.text:00384AA0 var_20          = dword ptr -20h
.text:00384AA0 var_1C          = dword ptr -1Ch
.text:00384AA0 var_18          = dword ptr -18h
.text:00384AA0 var_14          = dword ptr -14h
.text:00384AA0 var_10          = dword ptr -10h
.text:00384AA0 var_C           = dword ptr -0Ch
.text:00384AA0 var_8           = dword ptr -8
.text:00384AA0 var_4           = word ptr -4
.text:00384AA0 arg_0           = dword ptr  8
.text:00384AA0 arg_4           = dword ptr  0Ch
.text:00384AA0 arg_8           = byte ptr  10h
.text:00384AA0 arg_C           = dword ptr  14h
.text:00384AA0 arg_10          = dword ptr  18h
.text:00384AA0 arg_14          = dword ptr  1Ch
.text:00384AA0
.text:00384AA0                 push    ebp
.text:00384AA1                 mov     ebp, esp
.text:00384AA3                 mov     eax, [ebp+arg_C]
.text:00384AA6                 sub     esp, 4Ch        ; Integer Subtraction
.text:00384AA9                 xor     ecx, ecx        ; Logical Exclusive OR
.text:00384AAB                 push    ebx
.text:00384AAC                 push    esi
.text:00384AAD                 mov     esi, [ebp+arg_0]
.text:00384AB0                 mov     dword ptr [eax], 0
.text:00384AB6                 dec     esi             ; Decrement by 1
.text:00384AB7                 mov     eax, [ebp+arg_4]
.text:00384ABA                 push    edi
.text:00384ABB                 push    1Ch             ; dwLength
.text:00384ABD                 mov     [eax], cx
.text:00384AC0                 lea     eax, [ebp+Buffer] ; Load Effective Address
.text:00384AC3                 push    eax             ; lpBuffer
.text:00384AC4                 push    esi             ; lpAddress
.text:00384AC5                 call    ds:VirtualQuery ; Indirect Call Near Procedure
.text:00384ACB                 test    eax, eax        ; Logical Compare
.text:00384ACD                 jz      loc_384E17      ; Jump if Zero (ZF=1)
.text:00384AD3                 push    [ebp+arg_14]
.text:00384AD6                 push    [ebp+arg_10]
.text:00384AD9                 push    [ebp+Buffer.AllocationBase]
.text:00384ADC                 call    j___vcrt_GetModuleFileNameW ; Call Procedure
.text:00384AE1                 add     esp, 0Ch        ; Add
.text:00384AE4                 test    eax, eax        ; Logical Compare
.text:00384AE6                 jz      loc_384E17      ; Jump if Zero (ZF=1)
.text:00384AEC                 mov     eax, [ebp+Buffer.AllocationBase]
.text:00384AEF                 mov     ecx, 5A4Dh
.text:00384AF4                 cmp     [eax], cx       ; Compare Two Operands
.text:00384AF7                 jnz     loc_384E17      ; Jump if Not Zero (ZF=0)
.text:00384AFD                 mov     ecx, [eax+3Ch]
.text:00384B00                 test    ecx, ecx        ; Logical Compare
.text:00384B02                 jle     loc_384E17      ; Jump if Less or Equal (ZF=1 | SF!=OF)
.text:00384B08                 add     ecx, eax        ; Add
.text:00384B0A                 cmp     dword ptr [ecx], 4550h ; Compare Two Operands
.text:00384B10                 jnz     loc_384E17      ; Jump if Not Zero (ZF=0)
.text:00384B16                 movzx   edx, word ptr [ecx+14h] ; Move with Zero-Extend
.text:00384B1A                 sub     esi, eax        ; Integer Subtraction
.text:00384B1C                 movzx   edi, word ptr [ecx+6] ; Move with Zero-Extend
.text:00384B20                 add     edx, 20h ; ' '  ; Add
.text:00384B23                 xor     ebx, ebx        ; Logical Exclusive OR
.text:00384B25                 xor     eax, eax        ; Logical Exclusive OR
.text:00384B27                 test    edi, edi        ; Logical Compare
.text:00384B29                 jz      short loc_384B47 ; Jump if Zero (ZF=1)
.text:00384B2B                 add     ecx, edx        ; Add
.text:00384B2D                 lea     ecx, [ecx+0]    ; Load Effective Address
.text:00384B30
.text:00384B30 loc_384B30:                             ; CODE XREF: sub_384AA0+A5↓j
.text:00384B30                 mov     edx, [ecx+4]
.text:00384B33                 cmp     esi, edx        ; Compare Two Operands
.text:00384B35                 jb      short loc_384B3F ; Jump if Below (CF=1)
.text:00384B37                 mov     ebx, esi
.text:00384B39                 sub     ebx, edx        ; Integer Subtraction
.text:00384B3B                 cmp     esi, [ecx]      ; Compare Two Operands
.text:00384B3D                 jb      short loc_384B47 ; Jump if Below (CF=1)
.text:00384B3F
.text:00384B3F loc_384B3F:                             ; CODE XREF: sub_384AA0+95↑j
.text:00384B3F                 inc     eax             ; Increment by 1
.text:00384B40                 add     ecx, 28h ; '('  ; Add
.text:00384B43                 cmp     eax, edi        ; Compare Two Operands
.text:00384B45                 jb      short loc_384B30 ; Jump if Below (CF=1)
.text:00384B47
.text:00384B47 loc_384B47:                             ; CODE XREF: sub_384AA0+89↑j
.text:00384B47                                         ; sub_384AA0+9D↑j
.text:00384B47                 cmp     eax, edi        ; Compare Two Operands
.text:00384B49                 jz      loc_384E17      ; Jump if Zero (ZF=1)
.text:00384B4F                 inc     eax             ; Increment by 1
.text:00384B50                 cmp     byte_38A69D, 0  ; Compare Two Operands
.text:00384B57                 mov     [ebp+var_C], eax
.text:00384B5A                 jnz     short loc_384B84 ; Jump if Not Zero (ZF=0)
.text:00384B5C                 cmp     dword_38A698, 0 ; Compare Two Operands
.text:00384B63                 jnz     loc_384E17      ; Jump if Not Zero (ZF=0)
.text:00384B69                 call    sub_384500      ; Call Procedure
.text:00384B6E                 mov     dword_38A698, eax
.text:00384B73                 test    eax, eax        ; Logical Compare
.text:00384B75                 jz      loc_384E17      ; Jump if Zero (ZF=1)
.text:00384B7B                 mov     byte_38A69D, 1
.text:00384B82                 jmp     short loc_384B89 ; Jump
.text:00384B84 ; ---------------------------------------------------------------------------
.text:00384B84
.text:00384B84 loc_384B84:                             ; CODE XREF: sub_384AA0+BA↑j
.text:00384B84                 mov     eax, dword_38A698
.text:00384B89
.text:00384B89 loc_384B89:                             ; CODE XREF: sub_384AA0+E2↑j
.text:00384B89                 push    offset aPdbopenvalidat ; "PDBOpenValidate5"
.text:00384B8E                 push    eax             ; hModule
.text:00384B8F                 call    ds:GetProcAddress ; Indirect Call Near Procedure
.text:00384B95                 mov     esi, eax
.text:00384B97                 test    esi, esi        ; Logical Compare
.text:00384B99                 jz      loc_384E17      ; Jump if Zero (ZF=1)
.text:00384B9F                 lea     eax, [ebp+var_18] ; Load Effective Address
.text:00384BA2                 mov     ecx, esi
.text:00384BA4                 push    eax
.text:00384BA5                 push    0
.text:00384BA7                 push    0
.text:00384BA9                 lea     eax, [ebp+var_30] ; Load Effective Address
.text:00384BAC                 push    eax
.text:00384BAD                 push    0
.text:00384BAF                 push    0
.text:00384BB1                 push    0
.text:00384BB3                 push    [ebp+arg_10]
.text:00384BB6                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384BBC                 call    esi             ; Indirect Call Near Procedure
.text:00384BBE                 add     esp, 20h        ; Add
.text:00384BC1                 test    eax, eax        ; Logical Compare
.text:00384BC3                 jz      loc_384E17      ; Jump if Zero (ZF=1)
.text:00384BC9                 mov     edi, [ebp+var_18]
.text:00384BCC                 mov     [ebp+var_8], 0
.text:00384BD3                 mov     [ebp+var_24], 0
.text:00384BDA                 mov     eax, [edi]
.text:00384BDC                 mov     esi, [eax]
.text:00384BDE                 mov     ecx, esi
.text:00384BE0                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384BE6                 mov     ecx, edi
.text:00384BE8                 call    esi             ; Indirect Call Near Procedure
.text:00384BEA                 cmp     eax, 1329141h   ; Compare Two Operands
.text:00384BEF                 jnz     loc_384D34      ; Jump if Not Zero (ZF=0)
.text:00384BF5                 mov     edi, [ebp+var_18]
.text:00384BF8                 mov     eax, [edi]
.text:00384BFA                 mov     esi, [eax+1Ch]
.text:00384BFD                 lea     eax, [ebp+var_20] ; Load Effective Address
.text:00384C00                 push    eax
.text:00384C01                 push    offset aR       ; "r"
.text:00384C06                 push    0
.text:00384C08                 mov     ecx, esi
.text:00384C0A                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384C10                 mov     ecx, edi
.text:00384C12                 call    esi             ; Indirect Call Near Procedure
.text:00384C14                 test    eax, eax        ; Logical Compare
.text:00384C16                 jz      loc_384D34      ; Jump if Zero (ZF=1)
.text:00384C1C                 mov     edi, [ebp+var_20]
.text:00384C1F                 push    0
.text:00384C21                 push    0
.text:00384C23                 push    0
.text:00384C25                 mov     eax, [edi]
.text:00384C27                 mov     esi, [eax+20h]
.text:00384C2A                 lea     eax, [ebp+var_14] ; Load Effective Address
.text:00384C2D                 push    eax
.text:00384C2E                 push    ebx
.text:00384C2F                 push    [ebp+var_C]
.text:00384C32                 mov     ecx, esi
.text:00384C34                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384C3A                 mov     ecx, edi
.text:00384C3C                 call    esi             ; Indirect Call Near Procedure
.text:00384C3E                 test    eax, eax        ; Logical Compare
.text:00384C40                 jz      loc_384D20      ; Jump if Zero (ZF=1)
.text:00384C46                 mov     edi, [ebp+var_14]
.text:00384C49                 mov     eax, [edi]
.text:00384C4B                 mov     esi, [eax+68h]
.text:00384C4E                 lea     eax, [ebp+var_8] ; Load Effective Address
.text:00384C51                 push    eax
.text:00384C52                 mov     ecx, esi
.text:00384C54                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384C5A                 mov     ecx, edi
.text:00384C5C                 call    esi             ; Indirect Call Near Procedure
.text:00384C5E                 test    al, al          ; Logical Compare
.text:00384C60                 jz      loc_384D0C      ; Jump if Zero (ZF=1)
.text:00384C66                 mov     edi, [ebp+var_8]
.text:00384C69                 test    edi, edi        ; Logical Compare
.text:00384C6B                 jz      loc_384D0C      ; Jump if Zero (ZF=1)
.text:00384C71                 mov     eax, [edi]
.text:00384C73                 mov     esi, [eax+8]
.text:00384C76                 mov     ecx, esi
.text:00384C78                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384C7E                 mov     ecx, edi
.text:00384C80                 call    esi             ; Indirect Call Near Procedure
.text:00384C82                 test    eax, eax        ; Logical Compare
.text:00384C84                 jz      short loc_384CE7 ; Jump if Zero (ZF=1)
.text:00384C86
.text:00384C86 loc_384C86:                             ; CODE XREF: sub_384AA0+245↓j
.text:00384C86                 mov     edi, [ebp+var_8]
.text:00384C89                 push    0
.text:00384C8B                 mov     eax, [edi]
.text:00384C8D                 mov     esi, [eax+0Ch]
.text:00384C90                 lea     eax, [ebp+var_10] ; Load Effective Address
.text:00384C93                 push    eax
.text:00384C94                 lea     eax, [ebp+var_28] ; Load Effective Address
.text:00384C97                 mov     ecx, esi
.text:00384C99                 push    eax
.text:00384C9A                 lea     eax, [ebp+var_4] ; Load Effective Address
.text:00384C9D                 push    eax
.text:00384C9E                 lea     eax, [ebp+var_1C] ; Load Effective Address
.text:00384CA1                 push    eax
.text:00384CA2                 push    0
.text:00384CA4                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384CAA                 mov     ecx, edi
.text:00384CAC                 call    esi             ; Indirect Call Near Procedure
.text:00384CAE                 test    al, al          ; Logical Compare
.text:00384CB0                 jz      short loc_384CF9 ; Jump if Zero (ZF=1)
.text:00384CB2                 movzx   eax, [ebp+var_4] ; Move with Zero-Extend
.text:00384CB6                 cmp     eax, [ebp+var_C] ; Compare Two Operands
.text:00384CB9                 jnz     short loc_384CCF ; Jump if Not Zero (ZF=0)
.text:00384CBB                 mov     ecx, [ebp+var_1C]
.text:00384CBE                 cmp     ecx, ebx        ; Compare Two Operands
.text:00384CC0                 ja      short loc_384CCF ; Jump if Above (CF=0 & ZF=0)
.text:00384CC2                 mov     eax, [ebp+var_28]
.text:00384CC5                 add     eax, ecx        ; Add
.text:00384CC7                 cmp     ebx, eax        ; Compare Two Operands
.text:00384CC9                 jb      loc_384D52      ; Jump if Below (CF=1)
.text:00384CCF
.text:00384CCF loc_384CCF:                             ; CODE XREF: sub_384AA0+219↑j
.text:00384CCF                                         ; sub_384AA0+220↑j
.text:00384CCF                 mov     edi, [ebp+var_8]
.text:00384CD2                 mov     eax, [edi]
.text:00384CD4                 mov     esi, [eax+8]
.text:00384CD7                 mov     ecx, esi
.text:00384CD9                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384CDF                 mov     ecx, edi
.text:00384CE1                 call    esi             ; Indirect Call Near Procedure
.text:00384CE3                 test    eax, eax        ; Logical Compare
.text:00384CE5                 jnz     short loc_384C86 ; Jump if Not Zero (ZF=0)
.text:00384CE7
.text:00384CE7 loc_384CE7:                             ; CODE XREF: sub_384AA0+1E4↑j
.text:00384CE7                 xor     ecx, ecx        ; Logical Exclusive OR
.text:00384CE9
.text:00384CE9 loc_384CE9:                             ; CODE XREF: sub_384AA0+307↓j
.text:00384CE9                                         ; sub_384AA0+312↓j ...
.text:00384CE9                 push    ecx             ; lpMem
.text:00384CEA                 push    0               ; dwFlags
.text:00384CEC                 call    ds:GetProcessHeap ; Indirect Call Near Procedure
.text:00384CF2                 push    eax             ; hHeap
.text:00384CF3                 call    ds:HeapFree     ; Indirect Call Near Procedure
.text:00384CF9
.text:00384CF9 loc_384CF9:                             ; CODE XREF: sub_384AA0+210↑j
.text:00384CF9                                         ; sub_384AA0+2B7↓j ...
.text:00384CF9                 mov     edi, [ebp+var_8]
.text:00384CFC                 mov     eax, [edi]
.text:00384CFE                 mov     esi, [eax]
.text:00384D00                 mov     ecx, esi
.text:00384D02                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384D08                 mov     ecx, edi
.text:00384D0A                 call    esi             ; Indirect Call Near Procedure
.text:00384D0C
.text:00384D0C loc_384D0C:                             ; CODE XREF: sub_384AA0+1C0↑j
.text:00384D0C                                         ; sub_384AA0+1CB↑j
.text:00384D0C                 mov     edi, [ebp+var_14]
.text:00384D0F                 mov     eax, [edi]
.text:00384D11                 mov     esi, [eax+40h]
.text:00384D14                 mov     ecx, esi
.text:00384D16                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384D1C                 mov     ecx, edi
.text:00384D1E                 call    esi             ; Indirect Call Near Procedure
.text:00384D20
.text:00384D20 loc_384D20:                             ; CODE XREF: sub_384AA0+1A0↑j
.text:00384D20                 mov     edi, [ebp+var_20]
.text:00384D23                 mov     eax, [edi]
.text:00384D25                 mov     esi, [eax+38h]
.text:00384D28                 mov     ecx, esi
.text:00384D2A                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384D30                 mov     ecx, edi
.text:00384D32                 call    esi             ; Indirect Call Near Procedure
.text:00384D34
.text:00384D34 loc_384D34:                             ; CODE XREF: sub_384AA0+14F↑j
.text:00384D34                                         ; sub_384AA0+176↑j
.text:00384D34                 mov     edi, [ebp+var_18]
.text:00384D37                 mov     edx, [edi]
.text:00384D39                 mov     esi, [edx+2Ch]
.text:00384D3C                 mov     ecx, esi
.text:00384D3E                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384D44                 mov     ecx, edi
.text:00384D46                 call    esi             ; Indirect Call Near Procedure
.text:00384D48                 mov     eax, [ebp+var_24]
.text:00384D4B                 pop     edi
.text:00384D4C                 pop     esi
.text:00384D4D                 pop     ebx
.text:00384D4E                 mov     esp, ebp
.text:00384D50                 pop     ebp
.text:00384D51                 retn                    ; Return Near from Procedure
.text:00384D52 ; ---------------------------------------------------------------------------
.text:00384D52
.text:00384D52 loc_384D52:                             ; CODE XREF: sub_384AA0+229↑j
.text:00384D52                 mov     esi, [ebp+var_10]
.text:00384D55                 test    esi, esi        ; Logical Compare
.text:00384D57                 jz      short loc_384CF9 ; Jump if Zero (ZF=1)
.text:00384D59                 cmp     esi, 1FFFFFFFh  ; Compare Two Operands
.text:00384D5F                 jnb     short loc_384CF9 ; Jump if Not Below (CF=0)
.text:00384D61                 shl     esi, 3          ; Shift Logical Left
.text:00384D64                 call    ds:GetProcessHeap ; Indirect Call Near Procedure
.text:00384D6A                 push    esi             ; dwBytes
.text:00384D6B                 push    0               ; dwFlags
.text:00384D6D                 push    eax             ; hHeap
.text:00384D6E                 call    ds:HeapAlloc    ; Indirect Call Near Procedure
.text:00384D74                 mov     [ebp+var_C], eax
.text:00384D77                 test    eax, eax        ; Logical Compare
.text:00384D79                 jz      loc_384CF9      ; Jump if Zero (ZF=1)
.text:00384D7F                 mov     edi, [ebp+var_8]
.text:00384D82                 push    eax
.text:00384D83                 lea     eax, [ebp+var_10] ; Load Effective Address
.text:00384D86                 push    eax
.text:00384D87                 mov     ecx, [edi]
.text:00384D89                 lea     eax, [ebp+var_2C] ; Load Effective Address
.text:00384D8C                 push    0
.text:00384D8E                 push    0
.text:00384D90                 push    0
.text:00384D92                 mov     esi, [ecx+0Ch]
.text:00384D95                 mov     ecx, esi
.text:00384D97                 push    eax
.text:00384D98                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384D9E                 mov     ecx, edi
.text:00384DA0                 call    esi             ; Indirect Call Near Procedure
.text:00384DA2                 mov     ecx, [ebp+var_C]
.text:00384DA5                 test    al, al          ; Logical Compare
.text:00384DA7                 jz      loc_384CE9      ; Jump if Zero (ZF=1)
.text:00384DAD                 sub     ebx, [ebp+var_1C] ; Integer Subtraction
.text:00384DB0                 cmp     ebx, [ecx]      ; Compare Two Operands
.text:00384DB2                 jb      loc_384CE9      ; Jump if Below (CF=1)
.text:00384DB8                 mov     edx, [ebp+var_10]
.text:00384DBB                 mov     eax, 1
.text:00384DC0                 cmp     edx, eax        ; Compare Two Operands
.text:00384DC2                 jbe     short loc_384DCE ; Jump if Below or Equal (CF=1 | ZF=1)
.text:00384DC4
.text:00384DC4 loc_384DC4:                             ; CODE XREF: sub_384AA0+32C↓j
.text:00384DC4                 cmp     ebx, [ecx+eax*8] ; Compare Two Operands
.text:00384DC7                 jb      short loc_384DCE ; Jump if Below (CF=1)
.text:00384DC9                 inc     eax             ; Increment by 1
.text:00384DCA                 cmp     eax, edx        ; Compare Two Operands
.text:00384DCC                 jb      short loc_384DC4 ; Jump if Below (CF=1)
.text:00384DCE
.text:00384DCE loc_384DCE:                             ; CODE XREF: sub_384AA0+322↑j
.text:00384DCE                                         ; sub_384AA0+327↑j
.text:00384DCE                 mov     eax, [ecx+eax*8-4]
.text:00384DD2                 mov     ecx, [ebp+arg_C]
.text:00384DD5                 and     eax, 0FFFFFFh   ; Logical AND
.text:00384DDA                 mov     edi, [ebp+var_14]
.text:00384DDD                 push    0
.text:00384DDF                 push    0
.text:00384DE1                 mov     [ecx], eax
.text:00384DE3                 mov     eax, [edi]
.text:00384DE5                 push    0
.text:00384DE7                 mov     esi, [eax+70h]
.text:00384DEA                 lea     eax, [ebp+arg_8] ; Load Effective Address
.text:00384DED                 push    eax
.text:00384DEE                 push    [ebp+arg_4]
.text:00384DF1                 mov     ecx, esi
.text:00384DF3                 push    [ebp+var_2C]
.text:00384DF6                 call    ds:___guard_check_icall_fptr ; Indirect Call Near Procedure
.text:00384DFC                 mov     ecx, edi
.text:00384DFE                 call    esi             ; Indirect Call Near Procedure
.text:00384E00                 mov     ecx, [ebp+var_C]
.text:00384E03                 test    al, al          ; Logical Compare
.text:00384E05                 jz      loc_384CE9      ; Jump if Zero (ZF=1)
.text:00384E0B                 mov     [ebp+var_24], 1
.text:00384E12                 jmp     loc_384CE9      ; Jump
.text:00384E17 ; ---------------------------------------------------------------------------
.text:00384E17
.text:00384E17 loc_384E17:                             ; CODE XREF: sub_384AA0+2D↑j
.text:00384E17                                         ; sub_384AA0+46↑j ...
.text:00384E17                 pop     edi
.text:00384E18                 pop     esi
.text:00384E19                 xor     eax, eax        ; Logical Exclusive OR
.text:00384E1B                 pop     ebx
.text:00384E1C                 mov     esp, ebp
.text:00384E1E                 pop     ebp
.text:00384E1F                 retn                    ; Return Near from Procedure
.text:00384E1F sub_384AA0      endp
.text:00384E1F
.text:00384E1F ; ---------------------------------------------------------------------------
.text:00384E20                 align 100h
.text:00384F00
.text:00384F00 ; =============== S U B R O U T I N E =======================================
.text:00384F00
.text:00384F00 ; Attributes: bp-based frame
.text:00384F00
.text:00384F00 SEH_412C20      proc near               ; DATA XREF: sub_382C20+A↑o
.text:00384F00
.text:00384F00 var_4           = dword ptr -4
.text:00384F00 arg_0           = dword ptr  8
.text:00384F00 arg_4           = dword ptr  0Ch
.text:00384F00 arg_8           = dword ptr  10h
.text:00384F00 arg_C           = dword ptr  14h
.text:00384F00
.text:00384F00                 push    ebp
.text:00384F01                 mov     ebp, esp
.text:00384F03                 push    ecx
.text:00384F04                 mov     eax, [ebp+arg_C]
.text:00384F07                 push    eax
.text:00384F08                 mov     ecx, [ebp+arg_8]
.text:00384F0B                 push    ecx
.text:00384F0C                 mov     edx, [ebp+arg_4]
.text:00384F0F                 push    edx
.text:00384F10                 mov     eax, [ebp+arg_0]
.text:00384F13                 push    eax
.text:00384F14                 call    SEH_412240      ; Call Procedure
.text:00384F19                 add     esp, 10h        ; Add
.text:00384F1C                 mov     [ebp+var_4], eax
.text:00384F1F                 mov     ecx, [ebp+arg_0]
.text:00384F22                 mov     edx, [ecx+4]
.text:00384F25                 and     edx, 66h        ; Logical AND
.text:00384F28                 jnz     short loc_384F54 ; Jump if Not Zero (ZF=0)
.text:00384F2A                 mov     eax, [ebp+arg_0]
.text:00384F2D                 cmp     dword ptr [eax], 0E06D7363h ; Compare Two Operands
.text:00384F33                 jnz     short loc_384F54 ; Jump if Not Zero (ZF=0)
.text:00384F35                 cmp     [ebp+var_4], 1  ; Compare Two Operands
.text:00384F39                 jnz     short loc_384F54 ; Jump if Not Zero (ZF=0)
.text:00384F3B                 call    j___current_exception ; Call Procedure
.text:00384F40                 mov     ecx, [ebp+arg_0]
.text:00384F43                 mov     [eax], ecx
.text:00384F45                 call    j___current_exception_context ; Call Procedure
.text:00384F4A                 mov     edx, [ebp+arg_8]
.text:00384F4D                 mov     [eax], edx
.text:00384F4F                 call    j_terminate     ; Call Procedure
.text:00384F54
.text:00384F54 loc_384F54:                             ; CODE XREF: SEH_412C20+28↑j
.text:00384F54                                         ; SEH_412C20+33↑j ...
.text:00384F54                 mov     eax, [ebp+var_4]
.text:00384F57                 mov     esp, ebp
.text:00384F59                 pop     ebp
.text:00384F5A                 retn                    ; Return Near from Procedure
.text:00384F5A SEH_412C20      endp
.text:00384F5A
.text:00384F5A ; ---------------------------------------------------------------------------
.text:00384F5B                 align 40h
.text:00384F80
.text:00384F80 ; =============== S U B R O U T I N E =======================================
.text:00384F80
.text:00384F80 ; Attributes: bp-based frame
.text:00384F80
.text:00384F80 sub_384F80      proc near               ; CODE XREF: sub_3811C2↑j
.text:00384F80
.text:00384F80 var_48          = dword ptr -48h
.text:00384F80 var_44          = dword ptr -44h
.text:00384F80 var_40          = dword ptr -40h
.text:00384F80 var_3C          = dword ptr -3Ch
.text:00384F80 var_38          = dword ptr -38h
.text:00384F80 var_34          = dword ptr -34h
.text:00384F80 var_30          = dword ptr -30h
.text:00384F80 var_2C          = dword ptr -2Ch
.text:00384F80 var_28          = dword ptr -28h
.text:00384F80 var_21          = byte ptr -21h
.text:00384F80 var_20          = dword ptr -20h
.text:00384F80 var_10          = dword ptr -10h
.text:00384F80 var_C           = dword ptr -0Ch
.text:00384F80 var_8           = dword ptr -8
.text:00384F80 var_4           = dword ptr -4
.text:00384F80
.text:00384F80                 push    ebp
.text:00384F81                 mov     ebp, esp
.text:00384F83                 sub     esp, 48h        ; Integer Subtraction
.text:00384F86                 mov     eax, ___security_cookie
.text:00384F8B                 xor     eax, ebp        ; Logical Exclusive OR
.text:00384F8D                 mov     [ebp+var_4], eax
.text:00384F90                 push    ebx
.text:00384F91                 push    esi
.text:00384F92                 mov     dword_38A6A0, 0
.text:00384F9C                 mov     eax, dword_38A02C
.text:00384FA1                 or      eax, 1          ; Logical Inclusive OR
.text:00384FA4                 mov     dword_38A02C, eax
.text:00384FA9                 push    0Ah             ; ProcessorFeature
.text:00384FAB                 call    ds:IsProcessorFeaturePresent ; Indirect Call Near Procedure
.text:00384FB1                 test    eax, eax        ; Logical Compare
.text:00384FB3                 jnz     short loc_384FBC ; Jump if Not Zero (ZF=0)
.text:00384FB5                 xor     eax, eax        ; Logical Exclusive OR
.text:00384FB7                 jmp     loc_3852A3      ; Jump
.text:00384FBC ; ---------------------------------------------------------------------------
.text:00384FBC
.text:00384FBC loc_384FBC:                             ; CODE XREF: sub_384F80+33↑j
.text:00384FBC                 mov     [ebp+var_10], 0
.text:00384FC3                 mov     [ebp+var_C], 0
.text:00384FCA                 mov     [ebp+var_8], 0
.text:00384FD1                 lea     esi, [ebp+var_20] ; Load Effective Address
.text:00384FD4                 xor     eax, eax        ; Logical Exclusive OR
.text:00384FD6                 xor     ecx, ecx        ; Logical Exclusive OR
.text:00384FD8                 cpuid                   ; Get CPU ID
.text:00384FDA                 mov     [esi], eax
.text:00384FDC                 mov     [esi+4], ebx
.text:00384FDF                 mov     [esi+8], ecx
.text:00384FE2                 mov     [esi+0Ch], edx
.text:00384FE5                 mov     ecx, 4
.text:00384FEA                 imul    edx, ecx, 0     ; Signed Multiply
.text:00384FED                 mov     eax, [ebp+edx+var_20]
.text:00384FF1                 mov     [ebp+var_38], eax
.text:00384FF4                 mov     ecx, 4
.text:00384FF9                 shl     ecx, 0          ; Shift Logical Left
.text:00384FFC                 mov     edx, [ebp+ecx+var_20]
.text:00385000                 xor     edx, 756E6547h  ; Logical Exclusive OR
.text:00385006                 mov     eax, 4
.text:0038500B                 imul    ecx, eax, 3     ; Signed Multiply
.text:0038500E                 mov     eax, [ebp+ecx+var_20]
.text:00385012                 xor     eax, 49656E69h  ; Logical Exclusive OR
.text:00385017                 or      edx, eax        ; Logical Inclusive OR
.text:00385019                 mov     ecx, 4
.text:0038501E                 shl     ecx, 1          ; Shift Logical Left
.text:00385020                 mov     eax, [ebp+ecx+var_20]
.text:00385024                 xor     eax, 6C65746Eh  ; Logical Exclusive OR
.text:00385029                 or      edx, eax        ; Logical Inclusive OR
.text:0038502B                 jnz     short loc_385036 ; Jump if Not Zero (ZF=0)
.text:0038502D                 mov     [ebp+var_2C], 1
.text:00385034                 jmp     short loc_38503D ; Jump
.text:00385036 ; ---------------------------------------------------------------------------
.text:00385036
.text:00385036 loc_385036:                             ; CODE XREF: sub_384F80+AB↑j
.text:00385036                 mov     [ebp+var_2C], 0
.text:0038503D
.text:0038503D loc_38503D:                             ; CODE XREF: sub_384F80+B4↑j
.text:0038503D                 mov     cl, byte ptr [ebp+var_2C]
.text:00385040                 mov     [ebp+var_21], cl
.text:00385043                 lea     esi, [ebp+var_20] ; Load Effective Address
.text:00385046                 mov     eax, 1
.text:0038504B                 xor     ecx, ecx        ; Logical Exclusive OR
.text:0038504D                 cpuid                   ; Get CPU ID
.text:0038504F                 mov     [esi], eax
.text:00385051                 mov     [esi+4], ebx
.text:00385054                 mov     [esi+8], ecx
.text:00385057                 mov     [esi+0Ch], edx
.text:0038505A                 mov     edx, 4
.text:0038505F                 imul    eax, edx, 0     ; Signed Multiply
.text:00385062                 mov     ecx, [ebp+eax+var_20]
.text:00385066                 mov     [ebp+var_28], ecx
.text:00385069                 movzx   edx, [ebp+var_21] ; Move with Zero-Extend
.text:0038506D                 test    edx, edx        ; Logical Compare
.text:0038506F                 jz      short loc_3850E0 ; Jump if Zero (ZF=1)
.text:00385071                 mov     eax, [ebp+var_28]
.text:00385074                 and     eax, 0FFF3FF0h  ; Logical AND
.text:00385079                 cmp     eax, 106C0h     ; Compare Two Operands
.text:0038507E                 jz      short loc_3850D3 ; Jump if Zero (ZF=1)
.text:00385080                 mov     ecx, [ebp+var_28]
.text:00385083                 and     ecx, 0FFF3FF0h  ; Logical AND
.text:00385089                 cmp     ecx, 20660h     ; Compare Two Operands
.text:0038508F                 jz      short loc_3850D3 ; Jump if Zero (ZF=1)
.text:00385091                 mov     edx, [ebp+var_28]
.text:00385094                 and     edx, 0FFF3FF0h  ; Logical AND
.text:0038509A                 cmp     edx, 20670h     ; Compare Two Operands
.text:003850A0                 jz      short loc_3850D3 ; Jump if Zero (ZF=1)
.text:003850A2                 mov     eax, [ebp+var_28]
.text:003850A5                 and     eax, 0FFF3FF0h  ; Logical AND
.text:003850AA                 cmp     eax, 30650h     ; Compare Two Operands
.text:003850AF                 jz      short loc_3850D3 ; Jump if Zero (ZF=1)
.text:003850B1                 mov     ecx, [ebp+var_28]
.text:003850B4                 and     ecx, 0FFF3FF0h  ; Logical AND
.text:003850BA                 cmp     ecx, 30660h     ; Compare Two Operands
.text:003850C0                 jz      short loc_3850D3 ; Jump if Zero (ZF=1)
.text:003850C2                 mov     edx, [ebp+var_28]
.text:003850C5                 and     edx, 0FFF3FF0h  ; Logical AND
.text:003850CB                 cmp     edx, 30670h     ; Compare Two Operands
.text:003850D1                 jnz     short loc_3850E0 ; Jump if Not Zero (ZF=0)
.text:003850D3
.text:003850D3 loc_3850D3:                             ; CODE XREF: sub_384F80+FE↑j
.text:003850D3                                         ; sub_384F80+10F↑j ...
.text:003850D3                 mov     eax, dword_38A6A4
.text:003850D8                 or      eax, 1          ; Logical Inclusive OR
.text:003850DB                 mov     dword_38A6A4, eax
.text:003850E0
.text:003850E0 loc_3850E0:                             ; CODE XREF: sub_384F80+EF↑j
.text:003850E0                                         ; sub_384F80+151↑j
.text:003850E0                 mov     ecx, 4
.text:003850E5                 imul    edx, ecx, 3     ; Signed Multiply
.text:003850E8                 mov     eax, 4
.text:003850ED                 imul    ecx, eax, 0     ; Signed Multiply
.text:003850F0                 mov     edx, [ebp+edx+var_20]
.text:003850F4                 mov     [ebp+ecx+var_10], edx
.text:003850F8                 mov     eax, 4
.text:003850FD                 shl     eax, 1          ; Shift Logical Left
.text:003850FF                 mov     ecx, 4
.text:00385104                 shl     ecx, 0          ; Shift Logical Left
.text:00385107                 mov     edx, [ebp+eax+var_20]
.text:0038510B                 mov     [ebp+ecx+var_10], edx
.text:0038510F                 cmp     [ebp+var_38], 7 ; Compare Two Operands
.text:00385113                 jl      short loc_385166 ; Jump if Less (SF!=OF)
.text:00385115                 lea     esi, [ebp+var_20] ; Load Effective Address
.text:00385118                 mov     eax, 7
.text:0038511D                 xor     ecx, ecx        ; Logical Exclusive OR
.text:0038511F                 cpuid                   ; Get CPU ID
.text:00385121                 mov     [esi], eax
.text:00385123                 mov     [esi+4], ebx
.text:00385126                 mov     [esi+8], ecx
.text:00385129                 mov     [esi+0Ch], edx
.text:0038512C                 mov     eax, 4
.text:00385131                 shl     eax, 0          ; Shift Logical Left
.text:00385134                 mov     ecx, 4
.text:00385139                 shl     ecx, 1          ; Shift Logical Left
.text:0038513B                 mov     edx, [ebp+eax+var_20]
.text:0038513F                 mov     [ebp+ecx+var_10], edx
.text:00385143                 mov     eax, 4
.text:00385148                 shl     eax, 0          ; Shift Logical Left
.text:0038514B                 mov     ecx, [ebp+eax+var_20]
.text:0038514F                 and     ecx, 200h       ; Logical AND
.text:00385155                 jz      short loc_385166 ; Jump if Zero (ZF=1)
.text:00385157                 mov     edx, dword_38A6A4
.text:0038515D                 or      edx, 2          ; Logical Inclusive OR
.text:00385160                 mov     dword_38A6A4, edx
.text:00385166
.text:00385166 loc_385166:                             ; CODE XREF: sub_384F80+193↑j
.text:00385166                                         ; sub_384F80+1D5↑j
.text:00385166                 mov     dword_38A6A0, 1
.text:00385170                 mov     eax, dword_38A02C
.text:00385175                 or      eax, 2          ; Logical Inclusive OR
.text:00385178                 mov     dword_38A02C, eax
.text:0038517D                 mov     ecx, 4
.text:00385182                 shl     ecx, 0          ; Shift Logical Left
.text:00385185                 mov     edx, [ebp+ecx+var_10]
.text:00385189                 and     edx, 100000h    ; Logical AND
.text:0038518F                 jz      loc_3852A1      ; Jump if Zero (ZF=1)
.text:00385195                 mov     dword_38A6A0, 2
.text:0038519F                 mov     eax, dword_38A02C
.text:003851A4                 or      eax, 4          ; Logical Inclusive OR
.text:003851A7                 mov     dword_38A02C, eax
.text:003851AC                 mov     ecx, 4
.text:003851B1                 shl     ecx, 0          ; Shift Logical Left
.text:003851B4                 mov     edx, [ebp+ecx+var_10]
.text:003851B8                 and     edx, 8000000h   ; Logical AND
.text:003851BE                 jz      loc_3852A1      ; Jump if Zero (ZF=1)
.text:003851C4                 mov     eax, 4
.text:003851C9                 shl     eax, 0          ; Shift Logical Left
.text:003851CC                 mov     ecx, [ebp+eax+var_10]
.text:003851D0                 and     ecx, 10000000h  ; Logical AND
.text:003851D6                 jz      loc_3852A1      ; Jump if Zero (ZF=1)
.text:003851DC                 xor     ecx, ecx        ; Logical Exclusive OR
.text:003851DE                 xgetbv                  ; Get Value of Extended Control Register
.text:003851E1                 mov     [ebp+var_34], eax
.text:003851E4                 mov     [ebp+var_30], edx
.text:003851E7                 mov     edx, [ebp+var_34]
.text:003851EA                 mov     eax, [ebp+var_30]
.text:003851ED                 and     edx, 6          ; Logical AND
.text:003851F0                 and     eax, 0          ; Logical AND
.text:003851F3                 mov     [ebp+var_40], edx
.text:003851F6                 mov     [ebp+var_3C], eax
.text:003851F9                 cmp     [ebp+var_40], 6 ; Compare Two Operands
.text:003851FD                 jnz     loc_3852A1      ; Jump if Not Zero (ZF=0)
.text:00385203                 cmp     [ebp+var_3C], 0 ; Compare Two Operands
.text:00385207                 jnz     loc_3852A1      ; Jump if Not Zero (ZF=0)
.text:0038520D                 mov     dword_38A6A0, 3
.text:00385217                 mov     ecx, dword_38A02C
.text:0038521D                 or      ecx, 8          ; Logical Inclusive OR
.text:00385220                 mov     dword_38A02C, ecx
.text:00385226                 mov     edx, 4
.text:0038522B                 shl     edx, 1          ; Shift Logical Left
.text:0038522D                 mov     eax, [ebp+edx+var_10]
.text:00385231                 and     eax, 20h        ; Logical AND
.text:00385234                 jz      short loc_3852A1 ; Jump if Zero (ZF=1)
.text:00385236                 mov     dword_38A6A0, 5
.text:00385240                 mov     ecx, dword_38A02C
.text:00385246                 or      ecx, 20h        ; Logical Inclusive OR
.text:00385249                 mov     dword_38A02C, ecx
.text:0038524F                 mov     edx, 4
.text:00385254                 shl     edx, 1          ; Shift Logical Left
.text:00385256                 mov     eax, [ebp+edx+var_10]
.text:0038525A                 and     eax, 0D0030000h ; Logical AND
.text:0038525F                 cmp     eax, 0D0030000h ; Compare Two Operands
.text:00385264                 jnz     short loc_3852A1 ; Jump if Not Zero (ZF=0)
.text:00385266                 mov     ecx, [ebp+var_34]
.text:00385269                 mov     edx, [ebp+var_30]
.text:0038526C                 and     ecx, 0E0h       ; Logical AND
.text:00385272                 and     edx, 0          ; Logical AND
.text:00385275                 mov     [ebp+var_48], ecx
.text:00385278                 mov     [ebp+var_44], edx
.text:0038527B                 cmp     [ebp+var_48], 0E0h ; Compare Two Operands
.text:00385282                 jnz     short loc_3852A1 ; Jump if Not Zero (ZF=0)
.text:00385284                 cmp     [ebp+var_44], 0 ; Compare Two Operands
.text:00385288                 jnz     short loc_3852A1 ; Jump if Not Zero (ZF=0)
.text:0038528A                 mov     dword_38A6A0, 6
.text:00385294                 mov     eax, dword_38A02C
.text:00385299                 or      eax, 40h        ; Logical Inclusive OR
.text:0038529C                 mov     dword_38A02C, eax
.text:003852A1
.text:003852A1 loc_3852A1:                             ; CODE XREF: sub_384F80+20F↑j
.text:003852A1                                         ; sub_384F80+23E↑j ...
.text:003852A1                 xor     eax, eax        ; Logical Exclusive OR
.text:003852A3
.text:003852A3 loc_3852A3:                             ; CODE XREF: sub_384F80+37↑j
.text:003852A3                 pop     esi
.text:003852A4                 pop     ebx
.text:003852A5                 mov     ecx, [ebp+var_4]
.text:003852A8                 xor     ecx, ebp        ; StackCookie
.text:003852AA                 call    j_@__security_check_cookie@4 ; __security_check_cookie(x)
.text:003852AF                 mov     esp, ebp
.text:003852B1                 pop     ebp
.text:003852B2                 retn                    ; Return Near from Procedure
.text:003852B2 sub_384F80      endp
.text:003852B2
.text:003852B2 ; ---------------------------------------------------------------------------
.text:003852B3                 db 0CDh dup(0CCh)
.text:00385380
.text:00385380 ; =============== S U B R O U T I N E =======================================
.text:00385380
.text:00385380 ; Attributes: bp-based frame
.text:00385380
.text:00385380 sub_385380      proc near               ; CODE XREF: sub_3811BD↑j
.text:00385380
.text:00385380 var_4           = dword ptr -4
.text:00385380
.text:00385380                 push    ebp
.text:00385381                 mov     ebp, esp
.text:00385383                 push    ecx
.text:00385384                 cmp     dword_38A030, 0 ; Compare Two Operands
.text:0038538B                 jz      short loc_385396 ; Jump if Zero (ZF=1)
.text:0038538D                 mov     [ebp+var_4], 1
.text:00385394                 jmp     short loc_38539D ; Jump
.text:00385396 ; ---------------------------------------------------------------------------
.text:00385396
.text:00385396 loc_385396:                             ; CODE XREF: sub_385380+B↑j
.text:00385396                 mov     [ebp+var_4], 0
.text:0038539D
.text:0038539D loc_38539D:                             ; CODE XREF: sub_385380+14↑j
.text:0038539D                 mov     eax, [ebp+var_4]
.text:003853A0                 mov     esp, ebp
.text:003853A2                 pop     ebp
.text:003853A3                 retn                    ; Return Near from Procedure
.text:003853A3 sub_385380      endp
.text:003853A3
.text:003853A3 ; ---------------------------------------------------------------------------
.text:003853A4                 db 9 dup(0CCh)
.text:003853AD ; [00000006 BYTES: COLLAPSED FUNCTION __std_type_info_destroy_list. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853B3 ; [00000006 BYTES: COLLAPSED FUNCTION __current_exception. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853B9 ; [00000006 BYTES: COLLAPSED FUNCTION __current_exception_context. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853BF ; [00000006 BYTES: COLLAPSED FUNCTION memset. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853C5 ; [00000006 BYTES: COLLAPSED FUNCTION _except_handler4_common. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853CB ; [00000006 BYTES: COLLAPSED FUNCTION __vcrt_GetModuleFileNameW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853D1 ; [00000006 BYTES: COLLAPSED FUNCTION __vcrt_GetModuleHandleW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853D7 ; [00000006 BYTES: COLLAPSED FUNCTION __vcrt_LoadLibraryExW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853DD ; [00000006 BYTES: COLLAPSED FUNCTION exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003853E3
.text:003853E3 ; =============== S U B R O U T I N E =======================================
.text:003853E3
.text:003853E3 ; Attributes: thunk
.text:003853E3
.text:003853E3 ; int __cdecl strcmp(const char *Str1, const char *Str2)
.text:003853E3 strcmp          proc near               ; CODE XREF: j_strcmp↑j
.text:003853E3
.text:003853E3 Str1            = dword ptr  4
.text:003853E3 Str2            = dword ptr  8
.text:003853E3
.text:003853E3                 jmp     ds:__imp_strcmp ; Indirect Near Jump
.text:003853E3 strcmp          endp
.text:003853E3
.text:003853E9 ; ---------------------------------------------------------------------------
.text:003853E9
.text:003853E9 loc_3853E9:                             ; CODE XREF: .text:003811DB↑j
.text:003853E9                 jmp     ds:__acrt_iob_func ; Indirect Near Jump
.text:003853EF ; ---------------------------------------------------------------------------
.text:003853EF
.text:003853EF loc_3853EF:                             ; CODE XREF: .text:00381136↑j
.text:003853EF                 jmp     ds:fgets        ; Indirect Near Jump
.text:003853F5 ; ---------------------------------------------------------------------------
.text:003853F5
.text:003853F5 loc_3853F5:                             ; CODE XREF: .text:00381109↑j
.text:003853F5                 jmp     ds:__stdio_common_vfprintf ; Indirect Near Jump
.text:003853FB ; [00000006 BYTES: COLLAPSED FUNCTION _CrtDbgReport. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385401 ; [00000006 BYTES: COLLAPSED FUNCTION _CrtDbgReportW. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385407 ; [00000006 BYTES: COLLAPSED FUNCTION _seh_filter_exe. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038540D ; [00000006 BYTES: COLLAPSED FUNCTION _set_app_type. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385413
.text:00385413 ; =============== S U B R O U T I N E =======================================
.text:00385413
.text:00385413 ; Attributes: thunk
.text:00385413
.text:00385413 ; void __cdecl _setusermatherr(_UserMathErrorFunctionPointer UserMathErrorFunction)
.text:00385413 __setusermatherr proc near              ; CODE XREF: j___setusermatherr↑j
.text:00385413
.text:00385413 UserMathErrorFunction= dword ptr  4
.text:00385413
.text:00385413                 jmp     ds:__imp___setusermatherr ; Indirect Near Jump
.text:00385413 __setusermatherr endp
.text:00385413
.text:00385419
.text:00385419 ; =============== S U B R O U T I N E =======================================
.text:00385419
.text:00385419 ; Attributes: thunk
.text:00385419
.text:00385419 ; errno_t __cdecl configure_narrow_argv(_crt_argv_mode mode)
.text:00385419 _configure_narrow_argv proc near        ; CODE XREF: j__configure_narrow_argv↑j
.text:00385419
.text:00385419 mode            = dword ptr  4
.text:00385419
.text:00385419                 jmp     ds:__imp__configure_narrow_argv ; Indirect Near Jump
.text:00385419 _configure_narrow_argv endp
.text:00385419
.text:0038541F ; [00000006 BYTES: COLLAPSED FUNCTION _initialize_narrow_environment. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385425 ; [00000006 BYTES: COLLAPSED FUNCTION _get_initial_narrow_environment. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038542B ; [00000006 BYTES: COLLAPSED FUNCTION _initterm. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385431 ; [00000006 BYTES: COLLAPSED FUNCTION _initterm_e. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385437 ; [00000006 BYTES: COLLAPSED FUNCTION _exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038543D ; [00000006 BYTES: COLLAPSED FUNCTION _set_fmode. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385443 ; [00000006 BYTES: COLLAPSED FUNCTION __p___argc. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385449 ; [00000006 BYTES: COLLAPSED FUNCTION __p___argv. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038544F ; [00000006 BYTES: COLLAPSED FUNCTION _cexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385455 ; [00000006 BYTES: COLLAPSED FUNCTION _c_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038545B ; [00000006 BYTES: COLLAPSED FUNCTION _register_thread_local_exe_atexit_callback. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385461 ; [00000006 BYTES: COLLAPSED FUNCTION _configthreadlocale. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385467
.text:00385467 ; =============== S U B R O U T I N E =======================================
.text:00385467
.text:00385467 ; Attributes: thunk
.text:00385467
.text:00385467 ; int __cdecl set_new_mode(int NewMode)
.text:00385467 _set_new_mode   proc near               ; CODE XREF: j__set_new_mode↑j
.text:00385467
.text:00385467 NewMode         = dword ptr  4
.text:00385467
.text:00385467                 jmp     ds:__imp__set_new_mode ; Indirect Near Jump
.text:00385467 _set_new_mode   endp
.text:00385467
.text:0038546D ; [00000006 BYTES: COLLAPSED FUNCTION __p__commode. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385473
.text:00385473 ; =============== S U B R O U T I N E =======================================
.text:00385473
.text:00385473 ; Attributes: thunk
.text:00385473
.text:00385473 ; errno_t __cdecl strcpy_s(char *Destination, rsize_t SizeInBytes, const char *Source)
.text:00385473 strcpy_s        proc near               ; CODE XREF: j_strcpy_s↑j
.text:00385473
.text:00385473 Destination     = dword ptr  4
.text:00385473 SizeInBytes     = dword ptr  8
.text:00385473 Source          = dword ptr  0Ch
.text:00385473
.text:00385473                 jmp     ds:__imp_strcpy_s ; Indirect Near Jump
.text:00385473 strcpy_s        endp
.text:00385473
.text:00385479 ; [00000006 BYTES: COLLAPSED FUNCTION strcat_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038547F ; [00000006 BYTES: COLLAPSED FUNCTION __stdio_common_vsprintf_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385485 ; [00000006 BYTES: COLLAPSED FUNCTION _seh_filter_dll. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038548B ; [00000006 BYTES: COLLAPSED FUNCTION _initialize_onexit_table. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385491 ; [00000006 BYTES: COLLAPSED FUNCTION _register_onexit_function. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00385497 ; [00000006 BYTES: COLLAPSED FUNCTION _execute_onexit_table. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0038549D ; [00000006 BYTES: COLLAPSED FUNCTION _crt_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003854A3 ; [00000006 BYTES: COLLAPSED FUNCTION _crt_at_quick_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003854A9
.text:003854A9 ; =============== S U B R O U T I N E =======================================
.text:003854A9
.text:003854A9 ; Attributes: thunk
.text:003854A9
.text:003854A9 ; errno_t __cdecl controlfp_s(unsigned int *CurrentState, unsigned int NewValue, unsigned int Mask)
.text:003854A9 _controlfp_s    proc near               ; CODE XREF: j__controlfp_s↑j
.text:003854A9
.text:003854A9 CurrentState    = dword ptr  4
.text:003854A9 NewValue        = dword ptr  8
.text:003854A9 Mask            = dword ptr  0Ch
.text:003854A9
.text:003854A9                 jmp     ds:__imp__controlfp_s ; Indirect Near Jump
.text:003854A9 _controlfp_s    endp
.text:003854A9
.text:003854AF ; [00000006 BYTES: COLLAPSED FUNCTION terminate. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003854B5 ; [00000006 BYTES: COLLAPSED FUNCTION _wmakepath_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003854BB ; [00000006 BYTES: COLLAPSED FUNCTION _wsplitpath_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:003854C1
.text:003854C1 ; =============== S U B R O U T I N E =======================================
.text:003854C1
.text:003854C1 ; Attributes: thunk
.text:003854C1
.text:003854C1 ; errno_t __cdecl wcscpy_s(wchar_t *Destination, rsize_t SizeInWords, const wchar_t *Source)
.text:003854C1 wcscpy_s        proc near               ; CODE XREF: j_wcscpy_s↑j
.text:003854C1
.text:003854C1 Destination     = dword ptr  4
.text:003854C1 SizeInWords     = dword ptr  8
.text:003854C1 Source          = dword ptr  0Ch
.text:003854C1
.text:003854C1                 jmp     ds:__imp_wcscpy_s ; Indirect Near Jump
.text:003854C1 wcscpy_s        endp
.text:003854C1
.text:003854C7 ; ---------------------------------------------------------------------------
.text:003854C7
.text:003854C7 loc_3854C7:                             ; CODE XREF: .text:003810D2↑j
.text:003854C7                 jmp     ds:GetCurrentThreadId ; Indirect Near Jump
.text:003854CD ; ---------------------------------------------------------------------------
.text:003854CD
.text:003854CD loc_3854CD:                             ; CODE XREF: .text:00381190↑j
.text:003854CD                 jmp     ds:IsDebuggerPresent ; Indirect Near Jump
.text:003854D3 ; ---------------------------------------------------------------------------
.text:003854D3
.text:003854D3 loc_3854D3:                             ; CODE XREF: .text:00381320↑j
.text:003854D3                 jmp     ds:RaiseException ; Indirect Near Jump
.text:003854D9 ; ---------------------------------------------------------------------------
.text:003854D9
.text:003854D9 loc_3854D9:                             ; CODE XREF: .text:003811A4↑j
.text:003854D9                 jmp     ds:MultiByteToWideChar ; Indirect Near Jump
.text:003854DF ; ---------------------------------------------------------------------------
.text:003854DF
.text:003854DF loc_3854DF:                             ; CODE XREF: .text:00381253↑j
.text:003854DF                 jmp     ds:WideCharToMultiByte ; Indirect Near Jump
.text:003854E5 ; ---------------------------------------------------------------------------
.text:003854E5
.text:003854E5 loc_3854E5:                             ; CODE XREF: .text:003811F9↑j
.text:003854E5                 jmp     ds:UnhandledExceptionFilter ; Indirect Near Jump
.text:003854EB ; ---------------------------------------------------------------------------
.text:003854EB
.text:003854EB loc_3854EB:                             ; CODE XREF: .text:00381028↑j
.text:003854EB                 jmp     ds:SetUnhandledExceptionFilter ; Indirect Near Jump
.text:003854F1 ; ---------------------------------------------------------------------------
.text:003854F1
.text:003854F1 loc_3854F1:                             ; CODE XREF: .text:0038133E↑j
.text:003854F1                 jmp     ds:GetCurrentProcess ; Indirect Near Jump
.text:003854F7 ; ---------------------------------------------------------------------------
.text:003854F7
.text:003854F7 loc_3854F7:                             ; CODE XREF: .text:003811E5↑j
.text:003854F7                 jmp     ds:IsProcessorFeaturePresent ; Indirect Near Jump
.text:003854FD ; ---------------------------------------------------------------------------
.text:003854FD
.text:003854FD loc_3854FD:                             ; CODE XREF: .text:00381195↑j
.text:003854FD                 jmp     ds:QueryPerformanceCounter ; Indirect Near Jump
.text:00385503 ; ---------------------------------------------------------------------------
.text:00385503
.text:00385503 loc_385503:                             ; CODE XREF: .text:003810EB↑j
.text:00385503                 jmp     ds:GetCurrentProcessId ; Indirect Near Jump
.text:00385509 ; ---------------------------------------------------------------------------
.text:00385509
.text:00385509 loc_385509:                             ; CODE XREF: .text:00381046↑j
.text:00385509                 jmp     ds:GetSystemTimeAsFileTime ; Indirect Near Jump
.text:0038550F ; ---------------------------------------------------------------------------
.text:0038550F
.text:0038550F loc_38550F:                             ; CODE XREF: .text:003813B6↑j
.text:0038550F                 jmp     ds:InitializeSListHead ; Indirect Near Jump
.text:00385515 ; ---------------------------------------------------------------------------
.text:00385515
.text:00385515 loc_385515:                             ; CODE XREF: .text:00381361↑j
.text:00385515                 jmp     ds:GetStartupInfoW ; Indirect Near Jump
.text:0038551B ; ---------------------------------------------------------------------------
.text:0038551B
.text:0038551B loc_38551B:                             ; CODE XREF: .text:00381127↑j
.text:0038551B                 jmp     ds:GetModuleHandleW ; Indirect Near Jump
.text:00385521 ; ---------------------------------------------------------------------------
.text:00385521
.text:00385521 loc_385521:                             ; CODE XREF: .text:003812DA↑j
.text:00385521                 jmp     ds:GetLastError ; Indirect Near Jump
.text:00385527 ; ---------------------------------------------------------------------------
.text:00385527
.text:00385527 loc_385527:                             ; CODE XREF: .text:00381014↑j
.text:00385527                 jmp     ds:HeapAlloc    ; Indirect Near Jump
.text:0038552D ; ---------------------------------------------------------------------------
.text:0038552D
.text:0038552D loc_38552D:                             ; CODE XREF: .text:003813E3↑j
.text:0038552D                 jmp     ds:HeapFree     ; Indirect Near Jump
.text:00385533 ; ---------------------------------------------------------------------------
.text:00385533
.text:00385533 loc_385533:                             ; CODE XREF: .text:003810CD↑j
.text:00385533                 jmp     ds:GetProcessHeap ; Indirect Near Jump
.text:00385539 ; ---------------------------------------------------------------------------
.text:00385539
.text:00385539 loc_385539:                             ; CODE XREF: .text:003811D1↑j
.text:00385539                 jmp     ds:VirtualQuery ; Indirect Near Jump
.text:0038553F ; ---------------------------------------------------------------------------
.text:0038553F
.text:0038553F loc_38553F:                             ; CODE XREF: .text:003810F0↑j
.text:0038553F                 jmp     ds:FreeLibrary  ; Indirect Near Jump
.text:00385545 ; ---------------------------------------------------------------------------
.text:00385545
.text:00385545 loc_385545:                             ; CODE XREF: .text:003811B8↑j
.text:00385545                 jmp     ds:GetProcAddress ; Indirect Near Jump
.text:00385545 ; ---------------------------------------------------------------------------
.text:0038554B                 align 10h
.text:00385550
.text:00385550 ; =============== S U B R O U T I N E =======================================
.text:00385550
.text:00385550 ; Attributes: bp-based frame
.text:00385550
.text:00385550 sub_385550      proc near               ; CODE XREF: .text:00381276↑j
.text:00385550                                         ; sub_38129E↑j ...
.text:00385550                 push    ebp
.text:00385551                 mov     ebp, esp
.text:00385553                 mov     al, 1
.text:00385555                 pop     ebp
.text:00385556                 retn                    ; Return Near from Procedure
.text:00385556 sub_385550      endp
.text:00385556
.text:00385556 ; ---------------------------------------------------------------------------
.text:00385557                 align 10h
.text:00385560
.text:00385560 ; =============== S U B R O U T I N E =======================================
.text:00385560
.text:00385560 ; Attributes: bp-based frame
.text:00385560
.text:00385560 sub_385560      proc near               ; CODE XREF: sub_381267↑j
.text:00385560                                         ; sub_38128A↑j ...
.text:00385560                 push    ebp
.text:00385561                 mov     ebp, esp
.text:00385563                 mov     al, 1
.text:00385565                 pop     ebp
.text:00385566                 retn                    ; Return Near from Procedure
.text:00385566 sub_385560      endp
.text:00385566
.text:00385566 ; ---------------------------------------------------------------------------
.text:00385567                 align 10h
.text:00385570
.text:00385570 ; =============== S U B R O U T I N E =======================================
.text:00385570
.text:00385570 ; Attributes: bp-based frame
.text:00385570
.text:00385570 sub_385570      proc near               ; CODE XREF: sub_38111D↑j
.text:00385570                                         ; sub_3811A9↑j ...
.text:00385570                 push    ebp
.text:00385571                 mov     ebp, esp
.text:00385573                 mov     al, 1
.text:00385575                 pop     ebp
.text:00385576                 retn                    ; Return Near from Procedure
.text:00385576 sub_385570      endp
.text:00385576
.text:00385576 ; ---------------------------------------------------------------------------
.text:00385577                 align 10h
.text:00385580
.text:00385580 ; =============== S U B R O U T I N E =======================================
.text:00385580
.text:00385580 ; Attributes: bp-based frame
.text:00385580
.text:00385580 sub_385580      proc near               ; CODE XREF: sub_38101E↑j
.text:00385580                                         ; .text:003810A5↑j ...
.text:00385580                 push    ebp
.text:00385581                 mov     ebp, esp
.text:00385583                 mov     al, 1
.text:00385585                 pop     ebp
.text:00385586                 retn                    ; Return Near from Procedure
.text:00385586 sub_385580      endp
.text:00385586
.text:00385586 ; ---------------------------------------------------------------------------
.text:00385587                 align 10h
.text:00385590
.text:00385590 ; =============== S U B R O U T I N E =======================================
.text:00385590
.text:00385590 ; Attributes: bp-based frame
.text:00385590
.text:00385590 sub_385590      proc near               ; CODE XREF: .text:003811C7↑j
.text:00385590                                         ; sub_381271↑j ...
.text:00385590                 push    ebp
.text:00385591                 mov     ebp, esp
.text:00385593                 mov     al, 1
.text:00385595                 pop     ebp
.text:00385596                 retn                    ; Return Near from Procedure
.text:00385596 sub_385590      endp
.text:00385596
.text:00385596 ; ---------------------------------------------------------------------------
.text:00385597                 align 10h
.text:003855A0
.text:003855A0 ; =============== S U B R O U T I N E =======================================
.text:003855A0
.text:003855A0 ; Attributes: bp-based frame
.text:003855A0
.text:003855A0 sub_3855A0      proc near               ; CODE XREF: .text:0038106E↑j
.text:003855A0                                         ; sub_381208↑j
.text:003855A0                 push    ebp
.text:003855A1                 mov     ebp, esp
.text:003855A3                 xor     eax, eax        ; Logical Exclusive OR
.text:003855A5                 pop     ebp
.text:003855A6                 retn                    ; Return Near from Procedure
.text:003855A6 sub_3855A0      endp
.text:003855A6
.text:003855A6 ; ---------------------------------------------------------------------------
.text:003855A7                 align 10h
.text:003855B0
.text:003855B0 ; =============== S U B R O U T I N E =======================================
.text:003855B0
.text:003855B0 ; Attributes: bp-based frame
.text:003855B0
.text:003855B0 sub_3855B0      proc near               ; CODE XREF: .text:00381258↑j
.text:003855B0                                         ; sub_3813BB↑j
.text:003855B0
.text:003855B0 var_54          = dword ptr -54h
.text:003855B0 var_50          = dword ptr -50h
.text:003855B0 var_4C          = dword ptr -4Ch
.text:003855B0 var_48          = dword ptr -48h
.text:003855B0 var_44          = dword ptr -44h
.text:003855B0 var_40          = dword ptr -40h
.text:003855B0 var_3C          = dword ptr -3Ch
.text:003855B0 var_38          = dword ptr -38h
.text:003855B0 var_34          = dword ptr -34h
.text:003855B0 var_30          = dword ptr -30h
.text:003855B0 var_2C          = dword ptr -2Ch
.text:003855B0 var_28          = dword ptr -28h
.text:003855B0 var_24          = dword ptr -24h
.text:003855B0 var_20          = dword ptr -20h
.text:003855B0 var_1C          = dword ptr -1Ch
.text:003855B0 var_18          = dword ptr -18h
.text:003855B0 var_14          = dword ptr -14h
.text:003855B0 var_10          = dword ptr -10h
.text:003855B0 var_C           = dword ptr -0Ch
.text:003855B0 var_8           = dword ptr -8
.text:003855B0 var_4           = dword ptr -4
.text:003855B0 arg_0           = dword ptr  8
.text:003855B0
.text:003855B0                 push    ebp
.text:003855B1                 mov     ebp, esp
.text:003855B3                 sub     esp, 54h        ; Integer Subtraction
.text:003855B6                 cmp     dword_38A6A0, 1 ; Compare Two Operands
.text:003855BD                 jge     short loc_3855C7 ; Jump if Greater or Equal (SF=OF)
.text:003855BF                 mov     eax, [ebp+arg_0]
.text:003855C2                 jmp     loc_3856E0      ; Jump
.text:003855C7 ; ---------------------------------------------------------------------------
.text:003855C7
.text:003855C7 loc_3855C7:                             ; CODE XREF: sub_3855B0+D↑j
.text:003855C7                 cmp     [ebp+arg_0], 0C00002B4h ; Compare Two Operands
.text:003855CE                 jz      short loc_3855E1 ; Jump if Zero (ZF=1)
.text:003855D0                 cmp     [ebp+arg_0], 0C00002B5h ; Compare Two Operands
.text:003855D7                 jz      short loc_3855E1 ; Jump if Zero (ZF=1)
.text:003855D9                 mov     eax, [ebp+arg_0]
.text:003855DC                 jmp     loc_3856E0      ; Jump
.text:003855E1 ; ---------------------------------------------------------------------------
.text:003855E1
.text:003855E1 loc_3855E1:                             ; CODE XREF: sub_3855B0+1E↑j
.text:003855E1                                         ; sub_3855B0+27↑j
.text:003855E1                 mov     [ebp+var_C], 1
.text:003855E8                 mov     [ebp+var_10], 2
.text:003855EF                 mov     [ebp+var_14], 4
.text:003855F6                 mov     [ebp+var_18], 8
.text:003855FD                 mov     [ebp+var_1C], 10h
.text:00385604                 mov     [ebp+var_20], 20h ; ' '
.text:0038560B                 mov     [ebp+var_24], 3Fh ; '?'
.text:00385612                 mov     [ebp+var_28], 80h
.text:00385619                 mov     [ebp+var_2C], 100h
.text:00385620                 mov     [ebp+var_30], 200h
.text:00385627                 mov     [ebp+var_34], 400h
.text:0038562E                 mov     [ebp+var_38], 800h
.text:00385635                 mov     [ebp+var_3C], 1000h
.text:0038563C                 mov     [ebp+var_40], 81h
.text:00385643                 mov     [ebp+var_44], 102h
.text:0038564A                 mov     [ebp+var_48], 204h
.text:00385651                 mov     [ebp+var_4C], 408h
.text:00385658                 mov     [ebp+var_50], 810h
.text:0038565F                 mov     [ebp+var_54], 1020h
.text:00385666                 stmxcsr [ebp+var_8]     ; Store Streaming SIMD Extensions Technology Control/Status Register
.text:0038566A                 mov     eax, [ebp+var_8]
.text:0038566D                 xor     eax, 3Fh        ; Logical Exclusive OR
.text:00385670                 mov     [ebp+var_4], eax
.text:00385673                 mov     ecx, [ebp+var_4]
.text:00385676                 and     ecx, 81h        ; Logical AND
.text:0038567C                 jnz     short loc_385685 ; Jump if Not Zero (ZF=0)
.text:0038567E                 mov     eax, 0C0000090h
.text:00385683                 jmp     short loc_3856E0 ; Jump
.text:00385685 ; ---------------------------------------------------------------------------
.text:00385685
.text:00385685 loc_385685:                             ; CODE XREF: sub_3855B0+CC↑j
.text:00385685                 mov     edx, [ebp+var_4]
.text:00385688                 and     edx, 204h       ; Logical AND
.text:0038568E                 jnz     short loc_385697 ; Jump if Not Zero (ZF=0)
.text:00385690                 mov     eax, 0C000008Eh
.text:00385695                 jmp     short loc_3856E0 ; Jump
.text:00385697 ; ---------------------------------------------------------------------------
.text:00385697
.text:00385697 loc_385697:                             ; CODE XREF: sub_3855B0+DE↑j
.text:00385697                 mov     eax, [ebp+var_4]
.text:0038569A                 and     eax, 102h       ; Logical AND
.text:0038569F                 jnz     short loc_3856A8 ; Jump if Not Zero (ZF=0)
.text:003856A1                 mov     eax, 0C0000090h
.text:003856A6                 jmp     short loc_3856E0 ; Jump
.text:003856A8 ; ---------------------------------------------------------------------------
.text:003856A8
.text:003856A8 loc_3856A8:                             ; CODE XREF: sub_3855B0+EF↑j
.text:003856A8                 mov     ecx, [ebp+var_4]
.text:003856AB                 and     ecx, 408h       ; Logical AND
.text:003856B1                 jnz     short loc_3856BA ; Jump if Not Zero (ZF=0)
.text:003856B3                 mov     eax, 0C0000091h
.text:003856B8                 jmp     short loc_3856E0 ; Jump
.text:003856BA ; ---------------------------------------------------------------------------
.text:003856BA
.text:003856BA loc_3856BA:                             ; CODE XREF: sub_3855B0+101↑j
.text:003856BA                 mov     edx, [ebp+var_4]
.text:003856BD                 and     edx, 810h       ; Logical AND
.text:003856C3                 jnz     short loc_3856CC ; Jump if Not Zero (ZF=0)
.text:003856C5                 mov     eax, 0C0000093h
.text:003856CA                 jmp     short loc_3856E0 ; Jump
.text:003856CC ; ---------------------------------------------------------------------------
.text:003856CC
.text:003856CC loc_3856CC:                             ; CODE XREF: sub_3855B0+113↑j
.text:003856CC                 mov     eax, [ebp+var_4]
.text:003856CF                 and     eax, 1020h      ; Logical AND
.text:003856D4                 jnz     short loc_3856DD ; Jump if Not Zero (ZF=0)
.text:003856D6                 mov     eax, 0C000008Fh
.text:003856DB                 jmp     short loc_3856E0 ; Jump
.text:003856DD ; ---------------------------------------------------------------------------
.text:003856DD
.text:003856DD loc_3856DD:                             ; CODE XREF: sub_3855B0+124↑j
.text:003856DD                 mov     eax, [ebp+arg_0]
.text:003856E0
.text:003856E0 loc_3856E0:                             ; CODE XREF: sub_3855B0+12↑j
.text:003856E0                                         ; sub_3855B0+2C↑j ...
.text:003856E0                 mov     esp, ebp
.text:003856E2                 pop     ebp
.text:003856E3                 retn                    ; Return Near from Procedure
.text:003856E3 sub_3855B0      endp
.text:003856E3
.text:003856E3 ; ---------------------------------------------------------------------------
.text:003856E4                 db 1408h dup(0CCh)
.text:00386AEC                 align 200h
.text:00386C00                 dd 100h dup(?)
.text:00386C00 _text           ends
.text:00386C00
.rdata:00387000 ; Section 3. (virtual address 00017000)
.rdata:00387000 ; Virtual size                  : 00002529 (   9513.)
.rdata:00387000 ; Section size in file          : 00002600 (   9728.)
.rdata:00387000 ; Offset to raw data for section: 00006000
.rdata:00387000 ; Flags 40000040: Data Readable
.rdata:00387000 ; Alignment     : default
.rdata:00387000 ; ===========================================================================
.rdata:00387000
.rdata:00387000 ; Segment type: Pure data
.rdata:00387000 ; Segment permissions: Read
.rdata:00387000 _rdata          segment para public 'DATA' use32
.rdata:00387000                 assume cs:_rdata
.rdata:00387000                 ;org 387000h
.rdata:00387000 ; const _PVFV dword_387000
.rdata:00387000 dword_387000    dd 0                    ; DATA XREF: sub_382240+B4↑o
.rdata:00387004                 db    0
.rdata:00387005                 db    0
.rdata:00387006                 db    0
.rdata:00387007                 db    0
.rdata:00387008                 db    0
.rdata:00387009                 db    0
.rdata:0038700A                 db    0
.rdata:0038700B                 db    0
.rdata:0038700C                 db    0
.rdata:0038700D                 db    0
.rdata:0038700E                 db    0
.rdata:0038700F                 db    0
.rdata:00387010                 db    0
.rdata:00387011                 db    0
.rdata:00387012                 db    0
.rdata:00387013                 db    0
.rdata:00387014                 db    0
.rdata:00387015                 db    0
.rdata:00387016                 db    0
.rdata:00387017                 db    0
.rdata:00387018                 db    0
.rdata:00387019                 db    0
.rdata:0038701A                 db    0
.rdata:0038701B                 db    0
.rdata:0038701C                 db    0
.rdata:0038701D                 db    0
.rdata:0038701E                 db    0
.rdata:0038701F                 db    0
.rdata:00387020                 db    0
.rdata:00387021                 db    0
.rdata:00387022                 db    0
.rdata:00387023                 db    0
.rdata:00387024                 db    0
.rdata:00387025                 db    0
.rdata:00387026                 db    0
.rdata:00387027                 db    0
.rdata:00387028                 db    0
.rdata:00387029                 db    0
.rdata:0038702A                 db    0
.rdata:0038702B                 db    0
.rdata:0038702C                 db    0
.rdata:0038702D                 db    0
.rdata:0038702E                 db    0
.rdata:0038702F                 db    0
.rdata:00387030                 db    0
.rdata:00387031                 db    0
.rdata:00387032                 db    0
.rdata:00387033                 db    0
.rdata:00387034                 db    0
.rdata:00387035                 db    0
.rdata:00387036                 db    0
.rdata:00387037                 db    0
.rdata:00387038                 db    0
.rdata:00387039                 db    0
.rdata:0038703A                 db    0
.rdata:0038703B                 db    0
.rdata:0038703C                 db    0
.rdata:0038703D                 db    0
.rdata:0038703E                 db    0
.rdata:0038703F                 db    0
.rdata:00387040                 db    0
.rdata:00387041                 db    0
.rdata:00387042                 db    0
.rdata:00387043                 db    0
.rdata:00387044                 db    0
.rdata:00387045                 db    0
.rdata:00387046                 db    0
.rdata:00387047                 db    0
.rdata:00387048                 db    0
.rdata:00387049                 db    0
.rdata:0038704A                 db    0
.rdata:0038704B                 db    0
.rdata:0038704C                 db    0
.rdata:0038704D                 db    0
.rdata:0038704E                 db    0
.rdata:0038704F                 db    0
.rdata:00387050                 db    0
.rdata:00387051                 db    0
.rdata:00387052                 db    0
.rdata:00387053                 db    0
.rdata:00387054                 db    0
.rdata:00387055                 db    0
.rdata:00387056                 db    0
.rdata:00387057                 db    0
.rdata:00387058                 db    0
.rdata:00387059                 db    0
.rdata:0038705A                 db    0
.rdata:0038705B                 db    0
.rdata:0038705C                 db    0
.rdata:0038705D                 db    0
.rdata:0038705E                 db    0
.rdata:0038705F                 db    0
.rdata:00387060                 db    0
.rdata:00387061                 db    0
.rdata:00387062                 db    0
.rdata:00387063                 db    0
.rdata:00387064                 db    0
.rdata:00387065                 db    0
.rdata:00387066                 db    0
.rdata:00387067                 db    0
.rdata:00387068                 db    0
.rdata:00387069                 db    0
.rdata:0038706A                 db    0
.rdata:0038706B                 db    0
.rdata:0038706C                 db    0
.rdata:0038706D                 db    0
.rdata:0038706E                 db    0
.rdata:0038706F                 db    0
.rdata:00387070                 db    0
.rdata:00387071                 db    0
.rdata:00387072                 db    0
.rdata:00387073                 db    0
.rdata:00387074                 db    0
.rdata:00387075                 db    0
.rdata:00387076                 db    0
.rdata:00387077                 db    0
.rdata:00387078                 db    0
.rdata:00387079                 db    0
.rdata:0038707A                 db    0
.rdata:0038707B                 db    0
.rdata:0038707C                 db    0
.rdata:0038707D                 db    0
.rdata:0038707E                 db    0
.rdata:0038707F                 db    0
.rdata:00387080                 db    0
.rdata:00387081                 db    0
.rdata:00387082                 db    0
.rdata:00387083                 db    0
.rdata:00387084                 db    0
.rdata:00387085                 db    0
.rdata:00387086                 db    0
.rdata:00387087                 db    0
.rdata:00387088                 db    0
.rdata:00387089                 db    0
.rdata:0038708A                 db    0
.rdata:0038708B                 db    0
.rdata:0038708C                 db    0
.rdata:0038708D                 db    0
.rdata:0038708E                 db    0
.rdata:0038708F                 db    0
.rdata:00387090                 db    0
.rdata:00387091                 db    0
.rdata:00387092                 db    0
.rdata:00387093                 db    0
.rdata:00387094                 db    0
.rdata:00387095                 db    0
.rdata:00387096                 db    0
.rdata:00387097                 db    0
.rdata:00387098                 db    0
.rdata:00387099                 db    0
.rdata:0038709A                 db    0
.rdata:0038709B                 db    0
.rdata:0038709C                 db    0
.rdata:0038709D                 db    0
.rdata:0038709E                 db    0
.rdata:0038709F                 db    0
.rdata:003870A0                 db    0
.rdata:003870A1                 db    0
.rdata:003870A2                 db    0
.rdata:003870A3                 db    0
.rdata:003870A4                 db    0
.rdata:003870A5                 db    0
.rdata:003870A6                 db    0
.rdata:003870A7                 db    0
.rdata:003870A8                 db    0
.rdata:003870A9                 db    0
.rdata:003870AA                 db    0
.rdata:003870AB                 db    0
.rdata:003870AC                 db    0
.rdata:003870AD                 db    0
.rdata:003870AE                 db    0
.rdata:003870AF                 db    0
.rdata:003870B0                 db    0
.rdata:003870B1                 db    0
.rdata:003870B2                 db    0
.rdata:003870B3                 db    0
.rdata:003870B4                 db    0
.rdata:003870B5                 db    0
.rdata:003870B6                 db    0
.rdata:003870B7                 db    0
.rdata:003870B8                 db    0
.rdata:003870B9                 db    0
.rdata:003870BA                 db    0
.rdata:003870BB                 db    0
.rdata:003870BC                 db    0
.rdata:003870BD                 db    0
.rdata:003870BE                 db    0
.rdata:003870BF                 db    0
.rdata:003870C0                 db    0
.rdata:003870C1                 db    0
.rdata:003870C2                 db    0
.rdata:003870C3                 db    0
.rdata:003870C4                 db    0
.rdata:003870C5                 db    0
.rdata:003870C6                 db    0
.rdata:003870C7                 db    0
.rdata:003870C8                 db    0
.rdata:003870C9                 db    0
.rdata:003870CA                 db    0
.rdata:003870CB                 db    0
.rdata:003870CC                 db    0
.rdata:003870CD                 db    0
.rdata:003870CE                 db    0
.rdata:003870CF                 db    0
.rdata:003870D0                 db    0
.rdata:003870D1                 db    0
.rdata:003870D2                 db    0
.rdata:003870D3                 db    0
.rdata:003870D4                 db    0
.rdata:003870D5                 db    0
.rdata:003870D6                 db    0
.rdata:003870D7                 db    0
.rdata:003870D8                 db    0
.rdata:003870D9                 db    0
.rdata:003870DA                 db    0
.rdata:003870DB                 db    0
.rdata:003870DC                 db    0
.rdata:003870DD                 db    0
.rdata:003870DE                 db    0
.rdata:003870DF                 db    0
.rdata:003870E0                 db    0
.rdata:003870E1                 db    0
.rdata:003870E2                 db    0
.rdata:003870E3                 db    0
.rdata:003870E4                 db    0
.rdata:003870E5                 db    0
.rdata:003870E6                 db    0
.rdata:003870E7                 db    0
.rdata:003870E8                 db    0
.rdata:003870E9                 db    0
.rdata:003870EA                 db    0
.rdata:003870EB                 db    0
.rdata:003870EC                 db    0
.rdata:003870ED                 db    0
.rdata:003870EE                 db    0
.rdata:003870EF                 db    0
.rdata:003870F0                 db    0
.rdata:003870F1                 db    0
.rdata:003870F2                 db    0
.rdata:003870F3                 db    0
.rdata:003870F4                 db    0
.rdata:003870F5                 db    0
.rdata:003870F6                 db    0
.rdata:003870F7                 db    0
.rdata:003870F8                 db    0
.rdata:003870F9                 db    0
.rdata:003870FA                 db    0
.rdata:003870FB                 db    0
.rdata:003870FC                 db    0
.rdata:003870FD                 db    0
.rdata:003870FE                 db    0
.rdata:003870FF                 db    0
.rdata:00387100                 db    0
.rdata:00387101                 db    0
.rdata:00387102                 db    0
.rdata:00387103                 db    0
.rdata:00387104                 dd offset sub_382200
.rdata:00387108                 db    0
.rdata:00387109                 db    0
.rdata:0038710A                 db    0
.rdata:0038710B                 db    0
.rdata:0038710C                 db    0
.rdata:0038710D                 db    0
.rdata:0038710E                 db    0
.rdata:0038710F                 db    0
.rdata:00387110                 db    0
.rdata:00387111                 db    0
.rdata:00387112                 db    0
.rdata:00387113                 db    0
.rdata:00387114                 db    0
.rdata:00387115                 db    0
.rdata:00387116                 db    0
.rdata:00387117                 db    0
.rdata:00387118                 db    0
.rdata:00387119                 db    0
.rdata:0038711A                 db    0
.rdata:0038711B                 db    0
.rdata:0038711C                 db    0
.rdata:0038711D                 db    0
.rdata:0038711E                 db    0
.rdata:0038711F                 db    0
.rdata:00387120                 db    0
.rdata:00387121                 db    0
.rdata:00387122                 db    0
.rdata:00387123                 db    0
.rdata:00387124                 db    0
.rdata:00387125                 db    0
.rdata:00387126                 db    0
.rdata:00387127                 db    0
.rdata:00387128                 db    0
.rdata:00387129                 db    0
.rdata:0038712A                 db    0
.rdata:0038712B                 db    0
.rdata:0038712C                 db    0
.rdata:0038712D                 db    0
.rdata:0038712E                 db    0
.rdata:0038712F                 db    0
.rdata:00387130                 db    0
.rdata:00387131                 db    0
.rdata:00387132                 db    0
.rdata:00387133                 db    0
.rdata:00387134                 db    0
.rdata:00387135                 db    0
.rdata:00387136                 db    0
.rdata:00387137                 db    0
.rdata:00387138                 db    0
.rdata:00387139                 db    0
.rdata:0038713A                 db    0
.rdata:0038713B                 db    0
.rdata:0038713C                 db    0
.rdata:0038713D                 db    0
.rdata:0038713E                 db    0
.rdata:0038713F                 db    0
.rdata:00387140                 db    0
.rdata:00387141                 db    0
.rdata:00387142                 db    0
.rdata:00387143                 db    0
.rdata:00387144                 db    0
.rdata:00387145                 db    0
.rdata:00387146                 db    0
.rdata:00387147                 db    0
.rdata:00387148                 db    0
.rdata:00387149                 db    0
.rdata:0038714A                 db    0
.rdata:0038714B                 db    0
.rdata:0038714C                 db    0
.rdata:0038714D                 db    0
.rdata:0038714E                 db    0
.rdata:0038714F                 db    0
.rdata:00387150                 db    0
.rdata:00387151                 db    0
.rdata:00387152                 db    0
.rdata:00387153                 db    0
.rdata:00387154                 db    0
.rdata:00387155                 db    0
.rdata:00387156                 db    0
.rdata:00387157                 db    0
.rdata:00387158                 db    0
.rdata:00387159                 db    0
.rdata:0038715A                 db    0
.rdata:0038715B                 db    0
.rdata:0038715C                 db    0
.rdata:0038715D                 db    0
.rdata:0038715E                 db    0
.rdata:0038715F                 db    0
.rdata:00387160                 db    0
.rdata:00387161                 db    0
.rdata:00387162                 db    0
.rdata:00387163                 db    0
.rdata:00387164                 db    0
.rdata:00387165                 db    0
.rdata:00387166                 db    0
.rdata:00387167                 db    0
.rdata:00387168                 db    0
.rdata:00387169                 db    0
.rdata:0038716A                 db    0
.rdata:0038716B                 db    0
.rdata:0038716C                 db    0
.rdata:0038716D                 db    0
.rdata:0038716E                 db    0
.rdata:0038716F                 db    0
.rdata:00387170                 db    0
.rdata:00387171                 db    0
.rdata:00387172                 db    0
.rdata:00387173                 db    0
.rdata:00387174                 db    0
.rdata:00387175                 db    0
.rdata:00387176                 db    0
.rdata:00387177                 db    0
.rdata:00387178                 db    0
.rdata:00387179                 db    0
.rdata:0038717A                 db    0
.rdata:0038717B                 db    0
.rdata:0038717C                 db    0
.rdata:0038717D                 db    0
.rdata:0038717E                 db    0
.rdata:0038717F                 db    0
.rdata:00387180                 db    0
.rdata:00387181                 db    0
.rdata:00387182                 db    0
.rdata:00387183                 db    0
.rdata:00387184                 db    0
.rdata:00387185                 db    0
.rdata:00387186                 db    0
.rdata:00387187                 db    0
.rdata:00387188                 db    0
.rdata:00387189                 db    0
.rdata:0038718A                 db    0
.rdata:0038718B                 db    0
.rdata:0038718C                 db    0
.rdata:0038718D                 db    0
.rdata:0038718E                 db    0
.rdata:0038718F                 db    0
.rdata:00387190                 db    0
.rdata:00387191                 db    0
.rdata:00387192                 db    0
.rdata:00387193                 db    0
.rdata:00387194                 db    0
.rdata:00387195                 db    0
.rdata:00387196                 db    0
.rdata:00387197                 db    0
.rdata:00387198                 db    0
.rdata:00387199                 db    0
.rdata:0038719A                 db    0
.rdata:0038719B                 db    0
.rdata:0038719C                 db    0
.rdata:0038719D                 db    0
.rdata:0038719E                 db    0
.rdata:0038719F                 db    0
.rdata:003871A0                 db    0
.rdata:003871A1                 db    0
.rdata:003871A2                 db    0
.rdata:003871A3                 db    0
.rdata:003871A4                 db    0
.rdata:003871A5                 db    0
.rdata:003871A6                 db    0
.rdata:003871A7                 db    0
.rdata:003871A8                 db    0
.rdata:003871A9                 db    0
.rdata:003871AA                 db    0
.rdata:003871AB                 db    0
.rdata:003871AC                 db    0
.rdata:003871AD                 db    0
.rdata:003871AE                 db    0
.rdata:003871AF                 db    0
.rdata:003871B0                 db    0
.rdata:003871B1                 db    0
.rdata:003871B2                 db    0
.rdata:003871B3                 db    0
.rdata:003871B4                 db    0
.rdata:003871B5                 db    0
.rdata:003871B6                 db    0
.rdata:003871B7                 db    0
.rdata:003871B8                 db    0
.rdata:003871B9                 db    0
.rdata:003871BA                 db    0
.rdata:003871BB                 db    0
.rdata:003871BC                 db    0
.rdata:003871BD                 db    0
.rdata:003871BE                 db    0
.rdata:003871BF                 db    0
.rdata:003871C0                 db    0
.rdata:003871C1                 db    0
.rdata:003871C2                 db    0
.rdata:003871C3                 db    0
.rdata:003871C4                 db    0
.rdata:003871C5                 db    0
.rdata:003871C6                 db    0
.rdata:003871C7                 db    0
.rdata:003871C8                 db    0
.rdata:003871C9                 db    0
.rdata:003871CA                 db    0
.rdata:003871CB                 db    0
.rdata:003871CC                 db    0
.rdata:003871CD                 db    0
.rdata:003871CE                 db    0
.rdata:003871CF                 db    0
.rdata:003871D0                 db    0
.rdata:003871D1                 db    0
.rdata:003871D2                 db    0
.rdata:003871D3                 db    0
.rdata:003871D4                 db    0
.rdata:003871D5                 db    0
.rdata:003871D6                 db    0
.rdata:003871D7                 db    0
.rdata:003871D8                 db    0
.rdata:003871D9                 db    0
.rdata:003871DA                 db    0
.rdata:003871DB                 db    0
.rdata:003871DC                 db    0
.rdata:003871DD                 db    0
.rdata:003871DE                 db    0
.rdata:003871DF                 db    0
.rdata:003871E0                 db    0
.rdata:003871E1                 db    0
.rdata:003871E2                 db    0
.rdata:003871E3                 db    0
.rdata:003871E4                 db    0
.rdata:003871E5                 db    0
.rdata:003871E6                 db    0
.rdata:003871E7                 db    0
.rdata:003871E8                 db    0
.rdata:003871E9                 db    0
.rdata:003871EA                 db    0
.rdata:003871EB                 db    0
.rdata:003871EC                 db    0
.rdata:003871ED                 db    0
.rdata:003871EE                 db    0
.rdata:003871EF                 db    0
.rdata:003871F0                 db    0
.rdata:003871F1                 db    0
.rdata:003871F2                 db    0
.rdata:003871F3                 db    0
.rdata:003871F4                 db    0
.rdata:003871F5                 db    0
.rdata:003871F6                 db    0
.rdata:003871F7                 db    0
.rdata:003871F8                 db    0
.rdata:003871F9                 db    0
.rdata:003871FA                 db    0
.rdata:003871FB                 db    0
.rdata:003871FC                 db    0
.rdata:003871FD                 db    0
.rdata:003871FE                 db    0
.rdata:003871FF                 db    0
.rdata:00387200                 db    0
.rdata:00387201                 db    0
.rdata:00387202                 db    0
.rdata:00387203                 db    0
.rdata:00387204                 db    0
.rdata:00387205                 db    0
.rdata:00387206                 db    0
.rdata:00387207                 db    0
.rdata:00387208 ; const _PVFV dword_387208
.rdata:00387208 dword_387208    dd 0                    ; DATA XREF: sub_382240:loc_3822EF↑o
.rdata:0038720C                 db    0
.rdata:0038720D                 db    0
.rdata:0038720E                 db    0
.rdata:0038720F                 db    0
.rdata:00387210                 db    0
.rdata:00387211                 db    0
.rdata:00387212                 db    0
.rdata:00387213                 db    0
.rdata:00387214                 db    0
.rdata:00387215                 db    0
.rdata:00387216                 db    0
.rdata:00387217                 db    0
.rdata:00387218                 db    0
.rdata:00387219                 db    0
.rdata:0038721A                 db    0
.rdata:0038721B                 db    0
.rdata:0038721C                 db    0
.rdata:0038721D                 db    0
.rdata:0038721E                 db    0
.rdata:0038721F                 db    0
.rdata:00387220                 db    0
.rdata:00387221                 db    0
.rdata:00387222                 db    0
.rdata:00387223                 db    0
.rdata:00387224                 db    0
.rdata:00387225                 db    0
.rdata:00387226                 db    0
.rdata:00387227                 db    0
.rdata:00387228                 db    0
.rdata:00387229                 db    0
.rdata:0038722A                 db    0
.rdata:0038722B                 db    0
.rdata:0038722C                 db    0
.rdata:0038722D                 db    0
.rdata:0038722E                 db    0
.rdata:0038722F                 db    0
.rdata:00387230                 db    0
.rdata:00387231                 db    0
.rdata:00387232                 db    0
.rdata:00387233                 db    0
.rdata:00387234                 db    0
.rdata:00387235                 db    0
.rdata:00387236                 db    0
.rdata:00387237                 db    0
.rdata:00387238                 db    0
.rdata:00387239                 db    0
.rdata:0038723A                 db    0
.rdata:0038723B                 db    0
.rdata:0038723C                 db    0
.rdata:0038723D                 db    0
.rdata:0038723E                 db    0
.rdata:0038723F                 db    0
.rdata:00387240                 db    0
.rdata:00387241                 db    0
.rdata:00387242                 db    0
.rdata:00387243                 db    0
.rdata:00387244                 db    0
.rdata:00387245                 db    0
.rdata:00387246                 db    0
.rdata:00387247                 db    0
.rdata:00387248                 db    0
.rdata:00387249                 db    0
.rdata:0038724A                 db    0
.rdata:0038724B                 db    0
.rdata:0038724C                 db    0
.rdata:0038724D                 db    0
.rdata:0038724E                 db    0
.rdata:0038724F                 db    0
.rdata:00387250                 db    0
.rdata:00387251                 db    0
.rdata:00387252                 db    0
.rdata:00387253                 db    0
.rdata:00387254                 db    0
.rdata:00387255                 db    0
.rdata:00387256                 db    0
.rdata:00387257                 db    0
.rdata:00387258                 db    0
.rdata:00387259                 db    0
.rdata:0038725A                 db    0
.rdata:0038725B                 db    0
.rdata:0038725C                 db    0
.rdata:0038725D                 db    0
.rdata:0038725E                 db    0
.rdata:0038725F                 db    0
.rdata:00387260                 db    0
.rdata:00387261                 db    0
.rdata:00387262                 db    0
.rdata:00387263                 db    0
.rdata:00387264                 db    0
.rdata:00387265                 db    0
.rdata:00387266                 db    0
.rdata:00387267                 db    0
.rdata:00387268                 db    0
.rdata:00387269                 db    0
.rdata:0038726A                 db    0
.rdata:0038726B                 db    0
.rdata:0038726C                 db    0
.rdata:0038726D                 db    0
.rdata:0038726E                 db    0
.rdata:0038726F                 db    0
.rdata:00387270                 db    0
.rdata:00387271                 db    0
.rdata:00387272                 db    0
.rdata:00387273                 db    0
.rdata:00387274                 db    0
.rdata:00387275                 db    0
.rdata:00387276                 db    0
.rdata:00387277                 db    0
.rdata:00387278                 db    0
.rdata:00387279                 db    0
.rdata:0038727A                 db    0
.rdata:0038727B                 db    0
.rdata:0038727C                 db    0
.rdata:0038727D                 db    0
.rdata:0038727E                 db    0
.rdata:0038727F                 db    0
.rdata:00387280                 db    0
.rdata:00387281                 db    0
.rdata:00387282                 db    0
.rdata:00387283                 db    0
.rdata:00387284                 db    0
.rdata:00387285                 db    0
.rdata:00387286                 db    0
.rdata:00387287                 db    0
.rdata:00387288                 db    0
.rdata:00387289                 db    0
.rdata:0038728A                 db    0
.rdata:0038728B                 db    0
.rdata:0038728C                 db    0
.rdata:0038728D                 db    0
.rdata:0038728E                 db    0
.rdata:0038728F                 db    0
.rdata:00387290                 db    0
.rdata:00387291                 db    0
.rdata:00387292                 db    0
.rdata:00387293                 db    0
.rdata:00387294                 db    0
.rdata:00387295                 db    0
.rdata:00387296                 db    0
.rdata:00387297                 db    0
.rdata:00387298                 db    0
.rdata:00387299                 db    0
.rdata:0038729A                 db    0
.rdata:0038729B                 db    0
.rdata:0038729C                 db    0
.rdata:0038729D                 db    0
.rdata:0038729E                 db    0
.rdata:0038729F                 db    0
.rdata:003872A0                 db    0
.rdata:003872A1                 db    0
.rdata:003872A2                 db    0
.rdata:003872A3                 db    0
.rdata:003872A4                 db    0
.rdata:003872A5                 db    0
.rdata:003872A6                 db    0
.rdata:003872A7                 db    0
.rdata:003872A8                 db    0
.rdata:003872A9                 db    0
.rdata:003872AA                 db    0
.rdata:003872AB                 db    0
.rdata:003872AC                 db    0
.rdata:003872AD                 db    0
.rdata:003872AE                 db    0
.rdata:003872AF                 db    0
.rdata:003872B0                 db    0
.rdata:003872B1                 db    0
.rdata:003872B2                 db    0
.rdata:003872B3                 db    0
.rdata:003872B4                 db    0
.rdata:003872B5                 db    0
.rdata:003872B6                 db    0
.rdata:003872B7                 db    0
.rdata:003872B8                 db    0
.rdata:003872B9                 db    0
.rdata:003872BA                 db    0
.rdata:003872BB                 db    0
.rdata:003872BC                 db    0
.rdata:003872BD                 db    0
.rdata:003872BE                 db    0
.rdata:003872BF                 db    0
.rdata:003872C0                 db    0
.rdata:003872C1                 db    0
.rdata:003872C2                 db    0
.rdata:003872C3                 db    0
.rdata:003872C4                 db    0
.rdata:003872C5                 db    0
.rdata:003872C6                 db    0
.rdata:003872C7                 db    0
.rdata:003872C8                 db    0
.rdata:003872C9                 db    0
.rdata:003872CA                 db    0
.rdata:003872CB                 db    0
.rdata:003872CC                 db    0
.rdata:003872CD                 db    0
.rdata:003872CE                 db    0
.rdata:003872CF                 db    0
.rdata:003872D0                 db    0
.rdata:003872D1                 db    0
.rdata:003872D2                 db    0
.rdata:003872D3                 db    0
.rdata:003872D4                 db    0
.rdata:003872D5                 db    0
.rdata:003872D6                 db    0
.rdata:003872D7                 db    0
.rdata:003872D8                 db    0
.rdata:003872D9                 db    0
.rdata:003872DA                 db    0
.rdata:003872DB                 db    0
.rdata:003872DC                 db    0
.rdata:003872DD                 db    0
.rdata:003872DE                 db    0
.rdata:003872DF                 db    0
.rdata:003872E0                 db    0
.rdata:003872E1                 db    0
.rdata:003872E2                 db    0
.rdata:003872E3                 db    0
.rdata:003872E4                 db    0
.rdata:003872E5                 db    0
.rdata:003872E6                 db    0
.rdata:003872E7                 db    0
.rdata:003872E8                 db    0
.rdata:003872E9                 db    0
.rdata:003872EA                 db    0
.rdata:003872EB                 db    0
.rdata:003872EC                 db    0
.rdata:003872ED                 db    0
.rdata:003872EE                 db    0
.rdata:003872EF                 db    0
.rdata:003872F0                 db    0
.rdata:003872F1                 db    0
.rdata:003872F2                 db    0
.rdata:003872F3                 db    0
.rdata:003872F4                 db    0
.rdata:003872F5                 db    0
.rdata:003872F6                 db    0
.rdata:003872F7                 db    0
.rdata:003872F8                 db    0
.rdata:003872F9                 db    0
.rdata:003872FA                 db    0
.rdata:003872FB                 db    0
.rdata:003872FC                 db    0
.rdata:003872FD                 db    0
.rdata:003872FE                 db    0
.rdata:003872FF                 db    0
.rdata:00387300                 db    0
.rdata:00387301                 db    0
.rdata:00387302                 db    0
.rdata:00387303                 db    0
.rdata:00387304                 db    0
.rdata:00387305                 db    0
.rdata:00387306                 db    0
.rdata:00387307                 db    0
.rdata:00387308                 db    0
.rdata:00387309                 db    0
.rdata:0038730A                 db    0
.rdata:0038730B                 db    0
.rdata:0038730C ; const _PIFV First
.rdata:0038730C First           dd 0                    ; DATA XREF: sub_382240+88↑o
.rdata:00387310                 db    0
.rdata:00387311                 db    0
.rdata:00387312                 db    0
.rdata:00387313                 db    0
.rdata:00387314                 db    0
.rdata:00387315                 db    0
.rdata:00387316                 db    0
.rdata:00387317                 db    0
.rdata:00387318                 db    0
.rdata:00387319                 db    0
.rdata:0038731A                 db    0
.rdata:0038731B                 db    0
.rdata:0038731C                 db    0
.rdata:0038731D                 db    0
.rdata:0038731E                 db    0
.rdata:0038731F                 db    0
.rdata:00387320                 db    0
.rdata:00387321                 db    0
.rdata:00387322                 db    0
.rdata:00387323                 db    0
.rdata:00387324                 db    0
.rdata:00387325                 db    0
.rdata:00387326                 db    0
.rdata:00387327                 db    0
.rdata:00387328                 db    0
.rdata:00387329                 db    0
.rdata:0038732A                 db    0
.rdata:0038732B                 db    0
.rdata:0038732C                 db    0
.rdata:0038732D                 db    0
.rdata:0038732E                 db    0
.rdata:0038732F                 db    0
.rdata:00387330                 db    0
.rdata:00387331                 db    0
.rdata:00387332                 db    0
.rdata:00387333                 db    0
.rdata:00387334                 db    0
.rdata:00387335                 db    0
.rdata:00387336                 db    0
.rdata:00387337                 db    0
.rdata:00387338                 db    0
.rdata:00387339                 db    0
.rdata:0038733A                 db    0
.rdata:0038733B                 db    0
.rdata:0038733C                 db    0
.rdata:0038733D                 db    0
.rdata:0038733E                 db    0
.rdata:0038733F                 db    0
.rdata:00387340                 db    0
.rdata:00387341                 db    0
.rdata:00387342                 db    0
.rdata:00387343                 db    0
.rdata:00387344                 db    0
.rdata:00387345                 db    0
.rdata:00387346                 db    0
.rdata:00387347                 db    0
.rdata:00387348                 db    0
.rdata:00387349                 db    0
.rdata:0038734A                 db    0
.rdata:0038734B                 db    0
.rdata:0038734C                 db    0
.rdata:0038734D                 db    0
.rdata:0038734E                 db    0
.rdata:0038734F                 db    0
.rdata:00387350                 db    0
.rdata:00387351                 db    0
.rdata:00387352                 db    0
.rdata:00387353                 db    0
.rdata:00387354                 db    0
.rdata:00387355                 db    0
.rdata:00387356                 db    0
.rdata:00387357                 db    0
.rdata:00387358                 db    0
.rdata:00387359                 db    0
.rdata:0038735A                 db    0
.rdata:0038735B                 db    0
.rdata:0038735C                 db    0
.rdata:0038735D                 db    0
.rdata:0038735E                 db    0
.rdata:0038735F                 db    0
.rdata:00387360                 db    0
.rdata:00387361                 db    0
.rdata:00387362                 db    0
.rdata:00387363                 db    0
.rdata:00387364                 db    0
.rdata:00387365                 db    0
.rdata:00387366                 db    0
.rdata:00387367                 db    0
.rdata:00387368                 db    0
.rdata:00387369                 db    0
.rdata:0038736A                 db    0
.rdata:0038736B                 db    0
.rdata:0038736C                 db    0
.rdata:0038736D                 db    0
.rdata:0038736E                 db    0
.rdata:0038736F                 db    0
.rdata:00387370                 db    0
.rdata:00387371                 db    0
.rdata:00387372                 db    0
.rdata:00387373                 db    0
.rdata:00387374                 db    0
.rdata:00387375                 db    0
.rdata:00387376                 db    0
.rdata:00387377                 db    0
.rdata:00387378                 db    0
.rdata:00387379                 db    0
.rdata:0038737A                 db    0
.rdata:0038737B                 db    0
.rdata:0038737C                 db    0
.rdata:0038737D                 db    0
.rdata:0038737E                 db    0
.rdata:0038737F                 db    0
.rdata:00387380                 db    0
.rdata:00387381                 db    0
.rdata:00387382                 db    0
.rdata:00387383                 db    0
.rdata:00387384                 db    0
.rdata:00387385                 db    0
.rdata:00387386                 db    0
.rdata:00387387                 db    0
.rdata:00387388                 db    0
.rdata:00387389                 db    0
.rdata:0038738A                 db    0
.rdata:0038738B                 db    0
.rdata:0038738C                 db    0
.rdata:0038738D                 db    0
.rdata:0038738E                 db    0
.rdata:0038738F                 db    0
.rdata:00387390                 db    0
.rdata:00387391                 db    0
.rdata:00387392                 db    0
.rdata:00387393                 db    0
.rdata:00387394                 db    0
.rdata:00387395                 db    0
.rdata:00387396                 db    0
.rdata:00387397                 db    0
.rdata:00387398                 db    0
.rdata:00387399                 db    0
.rdata:0038739A                 db    0
.rdata:0038739B                 db    0
.rdata:0038739C                 db    0
.rdata:0038739D                 db    0
.rdata:0038739E                 db    0
.rdata:0038739F                 db    0
.rdata:003873A0                 db    0
.rdata:003873A1                 db    0
.rdata:003873A2                 db    0
.rdata:003873A3                 db    0
.rdata:003873A4                 db    0
.rdata:003873A5                 db    0
.rdata:003873A6                 db    0
.rdata:003873A7                 db    0
.rdata:003873A8                 db    0
.rdata:003873A9                 db    0
.rdata:003873AA                 db    0
.rdata:003873AB                 db    0
.rdata:003873AC                 db    0
.rdata:003873AD                 db    0
.rdata:003873AE                 db    0
.rdata:003873AF                 db    0
.rdata:003873B0                 db    0
.rdata:003873B1                 db    0
.rdata:003873B2                 db    0
.rdata:003873B3                 db    0
.rdata:003873B4                 db    0
.rdata:003873B5                 db    0
.rdata:003873B6                 db    0
.rdata:003873B7                 db    0
.rdata:003873B8                 db    0
.rdata:003873B9                 db    0
.rdata:003873BA                 db    0
.rdata:003873BB                 db    0
.rdata:003873BC                 db    0
.rdata:003873BD                 db    0
.rdata:003873BE                 db    0
.rdata:003873BF                 db    0
.rdata:003873C0                 db    0
.rdata:003873C1                 db    0
.rdata:003873C2                 db    0
.rdata:003873C3                 db    0
.rdata:003873C4                 db    0
.rdata:003873C5                 db    0
.rdata:003873C6                 db    0
.rdata:003873C7                 db    0
.rdata:003873C8                 db    0
.rdata:003873C9                 db    0
.rdata:003873CA                 db    0
.rdata:003873CB                 db    0
.rdata:003873CC                 db    0
.rdata:003873CD                 db    0
.rdata:003873CE                 db    0
.rdata:003873CF                 db    0
.rdata:003873D0                 db    0
.rdata:003873D1                 db    0
.rdata:003873D2                 db    0
.rdata:003873D3                 db    0
.rdata:003873D4                 db    0
.rdata:003873D5                 db    0
.rdata:003873D6                 db    0
.rdata:003873D7                 db    0
.rdata:003873D8                 db    0
.rdata:003873D9                 db    0
.rdata:003873DA                 db    0
.rdata:003873DB                 db    0
.rdata:003873DC                 db    0
.rdata:003873DD                 db    0
.rdata:003873DE                 db    0
.rdata:003873DF                 db    0
.rdata:003873E0                 db    0
.rdata:003873E1                 db    0
.rdata:003873E2                 db    0
.rdata:003873E3                 db    0
.rdata:003873E4                 db    0
.rdata:003873E5                 db    0
.rdata:003873E6                 db    0
.rdata:003873E7                 db    0
.rdata:003873E8                 db    0
.rdata:003873E9                 db    0
.rdata:003873EA                 db    0
.rdata:003873EB                 db    0
.rdata:003873EC                 db    0
.rdata:003873ED                 db    0
.rdata:003873EE                 db    0
.rdata:003873EF                 db    0
.rdata:003873F0                 db    0
.rdata:003873F1                 db    0
.rdata:003873F2                 db    0
.rdata:003873F3                 db    0
.rdata:003873F4                 db    0
.rdata:003873F5                 db    0
.rdata:003873F6                 db    0
.rdata:003873F7                 db    0
.rdata:003873F8                 db    0
.rdata:003873F9                 db    0
.rdata:003873FA                 db    0
.rdata:003873FB                 db    0
.rdata:003873FC                 db    0
.rdata:003873FD                 db    0
.rdata:003873FE                 db    0
.rdata:003873FF                 db    0
.rdata:00387400                 db    0
.rdata:00387401                 db    0
.rdata:00387402                 db    0
.rdata:00387403                 db    0
.rdata:00387404                 db    0
.rdata:00387405                 db    0
.rdata:00387406                 db    0
.rdata:00387407                 db    0
.rdata:00387408                 db    0
.rdata:00387409                 db    0
.rdata:0038740A                 db    0
.rdata:0038740B                 db    0
.rdata:0038740C                 db    0
.rdata:0038740D                 db    0
.rdata:0038740E                 db    0
.rdata:0038740F                 db    0
.rdata:00387410                 dd offset sub_382110
.rdata:00387414                 db    0
.rdata:00387415                 db    0
.rdata:00387416                 db    0
.rdata:00387417                 db    0
.rdata:00387418                 db    0
.rdata:00387419                 db    0
.rdata:0038741A                 db    0
.rdata:0038741B                 db    0
.rdata:0038741C                 db    0
.rdata:0038741D                 db    0
.rdata:0038741E                 db    0
.rdata:0038741F                 db    0
.rdata:00387420                 db    0
.rdata:00387421                 db    0
.rdata:00387422                 db    0
.rdata:00387423                 db    0
.rdata:00387424                 db    0
.rdata:00387425                 db    0
.rdata:00387426                 db    0
.rdata:00387427                 db    0
.rdata:00387428                 db    0
.rdata:00387429                 db    0
.rdata:0038742A                 db    0
.rdata:0038742B                 db    0
.rdata:0038742C                 db    0
.rdata:0038742D                 db    0
.rdata:0038742E                 db    0
.rdata:0038742F                 db    0
.rdata:00387430                 db    0
.rdata:00387431                 db    0
.rdata:00387432                 db    0
.rdata:00387433                 db    0
.rdata:00387434                 db    0
.rdata:00387435                 db    0
.rdata:00387436                 db    0
.rdata:00387437                 db    0
.rdata:00387438                 db    0
.rdata:00387439                 db    0
.rdata:0038743A                 db    0
.rdata:0038743B                 db    0
.rdata:0038743C                 db    0
.rdata:0038743D                 db    0
.rdata:0038743E                 db    0
.rdata:0038743F                 db    0
.rdata:00387440                 db    0
.rdata:00387441                 db    0
.rdata:00387442                 db    0
.rdata:00387443                 db    0
.rdata:00387444                 db    0
.rdata:00387445                 db    0
.rdata:00387446                 db    0
.rdata:00387447                 db    0
.rdata:00387448                 db    0
.rdata:00387449                 db    0
.rdata:0038744A                 db    0
.rdata:0038744B                 db    0
.rdata:0038744C                 db    0
.rdata:0038744D                 db    0
.rdata:0038744E                 db    0
.rdata:0038744F                 db    0
.rdata:00387450                 db    0
.rdata:00387451                 db    0
.rdata:00387452                 db    0
.rdata:00387453                 db    0
.rdata:00387454                 db    0
.rdata:00387455                 db    0
.rdata:00387456                 db    0
.rdata:00387457                 db    0
.rdata:00387458                 db    0
.rdata:00387459                 db    0
.rdata:0038745A                 db    0
.rdata:0038745B                 db    0
.rdata:0038745C                 db    0
.rdata:0038745D                 db    0
.rdata:0038745E                 db    0
.rdata:0038745F                 db    0
.rdata:00387460                 db    0
.rdata:00387461                 db    0
.rdata:00387462                 db    0
.rdata:00387463                 db    0
.rdata:00387464                 db    0
.rdata:00387465                 db    0
.rdata:00387466                 db    0
.rdata:00387467                 db    0
.rdata:00387468                 db    0
.rdata:00387469                 db    0
.rdata:0038746A                 db    0
.rdata:0038746B                 db    0
.rdata:0038746C                 db    0
.rdata:0038746D                 db    0
.rdata:0038746E                 db    0
.rdata:0038746F                 db    0
.rdata:00387470                 db    0
.rdata:00387471                 db    0
.rdata:00387472                 db    0
.rdata:00387473                 db    0
.rdata:00387474                 db    0
.rdata:00387475                 db    0
.rdata:00387476                 db    0
.rdata:00387477                 db    0
.rdata:00387478                 db    0
.rdata:00387479                 db    0
.rdata:0038747A                 db    0
.rdata:0038747B                 db    0
.rdata:0038747C                 db    0
.rdata:0038747D                 db    0
.rdata:0038747E                 db    0
.rdata:0038747F                 db    0
.rdata:00387480                 db    0
.rdata:00387481                 db    0
.rdata:00387482                 db    0
.rdata:00387483                 db    0
.rdata:00387484                 db    0
.rdata:00387485                 db    0
.rdata:00387486                 db    0
.rdata:00387487                 db    0
.rdata:00387488                 db    0
.rdata:00387489                 db    0
.rdata:0038748A                 db    0
.rdata:0038748B                 db    0
.rdata:0038748C                 db    0
.rdata:0038748D                 db    0
.rdata:0038748E                 db    0
.rdata:0038748F                 db    0
.rdata:00387490                 db    0
.rdata:00387491                 db    0
.rdata:00387492                 db    0
.rdata:00387493                 db    0
.rdata:00387494                 db    0
.rdata:00387495                 db    0
.rdata:00387496                 db    0
.rdata:00387497                 db    0
.rdata:00387498                 db    0
.rdata:00387499                 db    0
.rdata:0038749A                 db    0
.rdata:0038749B                 db    0
.rdata:0038749C                 db    0
.rdata:0038749D                 db    0
.rdata:0038749E                 db    0
.rdata:0038749F                 db    0
.rdata:003874A0                 db    0
.rdata:003874A1                 db    0
.rdata:003874A2                 db    0
.rdata:003874A3                 db    0
.rdata:003874A4                 db    0
.rdata:003874A5                 db    0
.rdata:003874A6                 db    0
.rdata:003874A7                 db    0
.rdata:003874A8                 db    0
.rdata:003874A9                 db    0
.rdata:003874AA                 db    0
.rdata:003874AB                 db    0
.rdata:003874AC                 db    0
.rdata:003874AD                 db    0
.rdata:003874AE                 db    0
.rdata:003874AF                 db    0
.rdata:003874B0                 db    0
.rdata:003874B1                 db    0
.rdata:003874B2                 db    0
.rdata:003874B3                 db    0
.rdata:003874B4                 db    0
.rdata:003874B5                 db    0
.rdata:003874B6                 db    0
.rdata:003874B7                 db    0
.rdata:003874B8                 db    0
.rdata:003874B9                 db    0
.rdata:003874BA                 db    0
.rdata:003874BB                 db    0
.rdata:003874BC                 db    0
.rdata:003874BD                 db    0
.rdata:003874BE                 db    0
.rdata:003874BF                 db    0
.rdata:003874C0                 db    0
.rdata:003874C1                 db    0
.rdata:003874C2                 db    0
.rdata:003874C3                 db    0
.rdata:003874C4                 db    0
.rdata:003874C5                 db    0
.rdata:003874C6                 db    0
.rdata:003874C7                 db    0
.rdata:003874C8                 db    0
.rdata:003874C9                 db    0
.rdata:003874CA                 db    0
.rdata:003874CB                 db    0
.rdata:003874CC                 db    0
.rdata:003874CD                 db    0
.rdata:003874CE                 db    0
.rdata:003874CF                 db    0
.rdata:003874D0                 db    0
.rdata:003874D1                 db    0
.rdata:003874D2                 db    0
.rdata:003874D3                 db    0
.rdata:003874D4                 db    0
.rdata:003874D5                 db    0
.rdata:003874D6                 db    0
.rdata:003874D7                 db    0
.rdata:003874D8                 db    0
.rdata:003874D9                 db    0
.rdata:003874DA                 db    0
.rdata:003874DB                 db    0
.rdata:003874DC                 db    0
.rdata:003874DD                 db    0
.rdata:003874DE                 db    0
.rdata:003874DF                 db    0
.rdata:003874E0                 db    0
.rdata:003874E1                 db    0
.rdata:003874E2                 db    0
.rdata:003874E3                 db    0
.rdata:003874E4                 db    0
.rdata:003874E5                 db    0
.rdata:003874E6                 db    0
.rdata:003874E7                 db    0
.rdata:003874E8                 db    0
.rdata:003874E9                 db    0
.rdata:003874EA                 db    0
.rdata:003874EB                 db    0
.rdata:003874EC                 db    0
.rdata:003874ED                 db    0
.rdata:003874EE                 db    0
.rdata:003874EF                 db    0
.rdata:003874F0                 db    0
.rdata:003874F1                 db    0
.rdata:003874F2                 db    0
.rdata:003874F3                 db    0
.rdata:003874F4                 db    0
.rdata:003874F5                 db    0
.rdata:003874F6                 db    0
.rdata:003874F7                 db    0
.rdata:003874F8                 db    0
.rdata:003874F9                 db    0
.rdata:003874FA                 db    0
.rdata:003874FB                 db    0
.rdata:003874FC                 db    0
.rdata:003874FD                 db    0
.rdata:003874FE                 db    0
.rdata:003874FF                 db    0
.rdata:00387500                 db    0
.rdata:00387501                 db    0
.rdata:00387502                 db    0
.rdata:00387503                 db    0
.rdata:00387504                 db    0
.rdata:00387505                 db    0
.rdata:00387506                 db    0
.rdata:00387507                 db    0
.rdata:00387508                 db    0
.rdata:00387509                 db    0
.rdata:0038750A                 db    0
.rdata:0038750B                 db    0
.rdata:0038750C                 db    0
.rdata:0038750D                 db    0
.rdata:0038750E                 db    0
.rdata:0038750F                 db    0
.rdata:00387510                 db    0
.rdata:00387511                 db    0
.rdata:00387512                 db    0
.rdata:00387513                 db    0
.rdata:00387514                 dd offset sub_3821F0
.rdata:00387518                 db    0
.rdata:00387519                 db    0
.rdata:0038751A                 db    0
.rdata:0038751B                 db    0
.rdata:0038751C                 db    0
.rdata:0038751D                 db    0
.rdata:0038751E                 db    0
.rdata:0038751F                 db    0
.rdata:00387520                 db    0
.rdata:00387521                 db    0
.rdata:00387522                 db    0
.rdata:00387523                 db    0
.rdata:00387524                 db    0
.rdata:00387525                 db    0
.rdata:00387526                 db    0
.rdata:00387527                 db    0
.rdata:00387528                 db    0
.rdata:00387529                 db    0
.rdata:0038752A                 db    0
.rdata:0038752B                 db    0
.rdata:0038752C                 db    0
.rdata:0038752D                 db    0
.rdata:0038752E                 db    0
.rdata:0038752F                 db    0
.rdata:00387530                 db    0
.rdata:00387531                 db    0
.rdata:00387532                 db    0
.rdata:00387533                 db    0
.rdata:00387534                 db    0
.rdata:00387535                 db    0
.rdata:00387536                 db    0
.rdata:00387537                 db    0
.rdata:00387538                 db    0
.rdata:00387539                 db    0
.rdata:0038753A                 db    0
.rdata:0038753B                 db    0
.rdata:0038753C                 db    0
.rdata:0038753D                 db    0
.rdata:0038753E                 db    0
.rdata:0038753F                 db    0
.rdata:00387540                 db    0
.rdata:00387541                 db    0
.rdata:00387542                 db    0
.rdata:00387543                 db    0
.rdata:00387544                 db    0
.rdata:00387545                 db    0
.rdata:00387546                 db    0
.rdata:00387547                 db    0
.rdata:00387548                 db    0
.rdata:00387549                 db    0
.rdata:0038754A                 db    0
.rdata:0038754B                 db    0
.rdata:0038754C                 db    0
.rdata:0038754D                 db    0
.rdata:0038754E                 db    0
.rdata:0038754F                 db    0
.rdata:00387550                 db    0
.rdata:00387551                 db    0
.rdata:00387552                 db    0
.rdata:00387553                 db    0
.rdata:00387554                 db    0
.rdata:00387555                 db    0
.rdata:00387556                 db    0
.rdata:00387557                 db    0
.rdata:00387558                 db    0
.rdata:00387559                 db    0
.rdata:0038755A                 db    0
.rdata:0038755B                 db    0
.rdata:0038755C                 db    0
.rdata:0038755D                 db    0
.rdata:0038755E                 db    0
.rdata:0038755F                 db    0
.rdata:00387560                 db    0
.rdata:00387561                 db    0
.rdata:00387562                 db    0
.rdata:00387563                 db    0
.rdata:00387564                 db    0
.rdata:00387565                 db    0
.rdata:00387566                 db    0
.rdata:00387567                 db    0
.rdata:00387568                 db    0
.rdata:00387569                 db    0
.rdata:0038756A                 db    0
.rdata:0038756B                 db    0
.rdata:0038756C                 db    0
.rdata:0038756D                 db    0
.rdata:0038756E                 db    0
.rdata:0038756F                 db    0
.rdata:00387570                 db    0
.rdata:00387571                 db    0
.rdata:00387572                 db    0
.rdata:00387573                 db    0
.rdata:00387574                 db    0
.rdata:00387575                 db    0
.rdata:00387576                 db    0
.rdata:00387577                 db    0
.rdata:00387578                 db    0
.rdata:00387579                 db    0
.rdata:0038757A                 db    0
.rdata:0038757B                 db    0
.rdata:0038757C                 db    0
.rdata:0038757D                 db    0
.rdata:0038757E                 db    0
.rdata:0038757F                 db    0
.rdata:00387580                 db    0
.rdata:00387581                 db    0
.rdata:00387582                 db    0
.rdata:00387583                 db    0
.rdata:00387584                 db    0
.rdata:00387585                 db    0
.rdata:00387586                 db    0
.rdata:00387587                 db    0
.rdata:00387588                 db    0
.rdata:00387589                 db    0
.rdata:0038758A                 db    0
.rdata:0038758B                 db    0
.rdata:0038758C                 db    0
.rdata:0038758D                 db    0
.rdata:0038758E                 db    0
.rdata:0038758F                 db    0
.rdata:00387590                 db    0
.rdata:00387591                 db    0
.rdata:00387592                 db    0
.rdata:00387593                 db    0
.rdata:00387594                 db    0
.rdata:00387595                 db    0
.rdata:00387596                 db    0
.rdata:00387597                 db    0
.rdata:00387598                 db    0
.rdata:00387599                 db    0
.rdata:0038759A                 db    0
.rdata:0038759B                 db    0
.rdata:0038759C                 db    0
.rdata:0038759D                 db    0
.rdata:0038759E                 db    0
.rdata:0038759F                 db    0
.rdata:003875A0                 db    0
.rdata:003875A1                 db    0
.rdata:003875A2                 db    0
.rdata:003875A3                 db    0
.rdata:003875A4                 db    0
.rdata:003875A5                 db    0
.rdata:003875A6                 db    0
.rdata:003875A7                 db    0
.rdata:003875A8                 db    0
.rdata:003875A9                 db    0
.rdata:003875AA                 db    0
.rdata:003875AB                 db    0
.rdata:003875AC                 db    0
.rdata:003875AD                 db    0
.rdata:003875AE                 db    0
.rdata:003875AF                 db    0
.rdata:003875B0                 db    0
.rdata:003875B1                 db    0
.rdata:003875B2                 db    0
.rdata:003875B3                 db    0
.rdata:003875B4                 db    0
.rdata:003875B5                 db    0
.rdata:003875B6                 db    0
.rdata:003875B7                 db    0
.rdata:003875B8                 db    0
.rdata:003875B9                 db    0
.rdata:003875BA                 db    0
.rdata:003875BB                 db    0
.rdata:003875BC                 db    0
.rdata:003875BD                 db    0
.rdata:003875BE                 db    0
.rdata:003875BF                 db    0
.rdata:003875C0                 db    0
.rdata:003875C1                 db    0
.rdata:003875C2                 db    0
.rdata:003875C3                 db    0
.rdata:003875C4                 db    0
.rdata:003875C5                 db    0
.rdata:003875C6                 db    0
.rdata:003875C7                 db    0
.rdata:003875C8                 db    0
.rdata:003875C9                 db    0
.rdata:003875CA                 db    0
.rdata:003875CB                 db    0
.rdata:003875CC                 db    0
.rdata:003875CD                 db    0
.rdata:003875CE                 db    0
.rdata:003875CF                 db    0
.rdata:003875D0                 db    0
.rdata:003875D1                 db    0
.rdata:003875D2                 db    0
.rdata:003875D3                 db    0
.rdata:003875D4                 db    0
.rdata:003875D5                 db    0
.rdata:003875D6                 db    0
.rdata:003875D7                 db    0
.rdata:003875D8                 db    0
.rdata:003875D9                 db    0
.rdata:003875DA                 db    0
.rdata:003875DB                 db    0
.rdata:003875DC                 db    0
.rdata:003875DD                 db    0
.rdata:003875DE                 db    0
.rdata:003875DF                 db    0
.rdata:003875E0                 db    0
.rdata:003875E1                 db    0
.rdata:003875E2                 db    0
.rdata:003875E3                 db    0
.rdata:003875E4                 db    0
.rdata:003875E5                 db    0
.rdata:003875E6                 db    0
.rdata:003875E7                 db    0
.rdata:003875E8                 db    0
.rdata:003875E9                 db    0
.rdata:003875EA                 db    0
.rdata:003875EB                 db    0
.rdata:003875EC                 db    0
.rdata:003875ED                 db    0
.rdata:003875EE                 db    0
.rdata:003875EF                 db    0
.rdata:003875F0                 db    0
.rdata:003875F1                 db    0
.rdata:003875F2                 db    0
.rdata:003875F3                 db    0
.rdata:003875F4                 db    0
.rdata:003875F5                 db    0
.rdata:003875F6                 db    0
.rdata:003875F7                 db    0
.rdata:003875F8                 db    0
.rdata:003875F9                 db    0
.rdata:003875FA                 db    0
.rdata:003875FB                 db    0
.rdata:003875FC                 db    0
.rdata:003875FD                 db    0
.rdata:003875FE                 db    0
.rdata:003875FF                 db    0
.rdata:00387600                 db    0
.rdata:00387601                 db    0
.rdata:00387602                 db    0
.rdata:00387603                 db    0
.rdata:00387604                 db    0
.rdata:00387605                 db    0
.rdata:00387606                 db    0
.rdata:00387607                 db    0
.rdata:00387608                 db    0
.rdata:00387609                 db    0
.rdata:0038760A                 db    0
.rdata:0038760B                 db    0
.rdata:0038760C                 db    0
.rdata:0038760D                 db    0
.rdata:0038760E                 db    0
.rdata:0038760F                 db    0
.rdata:00387610                 db    0
.rdata:00387611                 db    0
.rdata:00387612                 db    0
.rdata:00387613                 db    0
.rdata:00387614                 db    0
.rdata:00387615                 db    0
.rdata:00387616                 db    0
.rdata:00387617                 db    0
.rdata:00387618 ; const _PIFV Last
.rdata:00387618 Last            dd 0                    ; DATA XREF: sub_382240+83↑o
.rdata:0038761C                 db    0
.rdata:0038761D                 db    0
.rdata:0038761E                 db    0
.rdata:0038761F                 db    0
.rdata:00387620                 db    0
.rdata:00387621                 db    0
.rdata:00387622                 db    0
.rdata:00387623                 db    0
.rdata:00387624                 db    0
.rdata:00387625                 db    0
.rdata:00387626                 db    0
.rdata:00387627                 db    0
.rdata:00387628                 db    0
.rdata:00387629                 db    0
.rdata:0038762A                 db    0
.rdata:0038762B                 db    0
.rdata:0038762C                 db    0
.rdata:0038762D                 db    0
.rdata:0038762E                 db    0
.rdata:0038762F                 db    0
.rdata:00387630                 db    0
.rdata:00387631                 db    0
.rdata:00387632                 db    0
.rdata:00387633                 db    0
.rdata:00387634                 db    0
.rdata:00387635                 db    0
.rdata:00387636                 db    0
.rdata:00387637                 db    0
.rdata:00387638                 db    0
.rdata:00387639                 db    0
.rdata:0038763A                 db    0
.rdata:0038763B                 db    0
.rdata:0038763C                 db    0
.rdata:0038763D                 db    0
.rdata:0038763E                 db    0
.rdata:0038763F                 db    0
.rdata:00387640                 db    0
.rdata:00387641                 db    0
.rdata:00387642                 db    0
.rdata:00387643                 db    0
.rdata:00387644                 db    0
.rdata:00387645                 db    0
.rdata:00387646                 db    0
.rdata:00387647                 db    0
.rdata:00387648                 db    0
.rdata:00387649                 db    0
.rdata:0038764A                 db    0
.rdata:0038764B                 db    0
.rdata:0038764C                 db    0
.rdata:0038764D                 db    0
.rdata:0038764E                 db    0
.rdata:0038764F                 db    0
.rdata:00387650                 db    0
.rdata:00387651                 db    0
.rdata:00387652                 db    0
.rdata:00387653                 db    0
.rdata:00387654                 db    0
.rdata:00387655                 db    0
.rdata:00387656                 db    0
.rdata:00387657                 db    0
.rdata:00387658                 db    0
.rdata:00387659                 db    0
.rdata:0038765A                 db    0
.rdata:0038765B                 db    0
.rdata:0038765C                 db    0
.rdata:0038765D                 db    0
.rdata:0038765E                 db    0
.rdata:0038765F                 db    0
.rdata:00387660                 db    0
.rdata:00387661                 db    0
.rdata:00387662                 db    0
.rdata:00387663                 db    0
.rdata:00387664                 db    0
.rdata:00387665                 db    0
.rdata:00387666                 db    0
.rdata:00387667                 db    0
.rdata:00387668                 db    0
.rdata:00387669                 db    0
.rdata:0038766A                 db    0
.rdata:0038766B                 db    0
.rdata:0038766C                 db    0
.rdata:0038766D                 db    0
.rdata:0038766E                 db    0
.rdata:0038766F                 db    0
.rdata:00387670                 db    0
.rdata:00387671                 db    0
.rdata:00387672                 db    0
.rdata:00387673                 db    0
.rdata:00387674                 db    0
.rdata:00387675                 db    0
.rdata:00387676                 db    0
.rdata:00387677                 db    0
.rdata:00387678                 db    0
.rdata:00387679                 db    0
.rdata:0038767A                 db    0
.rdata:0038767B                 db    0
.rdata:0038767C                 db    0
.rdata:0038767D                 db    0
.rdata:0038767E                 db    0
.rdata:0038767F                 db    0
.rdata:00387680                 db    0
.rdata:00387681                 db    0
.rdata:00387682                 db    0
.rdata:00387683                 db    0
.rdata:00387684                 db    0
.rdata:00387685                 db    0
.rdata:00387686                 db    0
.rdata:00387687                 db    0
.rdata:00387688                 db    0
.rdata:00387689                 db    0
.rdata:0038768A                 db    0
.rdata:0038768B                 db    0
.rdata:0038768C                 db    0
.rdata:0038768D                 db    0
.rdata:0038768E                 db    0
.rdata:0038768F                 db    0
.rdata:00387690                 db    0
.rdata:00387691                 db    0
.rdata:00387692                 db    0
.rdata:00387693                 db    0
.rdata:00387694                 db    0
.rdata:00387695                 db    0
.rdata:00387696                 db    0
.rdata:00387697                 db    0
.rdata:00387698                 db    0
.rdata:00387699                 db    0
.rdata:0038769A                 db    0
.rdata:0038769B                 db    0
.rdata:0038769C                 db    0
.rdata:0038769D                 db    0
.rdata:0038769E                 db    0
.rdata:0038769F                 db    0
.rdata:003876A0                 db    0
.rdata:003876A1                 db    0
.rdata:003876A2                 db    0
.rdata:003876A3                 db    0
.rdata:003876A4                 db    0
.rdata:003876A5                 db    0
.rdata:003876A6                 db    0
.rdata:003876A7                 db    0
.rdata:003876A8                 db    0
.rdata:003876A9                 db    0
.rdata:003876AA                 db    0
.rdata:003876AB                 db    0
.rdata:003876AC                 db    0
.rdata:003876AD                 db    0
.rdata:003876AE                 db    0
.rdata:003876AF                 db    0
.rdata:003876B0                 db    0
.rdata:003876B1                 db    0
.rdata:003876B2                 db    0
.rdata:003876B3                 db    0
.rdata:003876B4                 db    0
.rdata:003876B5                 db    0
.rdata:003876B6                 db    0
.rdata:003876B7                 db    0
.rdata:003876B8                 db    0
.rdata:003876B9                 db    0
.rdata:003876BA                 db    0
.rdata:003876BB                 db    0
.rdata:003876BC                 db    0
.rdata:003876BD                 db    0
.rdata:003876BE                 db    0
.rdata:003876BF                 db    0
.rdata:003876C0                 db    0
.rdata:003876C1                 db    0
.rdata:003876C2                 db    0
.rdata:003876C3                 db    0
.rdata:003876C4                 db    0
.rdata:003876C5                 db    0
.rdata:003876C6                 db    0
.rdata:003876C7                 db    0
.rdata:003876C8                 db    0
.rdata:003876C9                 db    0
.rdata:003876CA                 db    0
.rdata:003876CB                 db    0
.rdata:003876CC                 db    0
.rdata:003876CD                 db    0
.rdata:003876CE                 db    0
.rdata:003876CF                 db    0
.rdata:003876D0                 db    0
.rdata:003876D1                 db    0
.rdata:003876D2                 db    0
.rdata:003876D3                 db    0
.rdata:003876D4                 db    0
.rdata:003876D5                 db    0
.rdata:003876D6                 db    0
.rdata:003876D7                 db    0
.rdata:003876D8                 db    0
.rdata:003876D9                 db    0
.rdata:003876DA                 db    0
.rdata:003876DB                 db    0
.rdata:003876DC                 db    0
.rdata:003876DD                 db    0
.rdata:003876DE                 db    0
.rdata:003876DF                 db    0
.rdata:003876E0                 db    0
.rdata:003876E1                 db    0
.rdata:003876E2                 db    0
.rdata:003876E3                 db    0
.rdata:003876E4                 db    0
.rdata:003876E5                 db    0
.rdata:003876E6                 db    0
.rdata:003876E7                 db    0
.rdata:003876E8                 db    0
.rdata:003876E9                 db    0
.rdata:003876EA                 db    0
.rdata:003876EB                 db    0
.rdata:003876EC                 db    0
.rdata:003876ED                 db    0
.rdata:003876EE                 db    0
.rdata:003876EF                 db    0
.rdata:003876F0                 db    0
.rdata:003876F1                 db    0
.rdata:003876F2                 db    0
.rdata:003876F3                 db    0
.rdata:003876F4                 db    0
.rdata:003876F5                 db    0
.rdata:003876F6                 db    0
.rdata:003876F7                 db    0
.rdata:003876F8                 db    0
.rdata:003876F9                 db    0
.rdata:003876FA                 db    0
.rdata:003876FB                 db    0
.rdata:003876FC                 db    0
.rdata:003876FD                 db    0
.rdata:003876FE                 db    0
.rdata:003876FF                 db    0
.rdata:00387700                 db    0
.rdata:00387701                 db    0
.rdata:00387702                 db    0
.rdata:00387703                 db    0
.rdata:00387704                 db    0
.rdata:00387705                 db    0
.rdata:00387706                 db    0
.rdata:00387707                 db    0
.rdata:00387708                 db    0
.rdata:00387709                 db    0
.rdata:0038770A                 db    0
.rdata:0038770B                 db    0
.rdata:0038770C                 db    0
.rdata:0038770D                 db    0
.rdata:0038770E                 db    0
.rdata:0038770F                 db    0
.rdata:00387710                 db    0
.rdata:00387711                 db    0
.rdata:00387712                 db    0
.rdata:00387713                 db    0
.rdata:00387714                 db    0
.rdata:00387715                 db    0
.rdata:00387716                 db    0
.rdata:00387717                 db    0
.rdata:00387718                 db    0
.rdata:00387719                 db    0
.rdata:0038771A                 db    0
.rdata:0038771B                 db    0
.rdata:0038771C                 db    0
.rdata:0038771D                 db    0
.rdata:0038771E                 db    0
.rdata:0038771F                 db    0
.rdata:00387720                 db    0
.rdata:00387721                 db    0
.rdata:00387722                 db    0
.rdata:00387723                 db    0
.rdata:00387724                 db    0
.rdata:00387725                 db    0
.rdata:00387726                 db    0
.rdata:00387727                 db    0
.rdata:00387728                 db    0
.rdata:00387729                 db    0
.rdata:0038772A                 db    0
.rdata:0038772B                 db    0
.rdata:0038772C                 db    0
.rdata:0038772D                 db    0
.rdata:0038772E                 db    0
.rdata:0038772F                 db    0
.rdata:00387730                 db    0
.rdata:00387731                 db    0
.rdata:00387732                 db    0
.rdata:00387733                 db    0
.rdata:00387734                 db    0
.rdata:00387735                 db    0
.rdata:00387736                 db    0
.rdata:00387737                 db    0
.rdata:00387738                 db    0
.rdata:00387739                 db    0
.rdata:0038773A                 db    0
.rdata:0038773B                 db    0
.rdata:0038773C                 db    0
.rdata:0038773D                 db    0
.rdata:0038773E                 db    0
.rdata:0038773F                 db    0
.rdata:00387740                 db    0
.rdata:00387741                 db    0
.rdata:00387742                 db    0
.rdata:00387743                 db    0
.rdata:00387744                 db    0
.rdata:00387745                 db    0
.rdata:00387746                 db    0
.rdata:00387747                 db    0
.rdata:00387748                 db    0
.rdata:00387749                 db    0
.rdata:0038774A                 db    0
.rdata:0038774B                 db    0
.rdata:0038774C                 db    0
.rdata:0038774D                 db    0
.rdata:0038774E                 db    0
.rdata:0038774F                 db    0
.rdata:00387750                 db    0
.rdata:00387751                 db    0
.rdata:00387752                 db    0
.rdata:00387753                 db    0
.rdata:00387754                 db    0
.rdata:00387755                 db    0
.rdata:00387756                 db    0
.rdata:00387757                 db    0
.rdata:00387758                 db    0
.rdata:00387759                 db    0
.rdata:0038775A                 db    0
.rdata:0038775B                 db    0
.rdata:0038775C                 db    0
.rdata:0038775D                 db    0
.rdata:0038775E                 db    0
.rdata:0038775F                 db    0
.rdata:00387760                 db    0
.rdata:00387761                 db    0
.rdata:00387762                 db    0
.rdata:00387763                 db    0
.rdata:00387764                 db    0
.rdata:00387765                 db    0
.rdata:00387766                 db    0
.rdata:00387767                 db    0
.rdata:00387768                 db    0
.rdata:00387769                 db    0
.rdata:0038776A                 db    0
.rdata:0038776B                 db    0
.rdata:0038776C                 db    0
.rdata:0038776D                 db    0
.rdata:0038776E                 db    0
.rdata:0038776F                 db    0
.rdata:00387770                 db    0
.rdata:00387771                 db    0
.rdata:00387772                 db    0
.rdata:00387773                 db    0
.rdata:00387774                 db    0
.rdata:00387775                 db    0
.rdata:00387776                 db    0
.rdata:00387777                 db    0
.rdata:00387778                 db    0
.rdata:00387779                 db    0
.rdata:0038777A                 db    0
.rdata:0038777B                 db    0
.rdata:0038777C                 db    0
.rdata:0038777D                 db    0
.rdata:0038777E                 db    0
.rdata:0038777F                 db    0
.rdata:00387780                 db    0
.rdata:00387781                 db    0
.rdata:00387782                 db    0
.rdata:00387783                 db    0
.rdata:00387784                 db    0
.rdata:00387785                 db    0
.rdata:00387786                 db    0
.rdata:00387787                 db    0
.rdata:00387788                 db    0
.rdata:00387789                 db    0
.rdata:0038778A                 db    0
.rdata:0038778B                 db    0
.rdata:0038778C                 db    0
.rdata:0038778D                 db    0
.rdata:0038778E                 db    0
.rdata:0038778F                 db    0
.rdata:00387790                 db    0
.rdata:00387791                 db    0
.rdata:00387792                 db    0
.rdata:00387793                 db    0
.rdata:00387794                 db    0
.rdata:00387795                 db    0
.rdata:00387796                 db    0
.rdata:00387797                 db    0
.rdata:00387798                 db    0
.rdata:00387799                 db    0
.rdata:0038779A                 db    0
.rdata:0038779B                 db    0
.rdata:0038779C                 db    0
.rdata:0038779D                 db    0
.rdata:0038779E                 db    0
.rdata:0038779F                 db    0
.rdata:003877A0                 db    0
.rdata:003877A1                 db    0
.rdata:003877A2                 db    0
.rdata:003877A3                 db    0
.rdata:003877A4                 db    0
.rdata:003877A5                 db    0
.rdata:003877A6                 db    0
.rdata:003877A7                 db    0
.rdata:003877A8                 db    0
.rdata:003877A9                 db    0
.rdata:003877AA                 db    0
.rdata:003877AB                 db    0
.rdata:003877AC                 db    0
.rdata:003877AD                 db    0
.rdata:003877AE                 db    0
.rdata:003877AF                 db    0
.rdata:003877B0                 db    0
.rdata:003877B1                 db    0
.rdata:003877B2                 db    0
.rdata:003877B3                 db    0
.rdata:003877B4                 db    0
.rdata:003877B5                 db    0
.rdata:003877B6                 db    0
.rdata:003877B7                 db    0
.rdata:003877B8                 db    0
.rdata:003877B9                 db    0
.rdata:003877BA                 db    0
.rdata:003877BB                 db    0
.rdata:003877BC                 db    0
.rdata:003877BD                 db    0
.rdata:003877BE                 db    0
.rdata:003877BF                 db    0
.rdata:003877C0                 db    0
.rdata:003877C1                 db    0
.rdata:003877C2                 db    0
.rdata:003877C3                 db    0
.rdata:003877C4                 db    0
.rdata:003877C5                 db    0
.rdata:003877C6                 db    0
.rdata:003877C7                 db    0
.rdata:003877C8                 db    0
.rdata:003877C9                 db    0
.rdata:003877CA                 db    0
.rdata:003877CB                 db    0
.rdata:003877CC                 db    0
.rdata:003877CD                 db    0
.rdata:003877CE                 db    0
.rdata:003877CF                 db    0
.rdata:003877D0                 db    0
.rdata:003877D1                 db    0
.rdata:003877D2                 db    0
.rdata:003877D3                 db    0
.rdata:003877D4                 db    0
.rdata:003877D5                 db    0
.rdata:003877D6                 db    0
.rdata:003877D7                 db    0
.rdata:003877D8                 db    0
.rdata:003877D9                 db    0
.rdata:003877DA                 db    0
.rdata:003877DB                 db    0
.rdata:003877DC                 db    0
.rdata:003877DD                 db    0
.rdata:003877DE                 db    0
.rdata:003877DF                 db    0
.rdata:003877E0                 db    0
.rdata:003877E1                 db    0
.rdata:003877E2                 db    0
.rdata:003877E3                 db    0
.rdata:003877E4                 db    0
.rdata:003877E5                 db    0
.rdata:003877E6                 db    0
.rdata:003877E7                 db    0
.rdata:003877E8                 db    0
.rdata:003877E9                 db    0
.rdata:003877EA                 db    0
.rdata:003877EB                 db    0
.rdata:003877EC                 db    0
.rdata:003877ED                 db    0
.rdata:003877EE                 db    0
.rdata:003877EF                 db    0
.rdata:003877F0                 db    0
.rdata:003877F1                 db    0
.rdata:003877F2                 db    0
.rdata:003877F3                 db    0
.rdata:003877F4                 db    0
.rdata:003877F5                 db    0
.rdata:003877F6                 db    0
.rdata:003877F7                 db    0
.rdata:003877F8                 db    0
.rdata:003877F9                 db    0
.rdata:003877FA                 db    0
.rdata:003877FB                 db    0
.rdata:003877FC                 db    0
.rdata:003877FD                 db    0
.rdata:003877FE                 db    0
.rdata:003877FF                 db    0
.rdata:00387800                 db    0
.rdata:00387801                 db    0
.rdata:00387802                 db    0
.rdata:00387803                 db    0
.rdata:00387804                 db    0
.rdata:00387805                 db    0
.rdata:00387806                 db    0
.rdata:00387807                 db    0
.rdata:00387808                 db    0
.rdata:00387809                 db    0
.rdata:0038780A                 db    0
.rdata:0038780B                 db    0
.rdata:0038780C                 db    0
.rdata:0038780D                 db    0
.rdata:0038780E                 db    0
.rdata:0038780F                 db    0
.rdata:00387810                 db    0
.rdata:00387811                 db    0
.rdata:00387812                 db    0
.rdata:00387813                 db    0
.rdata:00387814                 db    0
.rdata:00387815                 db    0
.rdata:00387816                 db    0
.rdata:00387817                 db    0
.rdata:00387818                 db    0
.rdata:00387819                 db    0
.rdata:0038781A                 db    0
.rdata:0038781B                 db    0
.rdata:0038781C                 db    0
.rdata:0038781D                 db    0
.rdata:0038781E                 db    0
.rdata:0038781F                 db    0
.rdata:00387820                 db    0
.rdata:00387821                 db    0
.rdata:00387822                 db    0
.rdata:00387823                 db    0
.rdata:00387824                 db    0
.rdata:00387825                 db    0
.rdata:00387826                 db    0
.rdata:00387827                 db    0
.rdata:00387828                 db    0
.rdata:00387829                 db    0
.rdata:0038782A                 db    0
.rdata:0038782B                 db    0
.rdata:0038782C                 db    0
.rdata:0038782D                 db    0
.rdata:0038782E                 db    0
.rdata:0038782F                 db    0
.rdata:00387830                 db    0
.rdata:00387831                 db    0
.rdata:00387832                 db    0
.rdata:00387833                 db    0
.rdata:00387834                 db    0
.rdata:00387835                 db    0
.rdata:00387836                 db    0
.rdata:00387837                 db    0
.rdata:00387838                 db    0
.rdata:00387839                 db    0
.rdata:0038783A                 db    0
.rdata:0038783B                 db    0
.rdata:0038783C                 db    0
.rdata:0038783D                 db    0
.rdata:0038783E                 db    0
.rdata:0038783F                 db    0
.rdata:00387840                 db    0
.rdata:00387841                 db    0
.rdata:00387842                 db    0
.rdata:00387843                 db    0
.rdata:00387844                 db    0
.rdata:00387845                 db    0
.rdata:00387846                 db    0
.rdata:00387847                 db    0
.rdata:00387848                 db    0
.rdata:00387849                 db    0
.rdata:0038784A                 db    0
.rdata:0038784B                 db    0
.rdata:0038784C                 db    0
.rdata:0038784D                 db    0
.rdata:0038784E                 db    0
.rdata:0038784F                 db    0
.rdata:00387850                 db    0
.rdata:00387851                 db    0
.rdata:00387852                 db    0
.rdata:00387853                 db    0
.rdata:00387854                 db    0
.rdata:00387855                 db    0
.rdata:00387856                 db    0
.rdata:00387857                 db    0
.rdata:00387858                 db    0
.rdata:00387859                 db    0
.rdata:0038785A                 db    0
.rdata:0038785B                 db    0
.rdata:0038785C                 db    0
.rdata:0038785D                 db    0
.rdata:0038785E                 db    0
.rdata:0038785F                 db    0
.rdata:00387860                 db    0
.rdata:00387861                 db    0
.rdata:00387862                 db    0
.rdata:00387863                 db    0
.rdata:00387864                 db    0
.rdata:00387865                 db    0
.rdata:00387866                 db    0
.rdata:00387867                 db    0
.rdata:00387868                 db    0
.rdata:00387869                 db    0
.rdata:0038786A                 db    0
.rdata:0038786B                 db    0
.rdata:0038786C                 db    0
.rdata:0038786D                 db    0
.rdata:0038786E                 db    0
.rdata:0038786F                 db    0
.rdata:00387870                 db    0
.rdata:00387871                 db    0
.rdata:00387872                 db    0
.rdata:00387873                 db    0
.rdata:00387874                 db    0
.rdata:00387875                 db    0
.rdata:00387876                 db    0
.rdata:00387877                 db    0
.rdata:00387878                 db    0
.rdata:00387879                 db    0
.rdata:0038787A                 db    0
.rdata:0038787B                 db    0
.rdata:0038787C                 db    0
.rdata:0038787D                 db    0
.rdata:0038787E                 db    0
.rdata:0038787F                 db    0
.rdata:00387880                 db    0
.rdata:00387881                 db    0
.rdata:00387882                 db    0
.rdata:00387883                 db    0
.rdata:00387884                 db    0
.rdata:00387885                 db    0
.rdata:00387886                 db    0
.rdata:00387887                 db    0
.rdata:00387888                 db    0
.rdata:00387889                 db    0
.rdata:0038788A                 db    0
.rdata:0038788B                 db    0
.rdata:0038788C                 db    0
.rdata:0038788D                 db    0
.rdata:0038788E                 db    0
.rdata:0038788F                 db    0
.rdata:00387890                 db    0
.rdata:00387891                 db    0
.rdata:00387892                 db    0
.rdata:00387893                 db    0
.rdata:00387894                 db    0
.rdata:00387895                 db    0
.rdata:00387896                 db    0
.rdata:00387897                 db    0
.rdata:00387898                 db    0
.rdata:00387899                 db    0
.rdata:0038789A                 db    0
.rdata:0038789B                 db    0
.rdata:0038789C                 db    0
.rdata:0038789D                 db    0
.rdata:0038789E                 db    0
.rdata:0038789F                 db    0
.rdata:003878A0                 db    0
.rdata:003878A1                 db    0
.rdata:003878A2                 db    0
.rdata:003878A3                 db    0
.rdata:003878A4                 db    0
.rdata:003878A5                 db    0
.rdata:003878A6                 db    0
.rdata:003878A7                 db    0
.rdata:003878A8                 db    0
.rdata:003878A9                 db    0
.rdata:003878AA                 db    0
.rdata:003878AB                 db    0
.rdata:003878AC                 db    0
.rdata:003878AD                 db    0
.rdata:003878AE                 db    0
.rdata:003878AF                 db    0
.rdata:003878B0                 db    0
.rdata:003878B1                 db    0
.rdata:003878B2                 db    0
.rdata:003878B3                 db    0
.rdata:003878B4                 db    0
.rdata:003878B5                 db    0
.rdata:003878B6                 db    0
.rdata:003878B7                 db    0
.rdata:003878B8                 db    0
.rdata:003878B9                 db    0
.rdata:003878BA                 db    0
.rdata:003878BB                 db    0
.rdata:003878BC                 db    0
.rdata:003878BD                 db    0
.rdata:003878BE                 db    0
.rdata:003878BF                 db    0
.rdata:003878C0                 db    0
.rdata:003878C1                 db    0
.rdata:003878C2                 db    0
.rdata:003878C3                 db    0
.rdata:003878C4                 db    0
.rdata:003878C5                 db    0
.rdata:003878C6                 db    0
.rdata:003878C7                 db    0
.rdata:003878C8                 db    0
.rdata:003878C9                 db    0
.rdata:003878CA                 db    0
.rdata:003878CB                 db    0
.rdata:003878CC                 db    0
.rdata:003878CD                 db    0
.rdata:003878CE                 db    0
.rdata:003878CF                 db    0
.rdata:003878D0                 db    0
.rdata:003878D1                 db    0
.rdata:003878D2                 db    0
.rdata:003878D3                 db    0
.rdata:003878D4                 db    0
.rdata:003878D5                 db    0
.rdata:003878D6                 db    0
.rdata:003878D7                 db    0
.rdata:003878D8                 db    0
.rdata:003878D9                 db    0
.rdata:003878DA                 db    0
.rdata:003878DB                 db    0
.rdata:003878DC                 db    0
.rdata:003878DD                 db    0
.rdata:003878DE                 db    0
.rdata:003878DF                 db    0
.rdata:003878E0                 db    0
.rdata:003878E1                 db    0
.rdata:003878E2                 db    0
.rdata:003878E3                 db    0
.rdata:003878E4                 db    0
.rdata:003878E5                 db    0
.rdata:003878E6                 db    0
.rdata:003878E7                 db    0
.rdata:003878E8                 db    0
.rdata:003878E9                 db    0
.rdata:003878EA                 db    0
.rdata:003878EB                 db    0
.rdata:003878EC                 db    0
.rdata:003878ED                 db    0
.rdata:003878EE                 db    0
.rdata:003878EF                 db    0
.rdata:003878F0                 db    0
.rdata:003878F1                 db    0
.rdata:003878F2                 db    0
.rdata:003878F3                 db    0
.rdata:003878F4                 db    0
.rdata:003878F5                 db    0
.rdata:003878F6                 db    0
.rdata:003878F7                 db    0
.rdata:003878F8                 db    0
.rdata:003878F9                 db    0
.rdata:003878FA                 db    0
.rdata:003878FB                 db    0
.rdata:003878FC                 db    0
.rdata:003878FD                 db    0
.rdata:003878FE                 db    0
.rdata:003878FF                 db    0
.rdata:00387900                 db    0
.rdata:00387901                 db    0
.rdata:00387902                 db    0
.rdata:00387903                 db    0
.rdata:00387904                 db    0
.rdata:00387905                 db    0
.rdata:00387906                 db    0
.rdata:00387907                 db    0
.rdata:00387908                 db    0
.rdata:00387909                 db    0
.rdata:0038790A                 db    0
.rdata:0038790B                 db    0
.rdata:0038790C                 db    0
.rdata:0038790D                 db    0
.rdata:0038790E                 db    0
.rdata:0038790F                 db    0
.rdata:00387910                 db    0
.rdata:00387911                 db    0
.rdata:00387912                 db    0
.rdata:00387913                 db    0
.rdata:00387914                 db    0
.rdata:00387915                 db    0
.rdata:00387916                 db    0
.rdata:00387917                 db    0
.rdata:00387918                 db    0
.rdata:00387919                 db    0
.rdata:0038791A                 db    0
.rdata:0038791B                 db    0
.rdata:0038791C                 db    0
.rdata:0038791D                 db    0
.rdata:0038791E                 db    0
.rdata:0038791F                 db    0
.rdata:00387920                 db    0
.rdata:00387921                 db    0
.rdata:00387922                 db    0
.rdata:00387923                 db    0
.rdata:00387924                 db    0
.rdata:00387925                 db    0
.rdata:00387926                 db    0
.rdata:00387927                 db    0
.rdata:00387928                 db    0
.rdata:00387929                 db    0
.rdata:0038792A                 db    0
.rdata:0038792B                 db    0
.rdata:0038792C                 db    0
.rdata:0038792D                 db    0
.rdata:0038792E                 db    0
.rdata:0038792F                 db    0
.rdata:00387930                 db    0
.rdata:00387931                 db    0
.rdata:00387932                 db    0
.rdata:00387933                 db    0
.rdata:00387934                 db    0
.rdata:00387935                 db    0
.rdata:00387936                 db    0
.rdata:00387937                 db    0
.rdata:00387938                 db    0
.rdata:00387939                 db    0
.rdata:0038793A                 db    0
.rdata:0038793B                 db    0
.rdata:0038793C                 db    0
.rdata:0038793D                 db    0
.rdata:0038793E                 db    0
.rdata:0038793F                 db    0
.rdata:00387940                 db    0
.rdata:00387941                 db    0
.rdata:00387942                 db    0
.rdata:00387943                 db    0
.rdata:00387944                 db    0
.rdata:00387945                 db    0
.rdata:00387946                 db    0
.rdata:00387947                 db    0
.rdata:00387948                 db    0
.rdata:00387949                 db    0
.rdata:0038794A                 db    0
.rdata:0038794B                 db    0
.rdata:0038794C                 db    0
.rdata:0038794D                 db    0
.rdata:0038794E                 db    0
.rdata:0038794F                 db    0
.rdata:00387950                 db    0
.rdata:00387951                 db    0
.rdata:00387952                 db    0
.rdata:00387953                 db    0
.rdata:00387954                 db    0
.rdata:00387955                 db    0
.rdata:00387956                 db    0
.rdata:00387957                 db    0
.rdata:00387958                 db    0
.rdata:00387959                 db    0
.rdata:0038795A                 db    0
.rdata:0038795B                 db    0
.rdata:0038795C                 db    0
.rdata:0038795D                 db    0
.rdata:0038795E                 db    0
.rdata:0038795F                 db    0
.rdata:00387960                 db    0
.rdata:00387961                 db    0
.rdata:00387962                 db    0
.rdata:00387963                 db    0
.rdata:00387964                 db    0
.rdata:00387965                 db    0
.rdata:00387966                 db    0
.rdata:00387967                 db    0
.rdata:00387968                 db    0
.rdata:00387969                 db    0
.rdata:0038796A                 db    0
.rdata:0038796B                 db    0
.rdata:0038796C                 db    0
.rdata:0038796D                 db    0
.rdata:0038796E                 db    0
.rdata:0038796F                 db    0
.rdata:00387970                 db    0
.rdata:00387971                 db    0
.rdata:00387972                 db    0
.rdata:00387973                 db    0
.rdata:00387974                 db    0
.rdata:00387975                 db    0
.rdata:00387976                 db    0
.rdata:00387977                 db    0
.rdata:00387978                 db    0
.rdata:00387979                 db    0
.rdata:0038797A                 db    0
.rdata:0038797B                 db    0
.rdata:0038797C                 db    0
.rdata:0038797D                 db    0
.rdata:0038797E                 db    0
.rdata:0038797F                 db    0
.rdata:00387980                 db    0
.rdata:00387981                 db    0
.rdata:00387982                 db    0
.rdata:00387983                 db    0
.rdata:00387984                 db    0
.rdata:00387985                 db    0
.rdata:00387986                 db    0
.rdata:00387987                 db    0
.rdata:00387988                 db    0
.rdata:00387989                 db    0
.rdata:0038798A                 db    0
.rdata:0038798B                 db    0
.rdata:0038798C                 db    0
.rdata:0038798D                 db    0
.rdata:0038798E                 db    0
.rdata:0038798F                 db    0
.rdata:00387990                 db    0
.rdata:00387991                 db    0
.rdata:00387992                 db    0
.rdata:00387993                 db    0
.rdata:00387994                 db    0
.rdata:00387995                 db    0
.rdata:00387996                 db    0
.rdata:00387997                 db    0
.rdata:00387998                 db    0
.rdata:00387999                 db    0
.rdata:0038799A                 db    0
.rdata:0038799B                 db    0
.rdata:0038799C                 db    0
.rdata:0038799D                 db    0
.rdata:0038799E                 db    0
.rdata:0038799F                 db    0
.rdata:003879A0                 db    0
.rdata:003879A1                 db    0
.rdata:003879A2                 db    0
.rdata:003879A3                 db    0
.rdata:003879A4                 db    0
.rdata:003879A5                 db    0
.rdata:003879A6                 db    0
.rdata:003879A7                 db    0
.rdata:003879A8                 db    0
.rdata:003879A9                 db    0
.rdata:003879AA                 db    0
.rdata:003879AB                 db    0
.rdata:003879AC                 db    0
.rdata:003879AD                 db    0
.rdata:003879AE                 db    0
.rdata:003879AF                 db    0
.rdata:003879B0                 db    0
.rdata:003879B1                 db    0
.rdata:003879B2                 db    0
.rdata:003879B3                 db    0
.rdata:003879B4                 db    0
.rdata:003879B5                 db    0
.rdata:003879B6                 db    0
.rdata:003879B7                 db    0
.rdata:003879B8                 db    0
.rdata:003879B9                 db    0
.rdata:003879BA                 db    0
.rdata:003879BB                 db    0
.rdata:003879BC                 db    0
.rdata:003879BD                 db    0
.rdata:003879BE                 db    0
.rdata:003879BF                 db    0
.rdata:003879C0                 db    0
.rdata:003879C1                 db    0
.rdata:003879C2                 db    0
.rdata:003879C3                 db    0
.rdata:003879C4                 db    0
.rdata:003879C5                 db    0
.rdata:003879C6                 db    0
.rdata:003879C7                 db    0
.rdata:003879C8                 db    0
.rdata:003879C9                 db    0
.rdata:003879CA                 db    0
.rdata:003879CB                 db    0
.rdata:003879CC                 db    0
.rdata:003879CD                 db    0
.rdata:003879CE                 db    0
.rdata:003879CF                 db    0
.rdata:003879D0                 db    0
.rdata:003879D1                 db    0
.rdata:003879D2                 db    0
.rdata:003879D3                 db    0
.rdata:003879D4                 db    0
.rdata:003879D5                 db    0
.rdata:003879D6                 db    0
.rdata:003879D7                 db    0
.rdata:003879D8                 db    0
.rdata:003879D9                 db    0
.rdata:003879DA                 db    0
.rdata:003879DB                 db    0
.rdata:003879DC                 db    0
.rdata:003879DD                 db    0
.rdata:003879DE                 db    0
.rdata:003879DF                 db    0
.rdata:003879E0                 db    0
.rdata:003879E1                 db    0
.rdata:003879E2                 db    0
.rdata:003879E3                 db    0
.rdata:003879E4                 db    0
.rdata:003879E5                 db    0
.rdata:003879E6                 db    0
.rdata:003879E7                 db    0
.rdata:003879E8                 db    0
.rdata:003879E9                 db    0
.rdata:003879EA                 db    0
.rdata:003879EB                 db    0
.rdata:003879EC                 db    0
.rdata:003879ED                 db    0
.rdata:003879EE                 db    0
.rdata:003879EF                 db    0
.rdata:003879F0                 db    0
.rdata:003879F1                 db    0
.rdata:003879F2                 db    0
.rdata:003879F3                 db    0
.rdata:003879F4                 db    0
.rdata:003879F5                 db    0
.rdata:003879F6                 db    0
.rdata:003879F7                 db    0
.rdata:003879F8                 db    0
.rdata:003879F9                 db    0
.rdata:003879FA                 db    0
.rdata:003879FB                 db    0
.rdata:003879FC                 db    0
.rdata:003879FD                 db    0
.rdata:003879FE                 db    0
.rdata:003879FF                 db    0
.rdata:00387A00                 db    0
.rdata:00387A01                 db    0
.rdata:00387A02                 db    0
.rdata:00387A03                 db    0
.rdata:00387A04                 db    0
.rdata:00387A05                 db    0
.rdata:00387A06                 db    0
.rdata:00387A07                 db    0
.rdata:00387A08                 db    0
.rdata:00387A09                 db    0
.rdata:00387A0A                 db    0
.rdata:00387A0B                 db    0
.rdata:00387A0C                 db    0
.rdata:00387A0D                 db    0
.rdata:00387A0E                 db    0
.rdata:00387A0F                 db    0
.rdata:00387A10                 db    0
.rdata:00387A11                 db    0
.rdata:00387A12                 db    0
.rdata:00387A13                 db    0
.rdata:00387A14                 db    0
.rdata:00387A15                 db    0
.rdata:00387A16                 db    0
.rdata:00387A17                 db    0
.rdata:00387A18                 db    0
.rdata:00387A19                 db    0
.rdata:00387A1A                 db    0
.rdata:00387A1B                 db    0
.rdata:00387A1C                 db    0
.rdata:00387A1D                 db    0
.rdata:00387A1E                 db    0
.rdata:00387A1F                 db    0
.rdata:00387A20                 db    0
.rdata:00387A21                 db    0
.rdata:00387A22                 db    0
.rdata:00387A23                 db    0
.rdata:00387A24                 db    0
.rdata:00387A25                 db    0
.rdata:00387A26                 db    0
.rdata:00387A27                 db    0
.rdata:00387A28                 db    0
.rdata:00387A29                 db    0
.rdata:00387A2A                 db    0
.rdata:00387A2B                 db    0
.rdata:00387A2C                 db    0
.rdata:00387A2D                 db    0
.rdata:00387A2E                 db    0
.rdata:00387A2F                 db    0
.rdata:00387A30                 db    0
.rdata:00387A31                 db    0
.rdata:00387A32                 db    0
.rdata:00387A33                 db    0
.rdata:00387A34                 db    0
.rdata:00387A35                 db    0
.rdata:00387A36                 db    0
.rdata:00387A37                 db    0
.rdata:00387A38                 db    0
.rdata:00387A39                 db    0
.rdata:00387A3A                 db    0
.rdata:00387A3B                 db    0
.rdata:00387A3C                 db    0
.rdata:00387A3D                 db    0
.rdata:00387A3E                 db    0
.rdata:00387A3F                 db    0
.rdata:00387A40                 db    0
.rdata:00387A41                 db    0
.rdata:00387A42                 db    0
.rdata:00387A43                 db    0
.rdata:00387A44                 db    0
.rdata:00387A45                 db    0
.rdata:00387A46                 db    0
.rdata:00387A47                 db    0
.rdata:00387A48                 db    0
.rdata:00387A49                 db    0
.rdata:00387A4A                 db    0
.rdata:00387A4B                 db    0
.rdata:00387A4C                 db    0
.rdata:00387A4D                 db    0
.rdata:00387A4E                 db    0
.rdata:00387A4F                 db    0
.rdata:00387A50                 db    0
.rdata:00387A51                 db    0
.rdata:00387A52                 db    0
.rdata:00387A53                 db    0
.rdata:00387A54                 db    0
.rdata:00387A55                 db    0
.rdata:00387A56                 db    0
.rdata:00387A57                 db    0
.rdata:00387A58                 db    0
.rdata:00387A59                 db    0
.rdata:00387A5A                 db    0
.rdata:00387A5B                 db    0
.rdata:00387A5C                 db    0
.rdata:00387A5D                 db    0
.rdata:00387A5E                 db    0
.rdata:00387A5F                 db    0
.rdata:00387A60                 db    0
.rdata:00387A61                 db    0
.rdata:00387A62                 db    0
.rdata:00387A63                 db    0
.rdata:00387A64                 db    0
.rdata:00387A65                 db    0
.rdata:00387A66                 db    0
.rdata:00387A67                 db    0
.rdata:00387A68                 db    0
.rdata:00387A69                 db    0
.rdata:00387A6A                 db    0
.rdata:00387A6B                 db    0
.rdata:00387A6C                 db    0
.rdata:00387A6D                 db    0
.rdata:00387A6E                 db    0
.rdata:00387A6F                 db    0
.rdata:00387A70                 db    0
.rdata:00387A71                 db    0
.rdata:00387A72                 db    0
.rdata:00387A73                 db    0
.rdata:00387A74                 db    0
.rdata:00387A75                 db    0
.rdata:00387A76                 db    0
.rdata:00387A77                 db    0
.rdata:00387A78                 db    0
.rdata:00387A79                 db    0
.rdata:00387A7A                 db    0
.rdata:00387A7B                 db    0
.rdata:00387A7C                 db    0
.rdata:00387A7D                 db    0
.rdata:00387A7E                 db    0
.rdata:00387A7F                 db    0
.rdata:00387A80                 db    0
.rdata:00387A81                 db    0
.rdata:00387A82                 db    0
.rdata:00387A83                 db    0
.rdata:00387A84                 db    0
.rdata:00387A85                 db    0
.rdata:00387A86                 db    0
.rdata:00387A87                 db    0
.rdata:00387A88                 db    0
.rdata:00387A89                 db    0
.rdata:00387A8A                 db    0
.rdata:00387A8B                 db    0
.rdata:00387A8C                 db    0
.rdata:00387A8D                 db    0
.rdata:00387A8E                 db    0
.rdata:00387A8F                 db    0
.rdata:00387A90                 db    0
.rdata:00387A91                 db    0
.rdata:00387A92                 db    0
.rdata:00387A93                 db    0
.rdata:00387A94                 db    0
.rdata:00387A95                 db    0
.rdata:00387A96                 db    0
.rdata:00387A97                 db    0
.rdata:00387A98                 db    0
.rdata:00387A99                 db    0
.rdata:00387A9A                 db    0
.rdata:00387A9B                 db    0
.rdata:00387A9C                 db    0
.rdata:00387A9D                 db    0
.rdata:00387A9E                 db    0
.rdata:00387A9F                 db    0
.rdata:00387AA0                 db    0
.rdata:00387AA1                 db    0
.rdata:00387AA2                 db    0
.rdata:00387AA3                 db    0
.rdata:00387AA4                 db    0
.rdata:00387AA5                 db    0
.rdata:00387AA6                 db    0
.rdata:00387AA7                 db    0
.rdata:00387AA8                 db    0
.rdata:00387AA9                 db    0
.rdata:00387AAA                 db    0
.rdata:00387AAB                 db    0
.rdata:00387AAC                 db    0
.rdata:00387AAD                 db    0
.rdata:00387AAE                 db    0
.rdata:00387AAF                 db    0
.rdata:00387AB0                 db    0
.rdata:00387AB1                 db    0
.rdata:00387AB2                 db    0
.rdata:00387AB3                 db    0
.rdata:00387AB4                 db    0
.rdata:00387AB5                 db    0
.rdata:00387AB6                 db    0
.rdata:00387AB7                 db    0
.rdata:00387AB8                 db    0
.rdata:00387AB9                 db    0
.rdata:00387ABA                 db    0
.rdata:00387ABB                 db    0
.rdata:00387ABC                 db    0
.rdata:00387ABD                 db    0
.rdata:00387ABE                 db    0
.rdata:00387ABF                 db    0
.rdata:00387AC0                 db    0
.rdata:00387AC1                 db    0
.rdata:00387AC2                 db    0
.rdata:00387AC3                 db    0
.rdata:00387AC4                 db    0
.rdata:00387AC5                 db    0
.rdata:00387AC6                 db    0
.rdata:00387AC7                 db    0
.rdata:00387AC8                 db    0
.rdata:00387AC9                 db    0
.rdata:00387ACA                 db    0
.rdata:00387ACB                 db    0
.rdata:00387ACC                 db    0
.rdata:00387ACD                 db    0
.rdata:00387ACE                 db    0
.rdata:00387ACF                 db    0
.rdata:00387AD0                 db    0
.rdata:00387AD1                 db    0
.rdata:00387AD2                 db    0
.rdata:00387AD3                 db    0
.rdata:00387AD4                 db    0
.rdata:00387AD5                 db    0
.rdata:00387AD6                 db    0
.rdata:00387AD7                 db    0
.rdata:00387AD8                 db    0
.rdata:00387AD9                 db    0
.rdata:00387ADA                 db    0
.rdata:00387ADB                 db    0
.rdata:00387ADC                 db    0
.rdata:00387ADD                 db    0
.rdata:00387ADE                 db    0
.rdata:00387ADF                 db    0
.rdata:00387AE0                 db    0
.rdata:00387AE1                 db    0
.rdata:00387AE2                 db    0
.rdata:00387AE3                 db    0
.rdata:00387AE4                 db    0
.rdata:00387AE5                 db    0
.rdata:00387AE6                 db    0
.rdata:00387AE7                 db    0
.rdata:00387AE8                 db    0
.rdata:00387AE9                 db    0
.rdata:00387AEA                 db    0
.rdata:00387AEB                 db    0
.rdata:00387AEC                 db    0
.rdata:00387AED                 db    0
.rdata:00387AEE                 db    0
.rdata:00387AEF                 db    0
.rdata:00387AF0                 db    0
.rdata:00387AF1                 db    0
.rdata:00387AF2                 db    0
.rdata:00387AF3                 db    0
.rdata:00387AF4                 db    0
.rdata:00387AF5                 db    0
.rdata:00387AF6                 db    0
.rdata:00387AF7                 db    0
.rdata:00387AF8                 db    0
.rdata:00387AF9                 db    0
.rdata:00387AFA                 db    0
.rdata:00387AFB                 db    0
.rdata:00387AFC                 db    0
.rdata:00387AFD                 db    0
.rdata:00387AFE                 db    0
.rdata:00387AFF                 db    0
.rdata:00387B00                 db    0
.rdata:00387B01                 db    0
.rdata:00387B02                 db    0
.rdata:00387B03                 db    0
.rdata:00387B04                 db    0
.rdata:00387B05                 db    0
.rdata:00387B06                 db    0
.rdata:00387B07                 db    0
.rdata:00387B08                 db    0
.rdata:00387B09                 db    0
.rdata:00387B0A                 db    0
.rdata:00387B0B                 db    0
.rdata:00387B0C                 db    0
.rdata:00387B0D                 db    0
.rdata:00387B0E                 db    0
.rdata:00387B0F                 db    0
.rdata:00387B10                 db    0
.rdata:00387B11                 db    0
.rdata:00387B12                 db    0
.rdata:00387B13                 db    0
.rdata:00387B14                 db    0
.rdata:00387B15                 db    0
.rdata:00387B16                 db    0
.rdata:00387B17                 db    0
.rdata:00387B18                 db    0
.rdata:00387B19                 db    0
.rdata:00387B1A                 db    0
.rdata:00387B1B                 db    0
.rdata:00387B1C                 db    0
.rdata:00387B1D                 db    0
.rdata:00387B1E                 db    0
.rdata:00387B1F                 db    0
.rdata:00387B20                 db    0
.rdata:00387B21                 db    0
.rdata:00387B22                 db    0
.rdata:00387B23                 db    0
.rdata:00387B24                 db    0
.rdata:00387B25                 db    0
.rdata:00387B26                 db    0
.rdata:00387B27                 db    0
.rdata:00387B28                 db    0
.rdata:00387B29                 db    0
.rdata:00387B2A                 db    0
.rdata:00387B2B                 db    0
.rdata:00387B2C                 db    0
.rdata:00387B2D                 db    0
.rdata:00387B2E                 db    0
.rdata:00387B2F                 db    0
.rdata:00387B30 ; const char aMtuMalwareReve[]
.rdata:00387B30 aMtuMalwareReve db 'MTU Malware Reverse Engineering - Assignment (c) 2023',0Ah
.rdata:00387B30                                         ; DATA XREF: _main_0+32↑o
.rdata:00387B30                 db 0Ah,0
.rdata:00387B68 ; const char aPleaseEnterYou[]
.rdata:00387B68 aPleaseEnterYou db 'Please enter your software licence key: ',0
.rdata:00387B68                                         ; DATA XREF: _main_0+3F↑o
.rdata:00387B91                 db    0
.rdata:00387B92                 db    0
.rdata:00387B93                 db    0
.rdata:00387B94                 db    0
.rdata:00387B95                 db    0
.rdata:00387B96                 db    0
.rdata:00387B97                 db    0
.rdata:00387B98                 db    0
.rdata:00387B99                 db    0
.rdata:00387B9A                 db    0
.rdata:00387B9B                 db    0
.rdata:00387B9C ; const char aS[]
.rdata:00387B9C aS              db '%s',0               ; DATA XREF: _main_0+82↑o
.rdata:00387B9F                 db    0
.rdata:00387BA0                 db    0
.rdata:00387BA1                 db    0
.rdata:00387BA2                 db    0
.rdata:00387BA3                 db    0
.rdata:00387BA4                 db    0
.rdata:00387BA5                 db    0
.rdata:00387BA6                 db    0
.rdata:00387BA7                 db    0
.rdata:00387BA8                 db    0
.rdata:00387BA9                 db    0
.rdata:00387BAA                 db    0
.rdata:00387BAB                 db    0
.rdata:00387BAC                 db    0
.rdata:00387BAD                 db    0
.rdata:00387BAE                 db    0
.rdata:00387BAF                 db    0
.rdata:00387BB0 ; const char a12348765Malrev[]
.rdata:00387BB0 a12348765Malrev db '1234-8765-MALREV',0 ; DATA XREF: _main_0+98↑o
.rdata:00387BC1                 align 10h
.rdata:00387BD0 ; const char aScanning[]
.rdata:00387BD0 aScanning       db '*** SCANNING ***',0Ah
.rdata:00387BD0                                         ; DATA XREF: _main_0:loc_381C02↑o
.rdata:00387BD0                 db 0Ah,0
.rdata:00387BE3                 db    0
.rdata:00387BE4                 db    0
.rdata:00387BE5                 db    0
.rdata:00387BE6                 db    0
.rdata:00387BE7                 db    0
.rdata:00387BE8                 db    0
.rdata:00387BE9                 db    0
.rdata:00387BEA                 db    0
.rdata:00387BEB                 db    0
.rdata:00387BEC ; const char aPossibleMatchi[]
.rdata:00387BEC aPossibleMatchi db 'Possible Matching Process discovered in Process %s',0Ah,0
.rdata:00387BEC                                         ; DATA XREF: _main_0+141↑o
.rdata:00387C20 ; const char aNoSuspiciousPr[]
.rdata:00387C20 aNoSuspiciousPr db '*** NO SUSPICIOUS PROCESSES FOUND ***',0Ah,0
.rdata:00387C20                                         ; DATA XREF: _main_0+175↑o
.rdata:00387C47                 align 4
.rdata:00387C48 ; const char aScanComplete[]
.rdata:00387C48 aScanComplete   db '*** SCAN COMPLETE ***',0Ah,0
.rdata:00387C48                                         ; DATA XREF: _main_0:loc_381CC2↑o
.rdata:00387C5F                 db    0
.rdata:00387C60                 db    0
.rdata:00387C61                 db    0
.rdata:00387C62                 db    0
.rdata:00387C63                 db    0
.rdata:00387C64                 db    0
.rdata:00387C65                 db    0
.rdata:00387C66                 db    0
.rdata:00387C67                 db    0
.rdata:00387C68                 db    0
.rdata:00387C69                 db    0
.rdata:00387C6A                 db    0
.rdata:00387C6B                 db    0
.rdata:00387C6C ; const char Str1[]
.rdata:00387C6C Str1            db 'keylog.dll',0       ; DATA XREF: sub_3818A0+93↑o
.rdata:00387C77                 db    0
.rdata:00387C78                 db    0
.rdata:00387C79                 db    0
.rdata:00387C7A                 db    0
.rdata:00387C7B                 db    0
.rdata:00387C7C                 db    0
.rdata:00387C7D                 db    0
.rdata:00387C7E                 db    0
.rdata:00387C7F                 db    0
.rdata:00387C80                 db    0
.rdata:00387C81                 db    0
.rdata:00387C82                 db    0
.rdata:00387C83                 db    0
.rdata:00387C84                 db    0
.rdata:00387C85                 db    0
.rdata:00387C86                 db    0
.rdata:00387C87                 db    0
.rdata:00387C88                 db    0
.rdata:00387C89                 db    0
.rdata:00387C8A                 db    0
.rdata:00387C8B                 db    0
.rdata:00387C8C                 db    0
.rdata:00387C8D                 db    0
.rdata:00387C8E                 db    0
.rdata:00387C8F                 db    0
.rdata:00387C90                 db    0
.rdata:00387C91                 db    0
.rdata:00387C92                 db    0
.rdata:00387C93                 db    0
.rdata:00387C94                 db    0
.rdata:00387C95                 db    0
.rdata:00387C96                 db    0
.rdata:00387C97                 db    0
.rdata:00387C98 ; const char Format[]
.rdata:00387C98 Format          db '*** SUCCESSFULLY SOLVED PROBLEM ***',0Ah,0
.rdata:00387C98                                         ; DATA XREF: sub_3818A0+C7↑o
.rdata:00387CBD                 align 10h
.rdata:00387CC0 ; const LPCCH lpMultiByteStr
.rdata:00387CC0 lpMultiByteStr  dd offset aTheValueOfEspW
.rdata:00387CC0                                         ; DATA XREF: sub_3827A0+12↑r
.rdata:00387CC0                                         ; "The value of ESP was not properly saved"...
.rdata:00387CC4                 dd offset aACastToASmalle ; "A cast to a smaller data type has cause"...
.rdata:00387CC8                 dd offset aStackMemoryWas ; "Stack memory was corrupted\r\n"
.rdata:00387CCC                 dd offset aALocalVariable ; "A local variable was used before it was"...
.rdata:00387CD0                 dd offset aStackMemoryAro ; "Stack memory around _alloca was corrupt"...
.rdata:00387CD4 ; const LPCCH off_387CD4
.rdata:00387CD4 off_387CD4      dd offset aUnknownRuntime
.rdata:00387CD4                                         ; DATA XREF: sub_3827A0:loc_3827CE↑r
.rdata:00387CD4                                         ; "Unknown Runtime Check Error\r\n"
.rdata:00387CD8 dword_387CD8    dd 1                    ; DATA XREF: sub_3829A0+AE↑r
.rdata:00387CDC                 align 10h
.rdata:00387CE0                 db    1
.rdata:00387CE1                 db    0
.rdata:00387CE2                 db    0
.rdata:00387CE3                 db    0
.rdata:00387CE4                 db    1
.rdata:00387CE5                 db    0
.rdata:00387CE6                 db    0
.rdata:00387CE7                 db    0
.rdata:00387CE8                 db    1
.rdata:00387CE9                 db    0
.rdata:00387CEA                 db    0
.rdata:00387CEB                 db    0
.rdata:00387CEC                 db    1
.rdata:00387CED                 db    0
.rdata:00387CEE                 db    0
.rdata:00387CEF                 db    0
.rdata:00387CF0 ; const char Source[]
.rdata:00387CF0 Source          db 'Stack around the variable ',27h,0
.rdata:00387CF0                                         ; DATA XREF: sub_382810+3F↑o
.rdata:00387D0C ; const char aWasCorrupted[]
.rdata:00387D0C aWasCorrupted   db 27h,' was corrupted.',0
.rdata:00387D0C                                         ; DATA XREF: sub_382810+67↑o
.rdata:00387D1D                 align 10h
.rdata:00387D20 aTheVariable    db 'The variable ',27h,0
.rdata:00387D20                                         ; DATA XREF: .text:00382CFA↑o
.rdata:00387D2F                 align 10h
.rdata:00387D30 aIsBeingUsedWit db 27h,' is being used without being initialized.',0
.rdata:00387D30                                         ; DATA XREF: .text:00382D22↑o
.rdata:00387D5B                 align 4
.rdata:00387D5C ; const char aFailedToSolveP[]
.rdata:00387D5C aFailedToSolveP db '*** FAILED TO SOLVE PROBLEM ***',0Ah,0
.rdata:00387D5C                                         ; DATA XREF: sub_3818A0:loc_381976↑o
.rdata:00387D7D                 align 10h
.rdata:00387D80 aTheValueOfEspW db 'The value of ESP was not properly saved across a function call.  '
.rdata:00387D80                                         ; DATA XREF: .rdata:lpMultiByteStr↑o
.rdata:00387D80                 db 'This is usually a result of calling a function declared with one '
.rdata:00387D80                 db 'calling convention with a function pointer declared with a differ'
.rdata:00387D80                 db 'ent calling convention.',0Dh,0Ah,0
.rdata:00387E5D                 db    0
.rdata:00387E5E                 db    0
.rdata:00387E5F                 db    0
.rdata:00387E60                 db    0
.rdata:00387E61                 db    0
.rdata:00387E62                 db    0
.rdata:00387E63                 db    0
.rdata:00387E64                 db    0
.rdata:00387E65                 db    0
.rdata:00387E66                 db    0
.rdata:00387E67                 db    0
.rdata:00387E68                 db    0
.rdata:00387E69                 db    0
.rdata:00387E6A                 db    0
.rdata:00387E6B                 db    0
.rdata:00387E6C                 db    0
.rdata:00387E6D                 db    0
.rdata:00387E6E                 db    0
.rdata:00387E6F                 db    0
.rdata:00387E70                 db    0
.rdata:00387E71                 db    0
.rdata:00387E72                 db    0
.rdata:00387E73                 db    0
.rdata:00387E74                 db    0
.rdata:00387E75                 db    0
.rdata:00387E76                 db    0
.rdata:00387E77                 db    0
.rdata:00387E78                 db    0
.rdata:00387E79                 db    0
.rdata:00387E7A                 db    0
.rdata:00387E7B                 db    0
.rdata:00387E7C                 db    0
.rdata:00387E7D                 db    0
.rdata:00387E7E                 db    0
.rdata:00387E7F                 db    0
.rdata:00387E80                 db    0
.rdata:00387E81                 db    0
.rdata:00387E82                 db    0
.rdata:00387E83                 db    0
.rdata:00387E84                 db    0
.rdata:00387E85                 db    0
.rdata:00387E86                 db    0
.rdata:00387E87                 db    0
.rdata:00387E88                 db    0
.rdata:00387E89                 db    0
.rdata:00387E8A                 db    0
.rdata:00387E8B                 db    0
.rdata:00387E8C                 db    0
.rdata:00387E8D                 db    0
.rdata:00387E8E                 db    0
.rdata:00387E8F                 db    0
.rdata:00387E90 aACastToASmalle db 'A cast to a smaller data type has caused a loss of data.  If this'
.rdata:00387E90                                         ; DATA XREF: .rdata:00387CC4↑o
.rdata:00387E90                 db ' was intentional, you should mask the source of the cast with the'
.rdata:00387E90                 db ' appropriate bitmask.  For example:  ',0Dh,0Ah
.rdata:00387E90                 db 9,'char c = (i & 0xFF);',0Dh,0Ah
.rdata:00387E90                 db 'Changing the code in this way will not affect the quality of the '
.rdata:00387E90                 db 'resulting optimized code.',0Dh,0Ah,0
.rdata:00387FAD                 db    0
.rdata:00387FAE                 db    0
.rdata:00387FAF                 db    0
.rdata:00387FB0                 db    0
.rdata:00387FB1                 db    0
.rdata:00387FB2                 db    0
.rdata:00387FB3                 db    0
.rdata:00387FB4                 db    0
.rdata:00387FB5                 db    0
.rdata:00387FB6                 db    0
.rdata:00387FB7                 db    0
.rdata:00387FB8                 db    0
.rdata:00387FB9                 db    0
.rdata:00387FBA                 db    0
.rdata:00387FBB                 db    0
.rdata:00387FBC                 db    0
.rdata:00387FBD                 db    0
.rdata:00387FBE                 db    0
.rdata:00387FBF                 db    0
.rdata:00387FC0                 db    0
.rdata:00387FC1                 db    0
.rdata:00387FC2                 db    0
.rdata:00387FC3                 db    0
.rdata:00387FC4                 db    0
.rdata:00387FC5                 db    0
.rdata:00387FC6                 db    0
.rdata:00387FC7                 db    0
.rdata:00387FC8                 db    0
.rdata:00387FC9                 db    0
.rdata:00387FCA                 db    0
.rdata:00387FCB                 db    0
.rdata:00387FCC                 db    0
.rdata:00387FCD                 db    0
.rdata:00387FCE                 db    0
.rdata:00387FCF                 db    0
.rdata:00387FD0                 db    0
.rdata:00387FD1                 db    0
.rdata:00387FD2                 db    0
.rdata:00387FD3                 db    0
.rdata:00387FD4                 db    0
.rdata:00387FD5                 db    0
.rdata:00387FD6                 db    0
.rdata:00387FD7                 db    0
.rdata:00387FD8                 db    0
.rdata:00387FD9                 db    0
.rdata:00387FDA                 db    0
.rdata:00387FDB                 db    0
.rdata:00387FDC                 db    0
.rdata:00387FDD                 db    0
.rdata:00387FDE                 db    0
.rdata:00387FDF                 db    0
.rdata:00387FE0                 db    0
.rdata:00387FE1                 db    0
.rdata:00387FE2                 db    0
.rdata:00387FE3                 db    0
.rdata:00387FE4                 db    0
.rdata:00387FE5                 db    0
.rdata:00387FE6                 db    0
.rdata:00387FE7                 db    0
.rdata:00387FE8 aStackMemoryWas db 'Stack memory was corrupted',0Dh,0Ah,0
.rdata:00387FE8                                         ; DATA XREF: .rdata:00387CC8↑o
.rdata:00388005                 db    0
.rdata:00388006                 db    0
.rdata:00388007                 db    0
.rdata:00388008                 db    0
.rdata:00388009                 db    0
.rdata:0038800A                 db    0
.rdata:0038800B                 db    0
.rdata:0038800C aALocalVariable db 'A local variable was used before it was initialized',0Dh,0Ah,0
.rdata:0038800C                                         ; DATA XREF: .rdata:00387CCC↑o
.rdata:00388042                 db    0
.rdata:00388043                 db    0
.rdata:00388044                 db    0
.rdata:00388045                 db    0
.rdata:00388046                 db    0
.rdata:00388047                 db    0
.rdata:00388048                 db    0
.rdata:00388049                 db    0
.rdata:0038804A                 db    0
.rdata:0038804B                 db    0
.rdata:0038804C aStackMemoryAro db 'Stack memory around _alloca was corrupted',0Dh,0Ah,0
.rdata:0038804C                                         ; DATA XREF: .rdata:00387CD0↑o
.rdata:00388078                 align 10h
.rdata:00388080 aUnknownRuntime db 'Unknown Runtime Check Error',0Dh,0Ah,0
.rdata:00388080                                         ; DATA XREF: .rdata:off_387CD4↑o
.rdata:0038809E                 db    0
.rdata:0038809F                 db    0
.rdata:003880A0                 db    0
.rdata:003880A1                 db    0
.rdata:003880A2                 db    0
.rdata:003880A3                 db    0
.rdata:003880A4                 db    0
.rdata:003880A5                 db    0
.rdata:003880A6                 db    0
.rdata:003880A7                 db    0
.rdata:003880A8 aRuntimeCheckEr:                        ; DATA XREF: sub_3829A0:loc_382A30↑o
.rdata:003880A8                 text "UTF-16LE", 'Runtime Check Error.',0Dh,0Ah
.rdata:003880A8                 text "UTF-16LE", ' Unable to display RTC Message.',0
.rdata:00388114                 db    0
.rdata:00388115                 db    0
.rdata:00388116                 db    0
.rdata:00388117                 db    0
.rdata:00388118                 db    0
.rdata:00388119                 db    0
.rdata:0038811A                 db    0
.rdata:0038811B                 db    0
.rdata:0038811C                 db    0
.rdata:0038811D                 db    0
.rdata:0038811E                 db    0
.rdata:0038811F                 db    0
.rdata:00388120                 db    0
.rdata:00388121                 db    0
.rdata:00388122                 db    0
.rdata:00388123                 db    0
.rdata:00388124                 db    0
.rdata:00388125                 db    0
.rdata:00388126                 db    0
.rdata:00388127                 db    0
.rdata:00388128                 db    0
.rdata:00388129                 db    0
.rdata:0038812A                 db    0
.rdata:0038812B                 db    0
.rdata:0038812C                 db    0
.rdata:0038812D                 db    0
.rdata:0038812E                 db    0
.rdata:0038812F                 db    0
.rdata:00388130 aRunTimeCheckFa:                        ; DATA XREF: sub_3829A0+12B↑o
.rdata:00388130                 text "UTF-16LE", 'Run-Time Check Failure #%d - %s',0
.rdata:00388170                 db    0
.rdata:00388171                 db    0
.rdata:00388172                 db    0
.rdata:00388173                 db    0
.rdata:00388174                 db    0
.rdata:00388175                 db    0
.rdata:00388176                 db    0
.rdata:00388177                 db    0
.rdata:00388178                 db    0
.rdata:00388179                 db    0
.rdata:0038817A                 db    0
.rdata:0038817B                 db    0
.rdata:0038817C aUnknownFilenam db 'Unknown Filename',0 ; DATA XREF: sub_3829A0+15D↑o
.rdata:0038818D                 align 10h
.rdata:00388190 aUnknownModuleN db 'Unknown Module Name',0
.rdata:00388190                                         ; DATA XREF: sub_3829A0+192↑o
.rdata:003881A4                 align 8
.rdata:003881A8 aRunTimeCheckFa_0 db 'Run-Time Check Failure #%d - %s',0
.rdata:003881A8                                         ; DATA XREF: sub_3829A0+1CC↑o
.rdata:003881C8                 align 10h
.rdata:003881D0 aStackCorrupted db 'Stack corrupted near unknown variable',0
.rdata:003881D0                                         ; DATA XREF: sub_382810:loc_382898↑o
.rdata:003881F6                 align 10h
.rdata:00388200 ; const char a2x[]
.rdata:00388200 a2x             db '%.2X ',0            ; DATA XREF: sub_3828F0+3B↑o
.rdata:00388206                 align 4
.rdata:00388208 ; const CHAR MultiByteStr[]
.rdata:00388208 MultiByteStr    db 'Stack area around _alloca memory reserved by this function is cor'
.rdata:00388208                                         ; DATA XREF: sub_382680+34↑o
.rdata:00388208                 db 'rupted',0Ah,0
.rdata:00388251                 align 10h
.rdata:00388260 asc_388260      db 0Ah,0                ; DATA XREF: sub_382680+6E↑o
.rdata:00388262                 align 4
.rdata:00388264 asc_388264      db '> ',0               ; DATA XREF: sub_382680+77↑o
.rdata:00388267                 align 4
.rdata:00388268 aData           db 0Ah                  ; DATA XREF: sub_382680+83↑o
.rdata:00388268                 db 'Data: <',0
.rdata:00388271                 align 4
.rdata:00388274 aAllocationNumb db 0Ah                  ; DATA XREF: sub_382680+8E↑o
.rdata:00388274                 db 'Allocation number within this function: ',0
.rdata:0038829E                 db    0
.rdata:0038829F                 db    0
.rdata:003882A0                 db    0
.rdata:003882A1                 db    0
.rdata:003882A2                 db    0
.rdata:003882A3                 db    0
.rdata:003882A4                 db    0
.rdata:003882A5                 db    0
.rdata:003882A6                 db    0
.rdata:003882A7                 db    0
.rdata:003882A8 aSize           db 0Ah                  ; DATA XREF: sub_382680+94↑o
.rdata:003882A8                 db 'Size: ',0
.rdata:003882B0                 db    0
.rdata:003882B1                 db    0
.rdata:003882B2                 db    0
.rdata:003882B3                 db    0
.rdata:003882B4 aAddress0x      db 0Ah                  ; DATA XREF: sub_382680+9A↑o
.rdata:003882B4                 db 'Address: 0x',0
.rdata:003882C1                 align 8
.rdata:003882C8 aStackAreaAroun_0 db 'Stack area around _alloca memory reserved by this function is cor'
.rdata:003882C8                                         ; DATA XREF: sub_382680+9F↑o
.rdata:003882C8                 db 'rupted',0
.rdata:00388310                 align 20h
.rdata:00388320 ; const char aSSPSZdSDSSSSS[]
.rdata:00388320 aSSPSZdSDSSSSS  db '%s%s%p%s%zd%s%d%s%s%s%s%s',0
.rdata:00388320                                         ; DATA XREF: sub_382680+A4↑o
.rdata:0038833A                 align 10h
.rdata:00388340 aAVariableIsBei db 'A variable is being used without being initialized.',0
.rdata:00388340                                         ; DATA XREF: .text:loc_382D43↑o
.rdata:00388374                 align 10h
.rdata:00388380 ; const struct _EXCEPTION_POINTERS ExceptionInfo
.rdata:00388380 ExceptionInfo   _EXCEPTION_POINTERS <offset dword_38A280, offset dword_38A2D0>
.rdata:00388380                                         ; DATA XREF: sub_382E50+F6↑o
.rdata:00388380                                         ; sub_382FB0+C5↑o ...
.rdata:00388388                 db    0
.rdata:00388389                 db    0
.rdata:0038838A                 db    0
.rdata:0038838B                 db    0
.rdata:0038838C off_38838C      dd offset aStackPointerCo
.rdata:0038838C                                         ; DATA XREF: .text:0038325B↑r
.rdata:0038838C                                         ; "Stack pointer corruption"
.rdata:00388390                 dd offset aCastToSmallerT ; "Cast to smaller type causing loss of da"...
.rdata:00388394                 dd offset aStackMemoryCor ; "Stack memory corruption"
.rdata:00388398                 dd offset aLocalVariableU ; "Local variable used before initializati"...
.rdata:0038839C                 dd offset aStackAroundAll ; "Stack around _alloca corrupted"
.rdata:003883A0                 db    0
.rdata:003883A1                 db    0
.rdata:003883A2                 db    0
.rdata:003883A3                 db    0
.rdata:003883A4 aStackPointerCo db 'Stack pointer corruption',0
.rdata:003883A4                                         ; DATA XREF: .rdata:off_38838C↑o
.rdata:003883BD                 db    0
.rdata:003883BE                 db    0
.rdata:003883BF                 db    0
.rdata:003883C0                 db    0
.rdata:003883C1                 db    0
.rdata:003883C2                 db    0
.rdata:003883C3                 db    0
.rdata:003883C4 aCastToSmallerT db 'Cast to smaller type causing loss of data',0
.rdata:003883C4                                         ; DATA XREF: .rdata:00388390↑o
.rdata:003883EE                 db    0
.rdata:003883EF                 db    0
.rdata:003883F0                 db    0
.rdata:003883F1                 db    0
.rdata:003883F2                 db    0
.rdata:003883F3                 db    0
.rdata:003883F4                 db    0
.rdata:003883F5                 db    0
.rdata:003883F6                 db    0
.rdata:003883F7                 db    0
.rdata:003883F8 aStackMemoryCor db 'Stack memory corruption',0
.rdata:003883F8                                         ; DATA XREF: .rdata:00388394↑o
.rdata:00388410                 db    0
.rdata:00388411                 db    0
.rdata:00388412                 db    0
.rdata:00388413                 db    0
.rdata:00388414 aLocalVariableU db 'Local variable used before initialization',0
.rdata:00388414                                         ; DATA XREF: .rdata:00388398↑o
.rdata:0038843E                 db    0
.rdata:0038843F                 db    0
.rdata:00388440                 db    0
.rdata:00388441                 db    0
.rdata:00388442                 db    0
.rdata:00388443                 db    0
.rdata:00388444                 db    0
.rdata:00388445                 db    0
.rdata:00388446                 db    0
.rdata:00388447                 db    0
.rdata:00388448 aStackAroundAll db 'Stack around _alloca corrupted',0
.rdata:00388448                                         ; DATA XREF: .rdata:0038839C↑o
.rdata:00388467                 align 10h
.rdata:00388470 dword_388470    dd 690062h              ; DATA XREF: sub_3846A0+19A↑r
.rdata:00388474 dword_388474    dd 5C006Eh              ; DATA XREF: sub_3846A0+1A6↑r
.rdata:00388478 dword_388478    dd 53004Dh              ; DATA XREF: sub_3846A0+1B2↑r
.rdata:0038847C dword_38847C    dd 440050h              ; DATA XREF: sub_3846A0+1BE↑r
.rdata:00388480 dword_388480    dd 310042h              ; DATA XREF: sub_3846A0+1CA↑r
.rdata:00388484 dword_388484    dd 300034h              ; DATA XREF: sub_3846A0+1D6↑r
.rdata:00388488 dword_388488    dd 44002Eh              ; DATA XREF: sub_3846A0+1E2↑r
.rdata:0038848C dword_38848C    dd 4C004Ch              ; DATA XREF: sub_3846A0+1EE↑r
.rdata:00388490 word_388490     dw 0                    ; DATA XREF: sub_3846A0+1FA↑r
.rdata:00388492                 align 4
.rdata:00388494 aVcruntime140dD_0:                      ; DATA XREF: sub_384500+34↑o
.rdata:00388494                 text "UTF-16LE", 'VCRUNTIME140D.dll',0
.rdata:003884B8                 db    0
.rdata:003884B9                 db    0
.rdata:003884BA                 db    0
.rdata:003884BB                 db    0
.rdata:003884BC                 db    0
.rdata:003884BD                 db    0
.rdata:003884BE                 db    0
.rdata:003884BF                 db    0
.rdata:003884C0                 db    0
.rdata:003884C1                 db    0
.rdata:003884C2                 db    0
.rdata:003884C3                 db    0
.rdata:003884C4                 db    0
.rdata:003884C5                 db    0
.rdata:003884C6                 db    0
.rdata:003884C7                 db    0
.rdata:003884C8 aApiMsWinCoreRe:                        ; DATA XREF: sub_3846A0+1D↑o
.rdata:003884C8                 text "UTF-16LE", 'api-ms-win-core-registry-l1-1-0.dll',0
.rdata:00388510                 align 20h
.rdata:00388520 aAdvapi32Dll:                           ; DATA XREF: sub_3846A0+36↑o
.rdata:00388520                                         ; sub_3846A0+56↑o
.rdata:00388520                 text "UTF-16LE", 'advapi32.dll',0
.rdata:0038853A                 align 10h
.rdata:00388540 ; const CHAR ProcName[]
.rdata:00388540 ProcName        db 'RegOpenKeyExW',0    ; DATA XREF: sub_3846A0:loc_384709↑o
.rdata:0038854E                 align 10h
.rdata:00388550 ; const CHAR aRegqueryvaluee[]
.rdata:00388550 aRegqueryvaluee db 'RegQueryValueExW',0 ; DATA XREF: sub_3846A0+7B↑o
.rdata:00388561                 align 4
.rdata:00388564 ; const CHAR aRegclosekey[]
.rdata:00388564 aRegclosekey    db 'RegCloseKey',0      ; DATA XREF: sub_3846A0+8D↑o
.rdata:00388570                 db    0
.rdata:00388571                 db    0
.rdata:00388572                 db    0
.rdata:00388573                 db    0
.rdata:00388574                 db    0
.rdata:00388575                 db    0
.rdata:00388576                 db    0
.rdata:00388577                 db    0
.rdata:00388578 aSoftwareWow643:                        ; DATA XREF: sub_3846A0+B0↑o
.rdata:00388578                 text "UTF-16LE", 'SOFTWARE\Wow6432Node\Microsoft\VisualStudio\14.0\Se'
.rdata:00388578                 text "UTF-16LE", 'tup\VC',0
.rdata:003885EC                 db    0
.rdata:003885ED                 db    0
.rdata:003885EE                 db    0
.rdata:003885EF                 db    0
.rdata:003885F0                 db    0
.rdata:003885F1                 db    0
.rdata:003885F2                 db    0
.rdata:003885F3                 db    0
.rdata:003885F4                 db    0
.rdata:003885F5                 db    0
.rdata:003885F6                 db    0
.rdata:003885F7                 db    0
.rdata:003885F8                 db    0
.rdata:003885F9                 db    0
.rdata:003885FA                 db    0
.rdata:003885FB                 db    0
.rdata:003885FC                 db    0
.rdata:003885FD                 db    0
.rdata:003885FE                 db    0
.rdata:003885FF                 db    0
.rdata:00388600                 db    0
.rdata:00388601                 db    0
.rdata:00388602                 db    0
.rdata:00388603                 db    0
.rdata:00388604 aProductdir:                            ; DATA XREF: sub_3846A0+103↑o
.rdata:00388604                 text "UTF-16LE", 'ProductDir',0
.rdata:0038861A                 align 10h
.rdata:00388620 ; const wchar_t aDll
.rdata:00388620 aDll:                                   ; DATA XREF: sub_384990+6B↑o
.rdata:00388620                 text "UTF-16LE", 'DLL',0
.rdata:00388628                 db    0
.rdata:00388629                 db    0
.rdata:0038862A                 db    0
.rdata:0038862B                 db    0
.rdata:0038862C ; const wchar_t aMspdb140_0
.rdata:0038862C aMspdb140_0:                            ; DATA XREF: sub_384990+51↑o
.rdata:0038862C                 text "UTF-16LE", 'MSPDB140',0
.rdata:0038863E                 db    0
.rdata:0038863F                 db    0
.rdata:00388640                 db    0
.rdata:00388641                 db    0
.rdata:00388642                 db    0
.rdata:00388643                 db    0
.rdata:00388644 aMspdb140:                              ; DATA XREF: sub_384500+C4↑o
.rdata:00388644                 text "UTF-16LE", 'MSPDB140',0
.rdata:00388656                 db    0
.rdata:00388657                 db    0
.rdata:00388658                 db    0
.rdata:00388659                 db    0
.rdata:0038865A                 db    0
.rdata:0038865B                 db    0
.rdata:0038865C ; const CHAR aPdbopenvalidat[]
.rdata:0038865C aPdbopenvalidat db 'PDBOpenValidate5',0 ; DATA XREF: sub_384AA0:loc_384B89↑o
.rdata:0038866D                 align 10h
.rdata:00388670 aR              db 'r',0                ; DATA XREF: sub_384AA0+161↑o
.rdata:00388672                 align 8
.rdata:00388678 __load_config_used dd 0C0h              ; Size
.rdata:0038867C                 dd 0                    ; Time stamp
.rdata:00388680                 dw 2 dup(0)             ; Version: 0.0
.rdata:00388684                 dd 0                    ; GlobalFlagsClear
.rdata:00388688                 dd 0                    ; GlobalFlagsSet
.rdata:0038868C                 dd 0                    ; CriticalSectionDefaultTimeout
.rdata:00388690                 dd 0                    ; DeCommitFreeBlockThreshold
.rdata:00388694                 dd 0                    ; DeCommitTotalFreeThreshold
.rdata:00388698                 dd 0                    ; LockPrefixTable
.rdata:0038869C                 dd 0                    ; MaximumAllocationSize
.rdata:003886A0                 dd 0                    ; VirtualMemoryThreshold
.rdata:003886A4                 dd 0                    ; ProcessAffinityMask
.rdata:003886A8                 dd 0                    ; ProcessHeapFlags
.rdata:003886AC                 dw 0                    ; CSDVersion
.rdata:003886AE                 dw 0                    ; Reserved1
.rdata:003886B0                 dd 0                    ; EditList
.rdata:003886B4                 dd offset ___security_cookie ; SecurityCookie
.rdata:003886B8                 dd 0                    ; SEHandlerTable
.rdata:003886BC                 dd 0                    ; SEHandlerCount
.rdata:003886C0                 dd offset ___guard_check_icall_fptr ; GuardCFCheckFunctionPointer
.rdata:003886C4                 dd 0                    ; GuardCFDispatchFunctionPointer
.rdata:003886C8                 dd 0                    ; GuardCFFunctionTable
.rdata:003886CC                 dd 0                    ; GuardCFFunctionCount
.rdata:003886D0                 dd 100h                 ; GuardFlags
.rdata:003886D4                 dw 0                    ; CodeIntegrity.Flags
.rdata:003886D6                 dw 0                    ; CodeIntegrity.Catalog
.rdata:003886D8                 dd 0                    ; CodeIntegrity.CatalogOffset
.rdata:003886DC                 dd 0                    ; CodeIntegrity.Reserved
.rdata:003886E0                 dd 0                    ; GuardAddressTakenIatEntryTable
.rdata:003886E4                 dd 0                    ; GuardAddressTakenIatEntryCount
.rdata:003886E8                 dd 0                    ; GuardLongJumpTargetTable
.rdata:003886EC                 dd 0                    ; GuardLongJumpTargetCount
.rdata:003886F0                 dd 0                    ; DynamicValueRelocTable
.rdata:003886F4                 dd 0                    ; CHPEMetadataPointer
.rdata:003886F8                 dd 0                    ; GuardRFFailureRoutine
.rdata:003886FC                 dd 0                    ; GuardRFFailureRoutineFunctionPointer
.rdata:00388700                 dd 0                    ; DynamicValueRelocTableOffset
.rdata:00388704                 dw 0                    ; DynamicValueRelocTableSection
.rdata:00388706                 dw 0                    ; Reserved2
.rdata:00388708                 dd 0                    ; GuardRFVerifyStackPointerFunctionPointer
.rdata:0038870C                 dd 0                    ; HotPatchTableOffset
.rdata:00388710                 dd 0                    ; Reserved3
.rdata:00388714                 dd 0                    ; EnclaveConfigurationPointer
.rdata:00388718                 dd 0                    ; VolatileMetadataPointer
.rdata:0038871C                 dd 0                    ; GuardEHContinuationTable
.rdata:00388720                 dd 0                    ; GuardEHContinuationCount
.rdata:00388724                 dd 0                    ; GuardXFGCheckFunctionPointer
.rdata:00388728                 dd 0                    ; GuardXFGDispatchFunctionPointer
.rdata:0038872C                 dd 0                    ; GuardXFGTableDispatchFunctionPointer
.rdata:00388730                 dd offset ___castguard_check_failure_os_handled_fptr ; CastGuardOsDeterminedFailureMode
.rdata:00388734                 db    0
.rdata:00388735                 db    0
.rdata:00388736                 db    0
.rdata:00388737                 db    0
.rdata:00388738                 db    0
.rdata:00388739                 db    0
.rdata:0038873A                 db    0
.rdata:0038873B                 db    0
.rdata:0038873C                 db    0
.rdata:0038873D                 db    0
.rdata:0038873E                 db    0
.rdata:0038873F                 db    0
.rdata:00388740                 db    0
.rdata:00388741                 db    0
.rdata:00388742                 db    0
.rdata:00388743                 db    0
.rdata:00388744                 db    0
.rdata:00388745                 db    0
.rdata:00388746                 db    0
.rdata:00388747                 db    0
.rdata:00388748                 db    0
.rdata:00388749                 db    0
.rdata:0038874A                 db    0
.rdata:0038874B                 db    0
.rdata:0038874C                 db    0
.rdata:0038874D                 db    0
.rdata:0038874E                 db    0
.rdata:0038874F                 db    0
.rdata:00388750                 db    0
.rdata:00388751                 db    0
.rdata:00388752                 db    0
.rdata:00388753                 db    0
.rdata:00388754                 db    0
.rdata:00388755                 db    0
.rdata:00388756                 db    0
.rdata:00388757                 db    0
.rdata:00388758                 db    0
.rdata:00388759                 db    0
.rdata:0038875A                 db    0
.rdata:0038875B                 db    0
.rdata:0038875C                 db    0
.rdata:0038875D                 db    0
.rdata:0038875E                 db    0
.rdata:0038875F                 db    0
.rdata:00388760 ; Debug Directory entries
.rdata:00388760                 dd 0                    ; Characteristics
.rdata:00388764                 dd 64008DDEh            ; TimeDateStamp: Thu Mar 02 11:51:58 2023
.rdata:00388768                 dw 0                    ; MajorVersion
.rdata:0038876A                 dw 0                    ; MinorVersion
.rdata:0038876C                 dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
.rdata:00388770                 dd 0A0h                 ; SizeOfData
.rdata:00388774                 dd rva asc_388BCC       ; AddressOfRawData
.rdata:00388778                 dd 7BCCh                ; PointerToRawData
.rdata:0038877C                 dd 0                    ; Characteristics
.rdata:00388780                 dd 64008DDEh            ; TimeDateStamp: Thu Mar 02 11:51:58 2023
.rdata:00388784                 dw 0                    ; MajorVersion
.rdata:00388786                 dw 0                    ; MinorVersion
.rdata:00388788                 dd 0Ch                  ; Type: IMAGE_DEBUG_TYPE_VC_FEATURE
.rdata:0038878C                 dd 14h                  ; SizeOfData
.rdata:00388790                 dd rva unk_388C6C       ; AddressOfRawData
.rdata:00388794                 dd 7C6Ch                ; PointerToRawData
.rdata:00388798                 db    0
.rdata:00388799                 db    0
.rdata:0038879A                 db    0
.rdata:0038879B                 db    0
.rdata:0038879C                 db    0
.rdata:0038879D                 db    0
.rdata:0038879E                 db    0
.rdata:0038879F                 db    0
.rdata:003887A0                 db    0
.rdata:003887A1                 db    0
.rdata:003887A2                 db    0
.rdata:003887A3                 db    0
.rdata:003887A4                 db    0
.rdata:003887A5                 db    0
.rdata:003887A6                 db    0
.rdata:003887A7                 db    0
.rdata:003887A8                 db    0
.rdata:003887A9                 db    0
.rdata:003887AA                 db    0
.rdata:003887AB                 db    0
.rdata:003887AC                 db    0
.rdata:003887AD                 db    0
.rdata:003887AE                 db    0
.rdata:003887AF                 db    0
.rdata:003887B0                 db    0
.rdata:003887B1                 db    0
.rdata:003887B2                 db    0
.rdata:003887B3                 db    0
.rdata:003887B4                 db    0
.rdata:003887B5                 db    0
.rdata:003887B6                 db    0
.rdata:003887B7                 db    0
.rdata:003887B8                 db    0
.rdata:003887B9                 db    0
.rdata:003887BA                 db    0
.rdata:003887BB                 db    0
.rdata:003887BC                 db    0
.rdata:003887BD                 db    0
.rdata:003887BE                 db    0
.rdata:003887BF                 db    0
.rdata:003887C0                 db    0
.rdata:003887C1                 db    0
.rdata:003887C2                 db    0
.rdata:003887C3                 db    0
.rdata:003887C4                 db    0
.rdata:003887C5                 db    0
.rdata:003887C6                 db    0
.rdata:003887C7                 db    0
.rdata:003887C8                 db    0
.rdata:003887C9                 db    0
.rdata:003887CA                 db    0
.rdata:003887CB                 db    0
.rdata:003887CC                 db    0
.rdata:003887CD                 db    0
.rdata:003887CE                 db    0
.rdata:003887CF                 db    0
.rdata:003887D0                 db    0
.rdata:003887D1                 db    0
.rdata:003887D2                 db    0
.rdata:003887D3                 db    0
.rdata:003887D4                 db    0
.rdata:003887D5                 db    0
.rdata:003887D6                 db    0
.rdata:003887D7                 db    0
.rdata:003887D8                 db    0
.rdata:003887D9                 db    0
.rdata:003887DA                 db    0
.rdata:003887DB                 db    0
.rdata:003887DC                 db    0
.rdata:003887DD                 db    0
.rdata:003887DE                 db    0
.rdata:003887DF                 db    0
.rdata:003887E0                 db    0
.rdata:003887E1                 db    0
.rdata:003887E2                 db    0
.rdata:003887E3                 db    0
.rdata:003887E4                 db    0
.rdata:003887E5                 db    0
.rdata:003887E6                 db    0
.rdata:003887E7                 db    0
.rdata:003887E8                 db    0
.rdata:003887E9                 db    0
.rdata:003887EA                 db    0
.rdata:003887EB                 db    0
.rdata:003887EC                 db    0
.rdata:003887ED                 db    0
.rdata:003887EE                 db    0
.rdata:003887EF                 db    0
.rdata:003887F0                 db    0
.rdata:003887F1                 db    0
.rdata:003887F2                 db    0
.rdata:003887F3                 db    0
.rdata:003887F4                 db    0
.rdata:003887F5                 db    0
.rdata:003887F6                 db    0
.rdata:003887F7                 db    0
.rdata:003887F8                 db    0
.rdata:003887F9                 db    0
.rdata:003887FA                 db    0
.rdata:003887FB                 db    0
.rdata:003887FC                 db    0
.rdata:003887FD                 db    0
.rdata:003887FE                 db    0
.rdata:003887FF                 db    0
.rdata:00388800                 db    0
.rdata:00388801                 db    0
.rdata:00388802                 db    0
.rdata:00388803                 db    0
.rdata:00388804                 db    0
.rdata:00388805                 db    0
.rdata:00388806                 db    0
.rdata:00388807                 db    0
.rdata:00388808                 db    0
.rdata:00388809                 db    0
.rdata:0038880A                 db    0
.rdata:0038880B                 db    0
.rdata:0038880C                 db    0
.rdata:0038880D                 db    0
.rdata:0038880E                 db    0
.rdata:0038880F                 db    0
.rdata:00388810                 db    0
.rdata:00388811                 db    0
.rdata:00388812                 db    0
.rdata:00388813                 db    0
.rdata:00388814                 db    0
.rdata:00388815                 db    0
.rdata:00388816                 db    0
.rdata:00388817                 db    0
.rdata:00388818                 db    0
.rdata:00388819                 db    0
.rdata:0038881A                 db    0
.rdata:0038881B                 db    0
.rdata:0038881C                 db    0
.rdata:0038881D                 db    0
.rdata:0038881E                 db    0
.rdata:0038881F                 db    0
.rdata:00388820                 db    0
.rdata:00388821                 db    0
.rdata:00388822                 db    0
.rdata:00388823                 db    0
.rdata:00388824                 db    0
.rdata:00388825                 db    0
.rdata:00388826                 db    0
.rdata:00388827                 db    0
.rdata:00388828                 db    0
.rdata:00388829                 db    0
.rdata:0038882A                 db    0
.rdata:0038882B                 db    0
.rdata:0038882C                 db    0
.rdata:0038882D                 db    0
.rdata:0038882E                 db    0
.rdata:0038882F                 db    0
.rdata:00388830                 db    0
.rdata:00388831                 db    0
.rdata:00388832                 db    0
.rdata:00388833                 db    0
.rdata:00388834                 db    0
.rdata:00388835                 db    0
.rdata:00388836                 db    0
.rdata:00388837                 db    0
.rdata:00388838                 db    0
.rdata:00388839                 db    0
.rdata:0038883A                 db    0
.rdata:0038883B                 db    0
.rdata:0038883C                 db    0
.rdata:0038883D                 db    0
.rdata:0038883E                 db    0
.rdata:0038883F                 db    0
.rdata:00388840                 db    0
.rdata:00388841                 db    0
.rdata:00388842                 db    0
.rdata:00388843                 db    0
.rdata:00388844                 db    0
.rdata:00388845                 db    0
.rdata:00388846                 db    0
.rdata:00388847                 db    0
.rdata:00388848                 db    0
.rdata:00388849                 db    0
.rdata:0038884A                 db    0
.rdata:0038884B                 db    0
.rdata:0038884C                 db    0
.rdata:0038884D                 db    0
.rdata:0038884E                 db    0
.rdata:0038884F                 db    0
.rdata:00388850                 db    0
.rdata:00388851                 db    0
.rdata:00388852                 db    0
.rdata:00388853                 db    0
.rdata:00388854                 db    0
.rdata:00388855                 db    0
.rdata:00388856                 db    0
.rdata:00388857                 db    0
.rdata:00388858                 db    0
.rdata:00388859                 db    0
.rdata:0038885A                 db    0
.rdata:0038885B                 db    0
.rdata:0038885C                 db    0
.rdata:0038885D                 db    0
.rdata:0038885E                 db    0
.rdata:0038885F                 db    0
.rdata:00388860                 db    0
.rdata:00388861                 db    0
.rdata:00388862                 db    0
.rdata:00388863                 db    0
.rdata:00388864                 db    0
.rdata:00388865                 db    0
.rdata:00388866                 db    0
.rdata:00388867                 db    0
.rdata:00388868                 db    0
.rdata:00388869                 db    0
.rdata:0038886A                 db    0
.rdata:0038886B                 db    0
.rdata:0038886C                 db    0
.rdata:0038886D                 db    0
.rdata:0038886E                 db    0
.rdata:0038886F                 db    0
.rdata:00388870                 db    0
.rdata:00388871                 db    0
.rdata:00388872                 db    0
.rdata:00388873                 db    0
.rdata:00388874                 db    0
.rdata:00388875                 db    0
.rdata:00388876                 db    0
.rdata:00388877                 db    0
.rdata:00388878                 db    0
.rdata:00388879                 db    0
.rdata:0038887A                 db    0
.rdata:0038887B                 db    0
.rdata:0038887C                 db    0
.rdata:0038887D                 db    0
.rdata:0038887E                 db    0
.rdata:0038887F                 db    0
.rdata:00388880                 db    0
.rdata:00388881                 db    0
.rdata:00388882                 db    0
.rdata:00388883                 db    0
.rdata:00388884                 db    0
.rdata:00388885                 db    0
.rdata:00388886                 db    0
.rdata:00388887                 db    0
.rdata:00388888                 db    0
.rdata:00388889                 db    0
.rdata:0038888A                 db    0
.rdata:0038888B                 db    0
.rdata:0038888C                 db    0
.rdata:0038888D                 db    0
.rdata:0038888E                 db    0
.rdata:0038888F                 db    0
.rdata:00388890                 db    0
.rdata:00388891                 db    0
.rdata:00388892                 db    0
.rdata:00388893                 db    0
.rdata:00388894                 db    0
.rdata:00388895                 db    0
.rdata:00388896                 db    0
.rdata:00388897                 db    0
.rdata:00388898                 db    0
.rdata:00388899                 db    0
.rdata:0038889A                 db    0
.rdata:0038889B                 db    0
.rdata:0038889C                 db    0
.rdata:0038889D                 db    0
.rdata:0038889E                 db    0
.rdata:0038889F                 db    0
.rdata:003888A0                 db    0
.rdata:003888A1                 db    0
.rdata:003888A2                 db    0
.rdata:003888A3                 db    0
.rdata:003888A4                 db    0
.rdata:003888A5                 db    0
.rdata:003888A6                 db    0
.rdata:003888A7                 db    0
.rdata:003888A8                 db    0
.rdata:003888A9                 db    0
.rdata:003888AA                 db    0
.rdata:003888AB                 db    0
.rdata:003888AC                 db    0
.rdata:003888AD                 db    0
.rdata:003888AE                 db    0
.rdata:003888AF                 db    0
.rdata:003888B0                 db    0
.rdata:003888B1                 db    0
.rdata:003888B2                 db    0
.rdata:003888B3                 db    0
.rdata:003888B4                 db    0
.rdata:003888B5                 db    0
.rdata:003888B6                 db    0
.rdata:003888B7                 db    0
.rdata:003888B8                 db    0
.rdata:003888B9                 db    0
.rdata:003888BA                 db    0
.rdata:003888BB                 db    0
.rdata:003888BC                 db    0
.rdata:003888BD                 db    0
.rdata:003888BE                 db    0
.rdata:003888BF                 db    0
.rdata:003888C0                 db    0
.rdata:003888C1                 db    0
.rdata:003888C2                 db    0
.rdata:003888C3                 db    0
.rdata:003888C4                 db    0
.rdata:003888C5                 db    0
.rdata:003888C6                 db    0
.rdata:003888C7                 db    0
.rdata:003888C8                 db    0
.rdata:003888C9                 db    0
.rdata:003888CA                 db    0
.rdata:003888CB                 db    0
.rdata:003888CC                 db    0
.rdata:003888CD                 db    0
.rdata:003888CE                 db    0
.rdata:003888CF                 db    0
.rdata:003888D0                 db    0
.rdata:003888D1                 db    0
.rdata:003888D2                 db    0
.rdata:003888D3                 db    0
.rdata:003888D4                 db    0
.rdata:003888D5                 db    0
.rdata:003888D6                 db    0
.rdata:003888D7                 db    0
.rdata:003888D8                 db    0
.rdata:003888D9                 db    0
.rdata:003888DA                 db    0
.rdata:003888DB                 db    0
.rdata:003888DC                 db    0
.rdata:003888DD                 db    0
.rdata:003888DE                 db    0
.rdata:003888DF                 db    0
.rdata:003888E0                 db    0
.rdata:003888E1                 db    0
.rdata:003888E2                 db    0
.rdata:003888E3                 db    0
.rdata:003888E4                 db    0
.rdata:003888E5                 db    0
.rdata:003888E6                 db    0
.rdata:003888E7                 db    0
.rdata:003888E8                 db    0
.rdata:003888E9                 db    0
.rdata:003888EA                 db    0
.rdata:003888EB                 db    0
.rdata:003888EC                 db    0
.rdata:003888ED                 db    0
.rdata:003888EE                 db    0
.rdata:003888EF                 db    0
.rdata:003888F0                 db    0
.rdata:003888F1                 db    0
.rdata:003888F2                 db    0
.rdata:003888F3                 db    0
.rdata:003888F4                 db    0
.rdata:003888F5                 db    0
.rdata:003888F6                 db    0
.rdata:003888F7                 db    0
.rdata:003888F8                 db    0
.rdata:003888F9                 db    0
.rdata:003888FA                 db    0
.rdata:003888FB                 db    0
.rdata:003888FC                 db    0
.rdata:003888FD                 db    0
.rdata:003888FE                 db    0
.rdata:003888FF                 db    0
.rdata:00388900                 db    0
.rdata:00388901                 db    0
.rdata:00388902                 db    0
.rdata:00388903                 db    0
.rdata:00388904                 db    0
.rdata:00388905                 db    0
.rdata:00388906                 db    0
.rdata:00388907                 db    0
.rdata:00388908                 db    0
.rdata:00388909                 db    0
.rdata:0038890A                 db    0
.rdata:0038890B                 db    0
.rdata:0038890C                 db    0
.rdata:0038890D                 db    0
.rdata:0038890E                 db    0
.rdata:0038890F                 db    0
.rdata:00388910                 db    0
.rdata:00388911                 db    0
.rdata:00388912                 db    0
.rdata:00388913                 db    0
.rdata:00388914                 db    0
.rdata:00388915                 db    0
.rdata:00388916                 db    0
.rdata:00388917                 db    0
.rdata:00388918                 db    0
.rdata:00388919                 db    0
.rdata:0038891A                 db    0
.rdata:0038891B                 db    0
.rdata:0038891C                 db    0
.rdata:0038891D                 db    0
.rdata:0038891E                 db    0
.rdata:0038891F                 db    0
.rdata:00388920                 db    0
.rdata:00388921                 db    0
.rdata:00388922                 db    0
.rdata:00388923                 db    0
.rdata:00388924                 db    0
.rdata:00388925                 db    0
.rdata:00388926                 db    0
.rdata:00388927                 db    0
.rdata:00388928                 db    0
.rdata:00388929                 db    0
.rdata:0038892A                 db    0
.rdata:0038892B                 db    0
.rdata:0038892C                 db    0
.rdata:0038892D                 db    0
.rdata:0038892E                 db    0
.rdata:0038892F                 db    0
.rdata:00388930                 db    0
.rdata:00388931                 db    0
.rdata:00388932                 db    0
.rdata:00388933                 db    0
.rdata:00388934                 db    0
.rdata:00388935                 db    0
.rdata:00388936                 db    0
.rdata:00388937                 db    0
.rdata:00388938                 db    0
.rdata:00388939                 db    0
.rdata:0038893A                 db    0
.rdata:0038893B                 db    0
.rdata:0038893C                 db    0
.rdata:0038893D                 db    0
.rdata:0038893E                 db    0
.rdata:0038893F                 db    0
.rdata:00388940 unk_388940      db    0                 ; DATA XREF: sub_384330+6↑o
.rdata:00388940                                         ; sub_384470+6↑o
.rdata:00388941                 db    0
.rdata:00388942                 db    0
.rdata:00388943                 db    0
.rdata:00388944                 db    0
.rdata:00388945                 db    0
.rdata:00388946                 db    0
.rdata:00388947                 db    0
.rdata:00388948                 db    0
.rdata:00388949                 db    0
.rdata:0038894A                 db    0
.rdata:0038894B                 db    0
.rdata:0038894C                 db    0
.rdata:0038894D                 db    0
.rdata:0038894E                 db    0
.rdata:0038894F                 db    0
.rdata:00388950                 db    0
.rdata:00388951                 db    0
.rdata:00388952                 db    0
.rdata:00388953                 db    0
.rdata:00388954                 db    0
.rdata:00388955                 db    0
.rdata:00388956                 db    0
.rdata:00388957                 db    0
.rdata:00388958                 db    0
.rdata:00388959                 db    0
.rdata:0038895A                 db    0
.rdata:0038895B                 db    0
.rdata:0038895C                 db    0
.rdata:0038895D                 db    0
.rdata:0038895E                 db    0
.rdata:0038895F                 db    0
.rdata:00388960                 db    0
.rdata:00388961                 db    0
.rdata:00388962                 db    0
.rdata:00388963                 db    0
.rdata:00388964                 db    0
.rdata:00388965                 db    0
.rdata:00388966                 db    0
.rdata:00388967                 db    0
.rdata:00388968                 db    0
.rdata:00388969                 db    0
.rdata:0038896A                 db    0
.rdata:0038896B                 db    0
.rdata:0038896C                 db    0
.rdata:0038896D                 db    0
.rdata:0038896E                 db    0
.rdata:0038896F                 db    0
.rdata:00388970                 db    0
.rdata:00388971                 db    0
.rdata:00388972                 db    0
.rdata:00388973                 db    0
.rdata:00388974                 db    0
.rdata:00388975                 db    0
.rdata:00388976                 db    0
.rdata:00388977                 db    0
.rdata:00388978                 db    0
.rdata:00388979                 db    0
.rdata:0038897A                 db    0
.rdata:0038897B                 db    0
.rdata:0038897C                 db    0
.rdata:0038897D                 db    0
.rdata:0038897E                 db    0
.rdata:0038897F                 db    0
.rdata:00388980                 db    0
.rdata:00388981                 db    0
.rdata:00388982                 db    0
.rdata:00388983                 db    0
.rdata:00388984                 db    0
.rdata:00388985                 db    0
.rdata:00388986                 db    0
.rdata:00388987                 db    0
.rdata:00388988                 db    0
.rdata:00388989                 db    0
.rdata:0038898A                 db    0
.rdata:0038898B                 db    0
.rdata:0038898C                 db    0
.rdata:0038898D                 db    0
.rdata:0038898E                 db    0
.rdata:0038898F                 db    0
.rdata:00388990                 db    0
.rdata:00388991                 db    0
.rdata:00388992                 db    0
.rdata:00388993                 db    0
.rdata:00388994                 db    0
.rdata:00388995                 db    0
.rdata:00388996                 db    0
.rdata:00388997                 db    0
.rdata:00388998                 db    0
.rdata:00388999                 db    0
.rdata:0038899A                 db    0
.rdata:0038899B                 db    0
.rdata:0038899C                 db    0
.rdata:0038899D                 db    0
.rdata:0038899E                 db    0
.rdata:0038899F                 db    0
.rdata:003889A0                 db    0
.rdata:003889A1                 db    0
.rdata:003889A2                 db    0
.rdata:003889A3                 db    0
.rdata:003889A4                 db    0
.rdata:003889A5                 db    0
.rdata:003889A6                 db    0
.rdata:003889A7                 db    0
.rdata:003889A8                 db    0
.rdata:003889A9                 db    0
.rdata:003889AA                 db    0
.rdata:003889AB                 db    0
.rdata:003889AC                 db    0
.rdata:003889AD                 db    0
.rdata:003889AE                 db    0
.rdata:003889AF                 db    0
.rdata:003889B0                 db    0
.rdata:003889B1                 db    0
.rdata:003889B2                 db    0
.rdata:003889B3                 db    0
.rdata:003889B4                 db    0
.rdata:003889B5                 db    0
.rdata:003889B6                 db    0
.rdata:003889B7                 db    0
.rdata:003889B8                 db    0
.rdata:003889B9                 db    0
.rdata:003889BA                 db    0
.rdata:003889BB                 db    0
.rdata:003889BC                 db    0
.rdata:003889BD                 db    0
.rdata:003889BE                 db    0
.rdata:003889BF                 db    0
.rdata:003889C0                 db    0
.rdata:003889C1                 db    0
.rdata:003889C2                 db    0
.rdata:003889C3                 db    0
.rdata:003889C4                 db    0
.rdata:003889C5                 db    0
.rdata:003889C6                 db    0
.rdata:003889C7                 db    0
.rdata:003889C8                 db    0
.rdata:003889C9                 db    0
.rdata:003889CA                 db    0
.rdata:003889CB                 db    0
.rdata:003889CC                 db    0
.rdata:003889CD                 db    0
.rdata:003889CE                 db    0
.rdata:003889CF                 db    0
.rdata:003889D0                 db    0
.rdata:003889D1                 db    0
.rdata:003889D2                 db    0
.rdata:003889D3                 db    0
.rdata:003889D4                 db    0
.rdata:003889D5                 db    0
.rdata:003889D6                 db    0
.rdata:003889D7                 db    0
.rdata:003889D8                 db    0
.rdata:003889D9                 db    0
.rdata:003889DA                 db    0
.rdata:003889DB                 db    0
.rdata:003889DC                 db    0
.rdata:003889DD                 db    0
.rdata:003889DE                 db    0
.rdata:003889DF                 db    0
.rdata:003889E0                 db    0
.rdata:003889E1                 db    0
.rdata:003889E2                 db    0
.rdata:003889E3                 db    0
.rdata:003889E4                 db    0
.rdata:003889E5                 db    0
.rdata:003889E6                 db    0
.rdata:003889E7                 db    0
.rdata:003889E8                 db    0
.rdata:003889E9                 db    0
.rdata:003889EA                 db    0
.rdata:003889EB                 db    0
.rdata:003889EC                 db    0
.rdata:003889ED                 db    0
.rdata:003889EE                 db    0
.rdata:003889EF                 db    0
.rdata:003889F0                 db    0
.rdata:003889F1                 db    0
.rdata:003889F2                 db    0
.rdata:003889F3                 db    0
.rdata:003889F4                 db    0
.rdata:003889F5                 db    0
.rdata:003889F6                 db    0
.rdata:003889F7                 db    0
.rdata:003889F8                 db    0
.rdata:003889F9                 db    0
.rdata:003889FA                 db    0
.rdata:003889FB                 db    0
.rdata:003889FC                 db    0
.rdata:003889FD                 db    0
.rdata:003889FE                 db    0
.rdata:003889FF                 db    0
.rdata:00388A00                 db    0
.rdata:00388A01                 db    0
.rdata:00388A02                 db    0
.rdata:00388A03                 db    0
.rdata:00388A04                 db    0
.rdata:00388A05                 db    0
.rdata:00388A06                 db    0
.rdata:00388A07                 db    0
.rdata:00388A08                 db    0
.rdata:00388A09                 db    0
.rdata:00388A0A                 db    0
.rdata:00388A0B                 db    0
.rdata:00388A0C                 db    0
.rdata:00388A0D                 db    0
.rdata:00388A0E                 db    0
.rdata:00388A0F                 db    0
.rdata:00388A10                 db    0
.rdata:00388A11                 db    0
.rdata:00388A12                 db    0
.rdata:00388A13                 db    0
.rdata:00388A14                 db    0
.rdata:00388A15                 db    0
.rdata:00388A16                 db    0
.rdata:00388A17                 db    0
.rdata:00388A18                 db    0
.rdata:00388A19                 db    0
.rdata:00388A1A                 db    0
.rdata:00388A1B                 db    0
.rdata:00388A1C                 db    0
.rdata:00388A1D                 db    0
.rdata:00388A1E                 db    0
.rdata:00388A1F                 db    0
.rdata:00388A20                 db    0
.rdata:00388A21                 db    0
.rdata:00388A22                 db    0
.rdata:00388A23                 db    0
.rdata:00388A24                 db    0
.rdata:00388A25                 db    0
.rdata:00388A26                 db    0
.rdata:00388A27                 db    0
.rdata:00388A28                 db    0
.rdata:00388A29                 db    0
.rdata:00388A2A                 db    0
.rdata:00388A2B                 db    0
.rdata:00388A2C                 db    0
.rdata:00388A2D                 db    0
.rdata:00388A2E                 db    0
.rdata:00388A2F                 db    0
.rdata:00388A30                 db    0
.rdata:00388A31                 db    0
.rdata:00388A32                 db    0
.rdata:00388A33                 db    0
.rdata:00388A34                 db    0
.rdata:00388A35                 db    0
.rdata:00388A36                 db    0
.rdata:00388A37                 db    0
.rdata:00388A38                 db    0
.rdata:00388A39                 db    0
.rdata:00388A3A                 db    0
.rdata:00388A3B                 db    0
.rdata:00388A3C                 db    0
.rdata:00388A3D                 db    0
.rdata:00388A3E                 db    0
.rdata:00388A3F                 db    0
.rdata:00388A40                 db    0
.rdata:00388A41                 db    0
.rdata:00388A42                 db    0
.rdata:00388A43                 db    0
.rdata:00388A44                 db    0
.rdata:00388A45                 db    0
.rdata:00388A46                 db    0
.rdata:00388A47                 db    0
.rdata:00388A48                 db    0
.rdata:00388A49                 db    0
.rdata:00388A4A                 db    0
.rdata:00388A4B                 db    0
.rdata:00388A4C                 db    0
.rdata:00388A4D                 db    0
.rdata:00388A4E                 db    0
.rdata:00388A4F                 db    0
.rdata:00388A50                 db    0
.rdata:00388A51                 db    0
.rdata:00388A52                 db    0
.rdata:00388A53                 db    0
.rdata:00388A54                 db    0
.rdata:00388A55                 db    0
.rdata:00388A56                 db    0
.rdata:00388A57                 db    0
.rdata:00388A58                 db    0
.rdata:00388A59                 db    0
.rdata:00388A5A                 db    0
.rdata:00388A5B                 db    0
.rdata:00388A5C                 db    0
.rdata:00388A5D                 db    0
.rdata:00388A5E                 db    0
.rdata:00388A5F                 db    0
.rdata:00388A60                 db    0
.rdata:00388A61                 db    0
.rdata:00388A62                 db    0
.rdata:00388A63                 db    0
.rdata:00388A64                 db    0
.rdata:00388A65                 db    0
.rdata:00388A66                 db    0
.rdata:00388A67                 db    0
.rdata:00388A68                 db    0
.rdata:00388A69                 db    0
.rdata:00388A6A                 db    0
.rdata:00388A6B                 db    0
.rdata:00388A6C                 db    0
.rdata:00388A6D                 db    0
.rdata:00388A6E                 db    0
.rdata:00388A6F                 db    0
.rdata:00388A70                 db    0
.rdata:00388A71                 db    0
.rdata:00388A72                 db    0
.rdata:00388A73                 db    0
.rdata:00388A74                 db    0
.rdata:00388A75                 db    0
.rdata:00388A76                 db    0
.rdata:00388A77                 db    0
.rdata:00388A78                 db    0
.rdata:00388A79                 db    0
.rdata:00388A7A                 db    0
.rdata:00388A7B                 db    0
.rdata:00388A7C                 db    0
.rdata:00388A7D                 db    0
.rdata:00388A7E                 db    0
.rdata:00388A7F                 db    0
.rdata:00388A80 unk_388A80      db    0                 ; DATA XREF: sub_384330+D↑o
.rdata:00388A81                 db    0
.rdata:00388A82                 db    0
.rdata:00388A83                 db    0
.rdata:00388A84                 db    0
.rdata:00388A85                 db    0
.rdata:00388A86                 db    0
.rdata:00388A87                 db    0
.rdata:00388A88                 db    0
.rdata:00388A89                 db    0
.rdata:00388A8A                 db    0
.rdata:00388A8B                 db    0
.rdata:00388A8C                 db    0
.rdata:00388A8D                 db    0
.rdata:00388A8E                 db    0
.rdata:00388A8F                 db    0
.rdata:00388A90                 db    0
.rdata:00388A91                 db    0
.rdata:00388A92                 db    0
.rdata:00388A93                 db    0
.rdata:00388A94                 db    0
.rdata:00388A95                 db    0
.rdata:00388A96                 db    0
.rdata:00388A97                 db    0
.rdata:00388A98                 db    0
.rdata:00388A99                 db    0
.rdata:00388A9A                 db    0
.rdata:00388A9B                 db    0
.rdata:00388A9C                 db    0
.rdata:00388A9D                 db    0
.rdata:00388A9E                 db    0
.rdata:00388A9F                 db    0
.rdata:00388AA0                 db    0
.rdata:00388AA1                 db    0
.rdata:00388AA2                 db    0
.rdata:00388AA3                 db    0
.rdata:00388AA4                 db    0
.rdata:00388AA5                 db    0
.rdata:00388AA6                 db    0
.rdata:00388AA7                 db    0
.rdata:00388AA8                 db    0
.rdata:00388AA9                 db    0
.rdata:00388AAA                 db    0
.rdata:00388AAB                 db    0
.rdata:00388AAC                 db    0
.rdata:00388AAD                 db    0
.rdata:00388AAE                 db    0
.rdata:00388AAF                 db    0
.rdata:00388AB0                 db    0
.rdata:00388AB1                 db    0
.rdata:00388AB2                 db    0
.rdata:00388AB3                 db    0
.rdata:00388AB4                 db    0
.rdata:00388AB5                 db    0
.rdata:00388AB6                 db    0
.rdata:00388AB7                 db    0
.rdata:00388AB8                 db    0
.rdata:00388AB9                 db    0
.rdata:00388ABA                 db    0
.rdata:00388ABB                 db    0
.rdata:00388ABC                 db    0
.rdata:00388ABD                 db    0
.rdata:00388ABE                 db    0
.rdata:00388ABF                 db    0
.rdata:00388AC0                 db    0
.rdata:00388AC1                 db    0
.rdata:00388AC2                 db    0
.rdata:00388AC3                 db    0
.rdata:00388AC4                 db    0
.rdata:00388AC5                 db    0
.rdata:00388AC6                 db    0
.rdata:00388AC7                 db    0
.rdata:00388AC8                 db    0
.rdata:00388AC9                 db    0
.rdata:00388ACA                 db    0
.rdata:00388ACB                 db    0
.rdata:00388ACC                 db    0
.rdata:00388ACD                 db    0
.rdata:00388ACE                 db    0
.rdata:00388ACF                 db    0
.rdata:00388AD0                 db    0
.rdata:00388AD1                 db    0
.rdata:00388AD2                 db    0
.rdata:00388AD3                 db    0
.rdata:00388AD4                 db    0
.rdata:00388AD5                 db    0
.rdata:00388AD6                 db    0
.rdata:00388AD7                 db    0
.rdata:00388AD8                 db    0
.rdata:00388AD9                 db    0
.rdata:00388ADA                 db    0
.rdata:00388ADB                 db    0
.rdata:00388ADC                 db    0
.rdata:00388ADD                 db    0
.rdata:00388ADE                 db    0
.rdata:00388ADF                 db    0
.rdata:00388AE0                 db    0
.rdata:00388AE1                 db    0
.rdata:00388AE2                 db    0
.rdata:00388AE3                 db    0
.rdata:00388AE4                 db    0
.rdata:00388AE5                 db    0
.rdata:00388AE6                 db    0
.rdata:00388AE7                 db    0
.rdata:00388AE8                 db    0
.rdata:00388AE9                 db    0
.rdata:00388AEA                 db    0
.rdata:00388AEB                 db    0
.rdata:00388AEC                 db    0
.rdata:00388AED                 db    0
.rdata:00388AEE                 db    0
.rdata:00388AEF                 db    0
.rdata:00388AF0                 db    0
.rdata:00388AF1                 db    0
.rdata:00388AF2                 db    0
.rdata:00388AF3                 db    0
.rdata:00388AF4                 db    0
.rdata:00388AF5                 db    0
.rdata:00388AF6                 db    0
.rdata:00388AF7                 db    0
.rdata:00388AF8                 db    0
.rdata:00388AF9                 db    0
.rdata:00388AFA                 db    0
.rdata:00388AFB                 db    0
.rdata:00388AFC                 db    0
.rdata:00388AFD                 db    0
.rdata:00388AFE                 db    0
.rdata:00388AFF                 db    0
.rdata:00388B00                 db    0
.rdata:00388B01                 db    0
.rdata:00388B02                 db    0
.rdata:00388B03                 db    0
.rdata:00388B04                 db    0
.rdata:00388B05                 db    0
.rdata:00388B06                 db    0
.rdata:00388B07                 db    0
.rdata:00388B08                 db    0
.rdata:00388B09                 db    0
.rdata:00388B0A                 db    0
.rdata:00388B0B                 db    0
.rdata:00388B0C                 db    0
.rdata:00388B0D                 db    0
.rdata:00388B0E                 db    0
.rdata:00388B0F                 db    0
.rdata:00388B10                 db    0
.rdata:00388B11                 db    0
.rdata:00388B12                 db    0
.rdata:00388B13                 db    0
.rdata:00388B14                 db    0
.rdata:00388B15                 db    0
.rdata:00388B16                 db    0
.rdata:00388B17                 db    0
.rdata:00388B18                 db    0
.rdata:00388B19                 db    0
.rdata:00388B1A                 db    0
.rdata:00388B1B                 db    0
.rdata:00388B1C                 db    0
.rdata:00388B1D                 db    0
.rdata:00388B1E                 db    0
.rdata:00388B1F                 db    0
.rdata:00388B20                 db    0
.rdata:00388B21                 db    0
.rdata:00388B22                 db    0
.rdata:00388B23                 db    0
.rdata:00388B24                 db    0
.rdata:00388B25                 db    0
.rdata:00388B26                 db    0
.rdata:00388B27                 db    0
.rdata:00388B28                 db    0
.rdata:00388B29                 db    0
.rdata:00388B2A                 db    0
.rdata:00388B2B                 db    0
.rdata:00388B2C                 db    0
.rdata:00388B2D                 db    0
.rdata:00388B2E                 db    0
.rdata:00388B2F                 db    0
.rdata:00388B30                 db    0
.rdata:00388B31                 db    0
.rdata:00388B32                 db    0
.rdata:00388B33                 db    0
.rdata:00388B34                 db    0
.rdata:00388B35                 db    0
.rdata:00388B36                 db    0
.rdata:00388B37                 db    0
.rdata:00388B38                 db    0
.rdata:00388B39                 db    0
.rdata:00388B3A                 db    0
.rdata:00388B3B                 db    0
.rdata:00388B3C                 db    0
.rdata:00388B3D                 db    0
.rdata:00388B3E                 db    0
.rdata:00388B3F                 db    0
.rdata:00388B40                 db    0
.rdata:00388B41                 db    0
.rdata:00388B42                 db    0
.rdata:00388B43                 db    0
.rdata:00388B44                 db    0
.rdata:00388B45                 db    0
.rdata:00388B46                 db    0
.rdata:00388B47                 db    0
.rdata:00388B48                 db    0
.rdata:00388B49                 db    0
.rdata:00388B4A                 db    0
.rdata:00388B4B                 db    0
.rdata:00388B4C                 db    0
.rdata:00388B4D                 db    0
.rdata:00388B4E                 db    0
.rdata:00388B4F                 db    0
.rdata:00388B50                 db    0
.rdata:00388B51                 db    0
.rdata:00388B52                 db    0
.rdata:00388B53                 db    0
.rdata:00388B54                 db    0
.rdata:00388B55                 db    0
.rdata:00388B56                 db    0
.rdata:00388B57                 db    0
.rdata:00388B58                 db    0
.rdata:00388B59                 db    0
.rdata:00388B5A                 db    0
.rdata:00388B5B                 db    0
.rdata:00388B5C                 db    0
.rdata:00388B5D                 db    0
.rdata:00388B5E                 db    0
.rdata:00388B5F                 db    0
.rdata:00388B60                 db    0
.rdata:00388B61                 db    0
.rdata:00388B62                 db    0
.rdata:00388B63                 db    0
.rdata:00388B64                 db    0
.rdata:00388B65                 db    0
.rdata:00388B66                 db    0
.rdata:00388B67                 db    0
.rdata:00388B68                 db    0
.rdata:00388B69                 db    0
.rdata:00388B6A                 db    0
.rdata:00388B6B                 db    0
.rdata:00388B6C                 db    0
.rdata:00388B6D                 db    0
.rdata:00388B6E                 db    0
.rdata:00388B6F                 db    0
.rdata:00388B70                 db    0
.rdata:00388B71                 db    0
.rdata:00388B72                 db    0
.rdata:00388B73                 db    0
.rdata:00388B74                 db    0
.rdata:00388B75                 db    0
.rdata:00388B76                 db    0
.rdata:00388B77                 db    0
.rdata:00388B78                 db    0
.rdata:00388B79                 db    0
.rdata:00388B7A                 db    0
.rdata:00388B7B                 db    0
.rdata:00388B7C                 db    0
.rdata:00388B7D                 db    0
.rdata:00388B7E                 db    0
.rdata:00388B7F                 db    0
.rdata:00388B80                 db    0
.rdata:00388B81                 db    0
.rdata:00388B82                 db    0
.rdata:00388B83                 db    0
.rdata:00388B84                 db    0
.rdata:00388B85                 db    0
.rdata:00388B86                 db    0
.rdata:00388B87                 db    0
.rdata:00388B88                 db    0
.rdata:00388B89                 db    0
.rdata:00388B8A                 db    0
.rdata:00388B8B                 db    0
.rdata:00388B8C                 db    0
.rdata:00388B8D                 db    0
.rdata:00388B8E                 db    0
.rdata:00388B8F                 db    0
.rdata:00388B90                 db    0
.rdata:00388B91                 db    0
.rdata:00388B92                 db    0
.rdata:00388B93                 db    0
.rdata:00388B94                 db    0
.rdata:00388B95                 db    0
.rdata:00388B96                 db    0
.rdata:00388B97                 db    0
.rdata:00388B98                 db    0
.rdata:00388B99                 db    0
.rdata:00388B9A                 db    0
.rdata:00388B9B                 db    0
.rdata:00388B9C                 db    0
.rdata:00388B9D                 db    0
.rdata:00388B9E                 db    0
.rdata:00388B9F                 db    0
.rdata:00388BA0                 db    0
.rdata:00388BA1                 db    0
.rdata:00388BA2                 db    0
.rdata:00388BA3                 db    0
.rdata:00388BA4                 db    0
.rdata:00388BA5                 db    0
.rdata:00388BA6                 db    0
.rdata:00388BA7                 db    0
.rdata:00388BA8                 db    0
.rdata:00388BA9                 db    0
.rdata:00388BAA                 db    0
.rdata:00388BAB                 db    0
.rdata:00388BAC                 db    0
.rdata:00388BAD                 db    0
.rdata:00388BAE                 db    0
.rdata:00388BAF                 db    0
.rdata:00388BB0                 db    0
.rdata:00388BB1                 db    0
.rdata:00388BB2                 db    0
.rdata:00388BB3                 db    0
.rdata:00388BB4                 db    0
.rdata:00388BB5                 db    0
.rdata:00388BB6                 db    0
.rdata:00388BB7                 db    0
.rdata:00388BB8                 db    0
.rdata:00388BB9                 db    0
.rdata:00388BBA                 db    0
.rdata:00388BBB                 db    0
.rdata:00388BBC                 db    0
.rdata:00388BBD                 db    0
.rdata:00388BBE                 db    0
.rdata:00388BBF                 db    0
.rdata:00388BC0                 db    0
.rdata:00388BC1                 db    0
.rdata:00388BC2                 db    0
.rdata:00388BC3                 db    0
.rdata:00388BC4                 db    0
.rdata:00388BC5                 db    0
.rdata:00388BC6                 db    0
.rdata:00388BC7                 db    0
.rdata:00388BC8                 db    0
.rdata:00388BC9                 db    0
.rdata:00388BCA                 db    0
.rdata:00388BCB                 db    0
.rdata:00388BCC ; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
.rdata:00388BCC asc_388BCC      db 'RSDS'               ; DATA XREF: .rdata:00388774↑o
.rdata:00388BCC                                         ; CV signature
.rdata:00388BD0                 dd 84A79E4Bh            ; Data1 ; GUID
.rdata:00388BD4                 dw 0D0F3h               ; Data2
.rdata:00388BD6                 dw 458Fh                ; Data3
.rdata:00388BD8                 db 9Bh, 1Bh, 3Eh, 0F6h, 2Eh, 87h, 9Bh, 0DFh; Data4
.rdata:00388BE0                 dd 8                    ; Age
.rdata:00388BE4                 text "UTF-8", 'C:\Users\Dylan.Smyth\source\repos\Malware Reverse Engi' ; PdbFileName
.rdata:00388BE4                 text "UTF-8", 'neering Assignment 1 2023\Debug\Malware Reverse Engine'
.rdata:00388BE4                 text "UTF-8", 'ering Assignment 1 2023.pdb',0
.rdata:00388C6C ; Debug information (IMAGE_DEBUG_TYPE_VC_FEATURE)
.rdata:00388C6C unk_388C6C      db    0                 ; DATA XREF: .rdata:00388790↑o
.rdata:00388C6D                 db    0
.rdata:00388C6E                 db    0
.rdata:00388C6F                 db    0
.rdata:00388C70                 db  27h ; '
.rdata:00388C71                 db    0
.rdata:00388C72                 db    0
.rdata:00388C73                 db    0
.rdata:00388C74                 db  27h ; '
.rdata:00388C75                 db    0
.rdata:00388C76                 db    0
.rdata:00388C77                 db    0
.rdata:00388C78                 db    1
.rdata:00388C79                 db    0
.rdata:00388C7A                 db    0
.rdata:00388C7B                 db    0
.rdata:00388C7C                 db  26h ; &
.rdata:00388C7D                 db    0
.rdata:00388C7E                 db    0
.rdata:00388C7F                 db    0
.rdata:00388C80                 db    0
.rdata:00388C81                 db    0
.rdata:00388C82                 db    0
.rdata:00388C83                 db    0
.rdata:00388C84                 db    0
.rdata:00388C85                 db    0
.rdata:00388C86                 db    0
.rdata:00388C87                 db    0
.rdata:00388C88                 db    0
.rdata:00388C89                 db    0
.rdata:00388C8A                 db    0
.rdata:00388C8B                 db    0
.rdata:00388C8C                 db    0
.rdata:00388C8D                 db    0
.rdata:00388C8E                 db    0
.rdata:00388C8F                 db    0
.rdata:00388C90                 db    0
.rdata:00388C91                 db    0
.rdata:00388C92                 db    0
.rdata:00388C93                 db    0
.rdata:00388C94                 db    0
.rdata:00388C95                 db    0
.rdata:00388C96                 db    0
.rdata:00388C97                 db    0
.rdata:00388C98                 db    0
.rdata:00388C99                 db    0
.rdata:00388C9A                 db    0
.rdata:00388C9B                 db    0
.rdata:00388C9C                 db    0
.rdata:00388C9D                 db    0
.rdata:00388C9E                 db    0
.rdata:00388C9F                 db    0
.rdata:00388CA0                 db    0
.rdata:00388CA1                 db    0
.rdata:00388CA2                 db    0
.rdata:00388CA3                 db    0
.rdata:00388CA4                 db    0
.rdata:00388CA5                 db    0
.rdata:00388CA6                 db    0
.rdata:00388CA7                 db    0
.rdata:00388CA8                 db    0
.rdata:00388CA9                 db    0
.rdata:00388CAA                 db    0
.rdata:00388CAB                 db    0
.rdata:00388CAC                 db    0
.rdata:00388CAD                 db    0
.rdata:00388CAE                 db    0
.rdata:00388CAF                 db    0
.rdata:00388CB0                 db    0
.rdata:00388CB1                 db    0
.rdata:00388CB2                 db    0
.rdata:00388CB3                 db    0
.rdata:00388CB4                 db    0
.rdata:00388CB5                 db    0
.rdata:00388CB6                 db    0
.rdata:00388CB7                 db    0
.rdata:00388CB8                 db    0
.rdata:00388CB9                 db    0
.rdata:00388CBA                 db    0
.rdata:00388CBB                 db    0
.rdata:00388CBC                 db    0
.rdata:00388CBD                 db    0
.rdata:00388CBE                 db    0
.rdata:00388CBF                 db    0
.rdata:00388CC0                 db    0
.rdata:00388CC1                 db    0
.rdata:00388CC2                 db    0
.rdata:00388CC3                 db    0
.rdata:00388CC4                 db    0
.rdata:00388CC5                 db    0
.rdata:00388CC6                 db    0
.rdata:00388CC7                 db    0
.rdata:00388CC8                 db    0
.rdata:00388CC9                 db    0
.rdata:00388CCA                 db    0
.rdata:00388CCB                 db    0
.rdata:00388CCC                 db    0
.rdata:00388CCD                 db    0
.rdata:00388CCE                 db    0
.rdata:00388CCF                 db    0
.rdata:00388CD0                 db    0
.rdata:00388CD1                 db    0
.rdata:00388CD2                 db    0
.rdata:00388CD3                 db    0
.rdata:00388CD4                 db    0
.rdata:00388CD5                 db    0
.rdata:00388CD6                 db    0
.rdata:00388CD7                 db    0
.rdata:00388CD8                 db    0
.rdata:00388CD9                 db    0
.rdata:00388CDA                 db    0
.rdata:00388CDB                 db    0
.rdata:00388CDC                 db    0
.rdata:00388CDD                 db    0
.rdata:00388CDE                 db    0
.rdata:00388CDF                 db    0
.rdata:00388CE0                 db    0
.rdata:00388CE1                 db    0
.rdata:00388CE2                 db    0
.rdata:00388CE3                 db    0
.rdata:00388CE4                 db    0
.rdata:00388CE5                 db    0
.rdata:00388CE6                 db    0
.rdata:00388CE7                 db    0
.rdata:00388CE8                 db    0
.rdata:00388CE9                 db    0
.rdata:00388CEA                 db    0
.rdata:00388CEB                 db    0
.rdata:00388CEC                 db    0
.rdata:00388CED                 db    0
.rdata:00388CEE                 db    0
.rdata:00388CEF                 db    0
.rdata:00388CF0                 db    0
.rdata:00388CF1                 db    0
.rdata:00388CF2                 db    0
.rdata:00388CF3                 db    0
.rdata:00388CF4                 db    0
.rdata:00388CF5                 db    0
.rdata:00388CF6                 db    0
.rdata:00388CF7                 db    0
.rdata:00388CF8                 db    0
.rdata:00388CF9                 db    0
.rdata:00388CFA                 db    0
.rdata:00388CFB                 db    0
.rdata:00388CFC                 db    0
.rdata:00388CFD                 db    0
.rdata:00388CFE                 db    0
.rdata:00388CFF                 db    0
.rdata:00388D00                 db    0
.rdata:00388D01                 db    0
.rdata:00388D02                 db    0
.rdata:00388D03                 db    0
.rdata:00388D04                 db    0
.rdata:00388D05                 db    0
.rdata:00388D06                 db    0
.rdata:00388D07                 db    0
.rdata:00388D08                 db    0
.rdata:00388D09                 db    0
.rdata:00388D0A                 db    0
.rdata:00388D0B                 db    0
.rdata:00388D0C                 db    0
.rdata:00388D0D                 db    0
.rdata:00388D0E                 db    0
.rdata:00388D0F                 db    0
.rdata:00388D10                 db    0
.rdata:00388D11                 db    0
.rdata:00388D12                 db    0
.rdata:00388D13                 db    0
.rdata:00388D14                 db    0
.rdata:00388D15                 db    0
.rdata:00388D16                 db    0
.rdata:00388D17                 db    0
.rdata:00388D18                 db    0
.rdata:00388D19                 db    0
.rdata:00388D1A                 db    0
.rdata:00388D1B                 db    0
.rdata:00388D1C                 db    0
.rdata:00388D1D                 db    0
.rdata:00388D1E                 db    0
.rdata:00388D1F                 db    0
.rdata:00388D20                 db    0
.rdata:00388D21                 db    0
.rdata:00388D22                 db    0
.rdata:00388D23                 db    0
.rdata:00388D24                 db    0
.rdata:00388D25                 db    0
.rdata:00388D26                 db    0
.rdata:00388D27                 db    0
.rdata:00388D28                 db    0
.rdata:00388D29                 db    0
.rdata:00388D2A                 db    0
.rdata:00388D2B                 db    0
.rdata:00388D2C                 db    0
.rdata:00388D2D                 db    0
.rdata:00388D2E                 db    0
.rdata:00388D2F                 db    0
.rdata:00388D30                 db    0
.rdata:00388D31                 db    0
.rdata:00388D32                 db    0
.rdata:00388D33                 db    0
.rdata:00388D34                 db    0
.rdata:00388D35                 db    0
.rdata:00388D36                 db    0
.rdata:00388D37                 db    0
.rdata:00388D38                 db    0
.rdata:00388D39                 db    0
.rdata:00388D3A                 db    0
.rdata:00388D3B                 db    0
.rdata:00388D3C                 db    0
.rdata:00388D3D                 db    0
.rdata:00388D3E                 db    0
.rdata:00388D3F                 db    0
.rdata:00388D40                 db    0
.rdata:00388D41                 db    0
.rdata:00388D42                 db    0
.rdata:00388D43                 db    0
.rdata:00388D44                 db    0
.rdata:00388D45                 db    0
.rdata:00388D46                 db    0
.rdata:00388D47                 db    0
.rdata:00388D48                 db    0
.rdata:00388D49                 db    0
.rdata:00388D4A                 db    0
.rdata:00388D4B                 db    0
.rdata:00388D4C                 db    0
.rdata:00388D4D                 db    0
.rdata:00388D4E                 db    0
.rdata:00388D4F                 db    0
.rdata:00388D50                 db    0
.rdata:00388D51                 db    0
.rdata:00388D52                 db    0
.rdata:00388D53                 db    0
.rdata:00388D54                 db    0
.rdata:00388D55                 db    0
.rdata:00388D56                 db    0
.rdata:00388D57                 db    0
.rdata:00388D58                 db    0
.rdata:00388D59                 db    0
.rdata:00388D5A                 db    0
.rdata:00388D5B                 db    0
.rdata:00388D5C                 db    0
.rdata:00388D5D                 db    0
.rdata:00388D5E                 db    0
.rdata:00388D5F                 db    0
.rdata:00388D60                 db    0
.rdata:00388D61                 db    0
.rdata:00388D62                 db    0
.rdata:00388D63                 db    0
.rdata:00388D64                 db    0
.rdata:00388D65                 db    0
.rdata:00388D66                 db    0
.rdata:00388D67                 db    0
.rdata:00388D68                 db    0
.rdata:00388D69                 db    0
.rdata:00388D6A                 db    0
.rdata:00388D6B                 db    0
.rdata:00388D6C                 db    0
.rdata:00388D6D                 db    0
.rdata:00388D6E                 db    0
.rdata:00388D6F                 db    0
.rdata:00388D70                 db    0
.rdata:00388D71                 db    0
.rdata:00388D72                 db    0
.rdata:00388D73                 db    0
.rdata:00388D74                 db    0
.rdata:00388D75                 db    0
.rdata:00388D76                 db    0
.rdata:00388D77                 db    0
.rdata:00388D78                 db    0
.rdata:00388D79                 db    0
.rdata:00388D7A                 db    0
.rdata:00388D7B                 db    0
.rdata:00388D7C                 db    0
.rdata:00388D7D                 db    0
.rdata:00388D7E                 db    0
.rdata:00388D7F                 db    0
.rdata:00388D80                 db    0
.rdata:00388D81                 db    0
.rdata:00388D82                 db    0
.rdata:00388D83                 db    0
.rdata:00388D84                 db    0
.rdata:00388D85                 db    0
.rdata:00388D86                 db    0
.rdata:00388D87                 db    0
.rdata:00388D88                 db    0
.rdata:00388D89                 db    0
.rdata:00388D8A                 db    0
.rdata:00388D8B                 db    0
.rdata:00388D8C                 db    0
.rdata:00388D8D                 db    0
.rdata:00388D8E                 db    0
.rdata:00388D8F                 db    0
.rdata:00388D90                 db    0
.rdata:00388D91                 db    0
.rdata:00388D92                 db    0
.rdata:00388D93                 db    0
.rdata:00388D94                 db    0
.rdata:00388D95                 db    0
.rdata:00388D96                 db    0
.rdata:00388D97                 db    0
.rdata:00388D98                 db    0
.rdata:00388D99                 db    0
.rdata:00388D9A                 db    0
.rdata:00388D9B                 db    0
.rdata:00388D9C                 db    0
.rdata:00388D9D                 db    0
.rdata:00388D9E                 db    0
.rdata:00388D9F                 db    0
.rdata:00388DA0                 db    0
.rdata:00388DA1                 db    0
.rdata:00388DA2                 db    0
.rdata:00388DA3                 db    0
.rdata:00388DA4                 db    0
.rdata:00388DA5                 db    0
.rdata:00388DA6                 db    0
.rdata:00388DA7                 db    0
.rdata:00388DA8 unk_388DA8      db    0                 ; DATA XREF: sub_384150+1↑o
.rdata:00388DA9                 db    0
.rdata:00388DAA                 db    0
.rdata:00388DAB                 db    0
.rdata:00388DAC                 db    0
.rdata:00388DAD                 db    0
.rdata:00388DAE                 db    0
.rdata:00388DAF                 db    0
.rdata:00388DB0                 db    0
.rdata:00388DB1                 db    0
.rdata:00388DB2                 db    0
.rdata:00388DB3                 db    0
.rdata:00388DB4                 db    0
.rdata:00388DB5                 db    0
.rdata:00388DB6                 db    0
.rdata:00388DB7                 db    0
.rdata:00388DB8                 db    0
.rdata:00388DB9                 db    0
.rdata:00388DBA                 db    0
.rdata:00388DBB                 db    0
.rdata:00388DBC                 db    0
.rdata:00388DBD                 db    0
.rdata:00388DBE                 db    0
.rdata:00388DBF                 db    0
.rdata:00388DC0                 db    0
.rdata:00388DC1                 db    0
.rdata:00388DC2                 db    0
.rdata:00388DC3                 db    0
.rdata:00388DC4                 db    0
.rdata:00388DC5                 db    0
.rdata:00388DC6                 db    0
.rdata:00388DC7                 db    0
.rdata:00388DC8                 db    0
.rdata:00388DC9                 db    0
.rdata:00388DCA                 db    0
.rdata:00388DCB                 db    0
.rdata:00388DCC                 db    0
.rdata:00388DCD                 db    0
.rdata:00388DCE                 db    0
.rdata:00388DCF                 db    0
.rdata:00388DD0                 db    0
.rdata:00388DD1                 db    0
.rdata:00388DD2                 db    0
.rdata:00388DD3                 db    0
.rdata:00388DD4                 db    0
.rdata:00388DD5                 db    0
.rdata:00388DD6                 db    0
.rdata:00388DD7                 db    0
.rdata:00388DD8                 db    0
.rdata:00388DD9                 db    0
.rdata:00388DDA                 db    0
.rdata:00388DDB                 db    0
.rdata:00388DDC                 db    0
.rdata:00388DDD                 db    0
.rdata:00388DDE                 db    0
.rdata:00388DDF                 db    0
.rdata:00388DE0                 db    0
.rdata:00388DE1                 db    0
.rdata:00388DE2                 db    0
.rdata:00388DE3                 db    0
.rdata:00388DE4                 db    0
.rdata:00388DE5                 db    0
.rdata:00388DE6                 db    0
.rdata:00388DE7                 db    0
.rdata:00388DE8                 db    0
.rdata:00388DE9                 db    0
.rdata:00388DEA                 db    0
.rdata:00388DEB                 db    0
.rdata:00388DEC                 db    0
.rdata:00388DED                 db    0
.rdata:00388DEE                 db    0
.rdata:00388DEF                 db    0
.rdata:00388DF0                 db    0
.rdata:00388DF1                 db    0
.rdata:00388DF2                 db    0
.rdata:00388DF3                 db    0
.rdata:00388DF4                 db    0
.rdata:00388DF5                 db    0
.rdata:00388DF6                 db    0
.rdata:00388DF7                 db    0
.rdata:00388DF8                 db    0
.rdata:00388DF9                 db    0
.rdata:00388DFA                 db    0
.rdata:00388DFB                 db    0
.rdata:00388DFC                 db    0
.rdata:00388DFD                 db    0
.rdata:00388DFE                 db    0
.rdata:00388DFF                 db    0
.rdata:00388E00                 db    0
.rdata:00388E01                 db    0
.rdata:00388E02                 db    0
.rdata:00388E03                 db    0
.rdata:00388E04                 db    0
.rdata:00388E05                 db    0
.rdata:00388E06                 db    0
.rdata:00388E07                 db    0
.rdata:00388E08                 db    0
.rdata:00388E09                 db    0
.rdata:00388E0A                 db    0
.rdata:00388E0B                 db    0
.rdata:00388E0C                 db    0
.rdata:00388E0D                 db    0
.rdata:00388E0E                 db    0
.rdata:00388E0F                 db    0
.rdata:00388E10                 db    0
.rdata:00388E11                 db    0
.rdata:00388E12                 db    0
.rdata:00388E13                 db    0
.rdata:00388E14                 db    0
.rdata:00388E15                 db    0
.rdata:00388E16                 db    0
.rdata:00388E17                 db    0
.rdata:00388E18                 db    0
.rdata:00388E19                 db    0
.rdata:00388E1A                 db    0
.rdata:00388E1B                 db    0
.rdata:00388E1C                 db    0
.rdata:00388E1D                 db    0
.rdata:00388E1E                 db    0
.rdata:00388E1F                 db    0
.rdata:00388E20                 db    0
.rdata:00388E21                 db    0
.rdata:00388E22                 db    0
.rdata:00388E23                 db    0
.rdata:00388E24                 db    0
.rdata:00388E25                 db    0
.rdata:00388E26                 db    0
.rdata:00388E27                 db    0
.rdata:00388E28                 db    0
.rdata:00388E29                 db    0
.rdata:00388E2A                 db    0
.rdata:00388E2B                 db    0
.rdata:00388E2C                 db    0
.rdata:00388E2D                 db    0
.rdata:00388E2E                 db    0
.rdata:00388E2F                 db    0
.rdata:00388E30                 db    0
.rdata:00388E31                 db    0
.rdata:00388E32                 db    0
.rdata:00388E33                 db    0
.rdata:00388E34                 db    0
.rdata:00388E35                 db    0
.rdata:00388E36                 db    0
.rdata:00388E37                 db    0
.rdata:00388E38                 db    0
.rdata:00388E39                 db    0
.rdata:00388E3A                 db    0
.rdata:00388E3B                 db    0
.rdata:00388E3C                 db    0
.rdata:00388E3D                 db    0
.rdata:00388E3E                 db    0
.rdata:00388E3F                 db    0
.rdata:00388E40                 db    0
.rdata:00388E41                 db    0
.rdata:00388E42                 db    0
.rdata:00388E43                 db    0
.rdata:00388E44                 db    0
.rdata:00388E45                 db    0
.rdata:00388E46                 db    0
.rdata:00388E47                 db    0
.rdata:00388E48                 db    0
.rdata:00388E49                 db    0
.rdata:00388E4A                 db    0
.rdata:00388E4B                 db    0
.rdata:00388E4C                 db    0
.rdata:00388E4D                 db    0
.rdata:00388E4E                 db    0
.rdata:00388E4F                 db    0
.rdata:00388E50                 db    0
.rdata:00388E51                 db    0
.rdata:00388E52                 db    0
.rdata:00388E53                 db    0
.rdata:00388E54                 db    0
.rdata:00388E55                 db    0
.rdata:00388E56                 db    0
.rdata:00388E57                 db    0
.rdata:00388E58                 db    0
.rdata:00388E59                 db    0
.rdata:00388E5A                 db    0
.rdata:00388E5B                 db    0
.rdata:00388E5C                 db    0
.rdata:00388E5D                 db    0
.rdata:00388E5E                 db    0
.rdata:00388E5F                 db    0
.rdata:00388E60                 db    0
.rdata:00388E61                 db    0
.rdata:00388E62                 db    0
.rdata:00388E63                 db    0
.rdata:00388E64                 db    0
.rdata:00388E65                 db    0
.rdata:00388E66                 db    0
.rdata:00388E67                 db    0
.rdata:00388E68                 db    0
.rdata:00388E69                 db    0
.rdata:00388E6A                 db    0
.rdata:00388E6B                 db    0
.rdata:00388E6C                 db    0
.rdata:00388E6D                 db    0
.rdata:00388E6E                 db    0
.rdata:00388E6F                 db    0
.rdata:00388E70                 db    0
.rdata:00388E71                 db    0
.rdata:00388E72                 db    0
.rdata:00388E73                 db    0
.rdata:00388E74                 db    0
.rdata:00388E75                 db    0
.rdata:00388E76                 db    0
.rdata:00388E77                 db    0
.rdata:00388E78                 db    0
.rdata:00388E79                 db    0
.rdata:00388E7A                 db    0
.rdata:00388E7B                 db    0
.rdata:00388E7C                 db    0
.rdata:00388E7D                 db    0
.rdata:00388E7E                 db    0
.rdata:00388E7F                 db    0
.rdata:00388E80                 db    0
.rdata:00388E81                 db    0
.rdata:00388E82                 db    0
.rdata:00388E83                 db    0
.rdata:00388E84                 db    0
.rdata:00388E85                 db    0
.rdata:00388E86                 db    0
.rdata:00388E87                 db    0
.rdata:00388E88                 db    0
.rdata:00388E89                 db    0
.rdata:00388E8A                 db    0
.rdata:00388E8B                 db    0
.rdata:00388E8C                 db    0
.rdata:00388E8D                 db    0
.rdata:00388E8E                 db    0
.rdata:00388E8F                 db    0
.rdata:00388E90                 db    0
.rdata:00388E91                 db    0
.rdata:00388E92                 db    0
.rdata:00388E93                 db    0
.rdata:00388E94                 db    0
.rdata:00388E95                 db    0
.rdata:00388E96                 db    0
.rdata:00388E97                 db    0
.rdata:00388E98                 db    0
.rdata:00388E99                 db    0
.rdata:00388E9A                 db    0
.rdata:00388E9B                 db    0
.rdata:00388E9C                 db    0
.rdata:00388E9D                 db    0
.rdata:00388E9E                 db    0
.rdata:00388E9F                 db    0
.rdata:00388EA0                 db    0
.rdata:00388EA1                 db    0
.rdata:00388EA2                 db    0
.rdata:00388EA3                 db    0
.rdata:00388EA4                 db    0
.rdata:00388EA5                 db    0
.rdata:00388EA6                 db    0
.rdata:00388EA7                 db    0
.rdata:00388EA8                 dd offset loc_38125D
.rdata:00388EAC                 db    0
.rdata:00388EAD                 db    0
.rdata:00388EAE                 db    0
.rdata:00388EAF                 db    0
.rdata:00388EB0                 db    0
.rdata:00388EB1                 db    0
.rdata:00388EB2                 db    0
.rdata:00388EB3                 db    0
.rdata:00388EB4                 db    0
.rdata:00388EB5                 db    0
.rdata:00388EB6                 db    0
.rdata:00388EB7                 db    0
.rdata:00388EB8                 db    0
.rdata:00388EB9                 db    0
.rdata:00388EBA                 db    0
.rdata:00388EBB                 db    0
.rdata:00388EBC                 db    0
.rdata:00388EBD                 db    0
.rdata:00388EBE                 db    0
.rdata:00388EBF                 db    0
.rdata:00388EC0                 db    0
.rdata:00388EC1                 db    0
.rdata:00388EC2                 db    0
.rdata:00388EC3                 db    0
.rdata:00388EC4                 db    0
.rdata:00388EC5                 db    0
.rdata:00388EC6                 db    0
.rdata:00388EC7                 db    0
.rdata:00388EC8                 db    0
.rdata:00388EC9                 db    0
.rdata:00388ECA                 db    0
.rdata:00388ECB                 db    0
.rdata:00388ECC                 db    0
.rdata:00388ECD                 db    0
.rdata:00388ECE                 db    0
.rdata:00388ECF                 db    0
.rdata:00388ED0                 db    0
.rdata:00388ED1                 db    0
.rdata:00388ED2                 db    0
.rdata:00388ED3                 db    0
.rdata:00388ED4                 db    0
.rdata:00388ED5                 db    0
.rdata:00388ED6                 db    0
.rdata:00388ED7                 db    0
.rdata:00388ED8                 db    0
.rdata:00388ED9                 db    0
.rdata:00388EDA                 db    0
.rdata:00388EDB                 db    0
.rdata:00388EDC                 db    0
.rdata:00388EDD                 db    0
.rdata:00388EDE                 db    0
.rdata:00388EDF                 db    0
.rdata:00388EE0                 db    0
.rdata:00388EE1                 db    0
.rdata:00388EE2                 db    0
.rdata:00388EE3                 db    0
.rdata:00388EE4                 db    0
.rdata:00388EE5                 db    0
.rdata:00388EE6                 db    0
.rdata:00388EE7                 db    0
.rdata:00388EE8                 db    0
.rdata:00388EE9                 db    0
.rdata:00388EEA                 db    0
.rdata:00388EEB                 db    0
.rdata:00388EEC                 db    0
.rdata:00388EED                 db    0
.rdata:00388EEE                 db    0
.rdata:00388EEF                 db    0
.rdata:00388EF0                 db    0
.rdata:00388EF1                 db    0
.rdata:00388EF2                 db    0
.rdata:00388EF3                 db    0
.rdata:00388EF4                 db    0
.rdata:00388EF5                 db    0
.rdata:00388EF6                 db    0
.rdata:00388EF7                 db    0
.rdata:00388EF8                 db    0
.rdata:00388EF9                 db    0
.rdata:00388EFA                 db    0
.rdata:00388EFB                 db    0
.rdata:00388EFC                 db    0
.rdata:00388EFD                 db    0
.rdata:00388EFE                 db    0
.rdata:00388EFF                 db    0
.rdata:00388F00                 db    0
.rdata:00388F01                 db    0
.rdata:00388F02                 db    0
.rdata:00388F03                 db    0
.rdata:00388F04                 db    0
.rdata:00388F05                 db    0
.rdata:00388F06                 db    0
.rdata:00388F07                 db    0
.rdata:00388F08                 db    0
.rdata:00388F09                 db    0
.rdata:00388F0A                 db    0
.rdata:00388F0B                 db    0
.rdata:00388F0C                 db    0
.rdata:00388F0D                 db    0
.rdata:00388F0E                 db    0
.rdata:00388F0F                 db    0
.rdata:00388F10                 db    0
.rdata:00388F11                 db    0
.rdata:00388F12                 db    0
.rdata:00388F13                 db    0
.rdata:00388F14                 db    0
.rdata:00388F15                 db    0
.rdata:00388F16                 db    0
.rdata:00388F17                 db    0
.rdata:00388F18                 db    0
.rdata:00388F19                 db    0
.rdata:00388F1A                 db    0
.rdata:00388F1B                 db    0
.rdata:00388F1C                 db    0
.rdata:00388F1D                 db    0
.rdata:00388F1E                 db    0
.rdata:00388F1F                 db    0
.rdata:00388F20                 db    0
.rdata:00388F21                 db    0
.rdata:00388F22                 db    0
.rdata:00388F23                 db    0
.rdata:00388F24                 db    0
.rdata:00388F25                 db    0
.rdata:00388F26                 db    0
.rdata:00388F27                 db    0
.rdata:00388F28                 db    0
.rdata:00388F29                 db    0
.rdata:00388F2A                 db    0
.rdata:00388F2B                 db    0
.rdata:00388F2C                 db    0
.rdata:00388F2D                 db    0
.rdata:00388F2E                 db    0
.rdata:00388F2F                 db    0
.rdata:00388F30                 db    0
.rdata:00388F31                 db    0
.rdata:00388F32                 db    0
.rdata:00388F33                 db    0
.rdata:00388F34                 db    0
.rdata:00388F35                 db    0
.rdata:00388F36                 db    0
.rdata:00388F37                 db    0
.rdata:00388F38                 db    0
.rdata:00388F39                 db    0
.rdata:00388F3A                 db    0
.rdata:00388F3B                 db    0
.rdata:00388F3C                 db    0
.rdata:00388F3D                 db    0
.rdata:00388F3E                 db    0
.rdata:00388F3F                 db    0
.rdata:00388F40                 db    0
.rdata:00388F41                 db    0
.rdata:00388F42                 db    0
.rdata:00388F43                 db    0
.rdata:00388F44                 db    0
.rdata:00388F45                 db    0
.rdata:00388F46                 db    0
.rdata:00388F47                 db    0
.rdata:00388F48                 db    0
.rdata:00388F49                 db    0
.rdata:00388F4A                 db    0
.rdata:00388F4B                 db    0
.rdata:00388F4C                 db    0
.rdata:00388F4D                 db    0
.rdata:00388F4E                 db    0
.rdata:00388F4F                 db    0
.rdata:00388F50                 db    0
.rdata:00388F51                 db    0
.rdata:00388F52                 db    0
.rdata:00388F53                 db    0
.rdata:00388F54                 db    0
.rdata:00388F55                 db    0
.rdata:00388F56                 db    0
.rdata:00388F57                 db    0
.rdata:00388F58                 db    0
.rdata:00388F59                 db    0
.rdata:00388F5A                 db    0
.rdata:00388F5B                 db    0
.rdata:00388F5C                 db    0
.rdata:00388F5D                 db    0
.rdata:00388F5E                 db    0
.rdata:00388F5F                 db    0
.rdata:00388F60                 db    0
.rdata:00388F61                 db    0
.rdata:00388F62                 db    0
.rdata:00388F63                 db    0
.rdata:00388F64                 db    0
.rdata:00388F65                 db    0
.rdata:00388F66                 db    0
.rdata:00388F67                 db    0
.rdata:00388F68                 db    0
.rdata:00388F69                 db    0
.rdata:00388F6A                 db    0
.rdata:00388F6B                 db    0
.rdata:00388F6C                 db    0
.rdata:00388F6D                 db    0
.rdata:00388F6E                 db    0
.rdata:00388F6F                 db    0
.rdata:00388F70                 db    0
.rdata:00388F71                 db    0
.rdata:00388F72                 db    0
.rdata:00388F73                 db    0
.rdata:00388F74                 db    0
.rdata:00388F75                 db    0
.rdata:00388F76                 db    0
.rdata:00388F77                 db    0
.rdata:00388F78                 db    0
.rdata:00388F79                 db    0
.rdata:00388F7A                 db    0
.rdata:00388F7B                 db    0
.rdata:00388F7C                 db    0
.rdata:00388F7D                 db    0
.rdata:00388F7E                 db    0
.rdata:00388F7F                 db    0
.rdata:00388F80                 db    0
.rdata:00388F81                 db    0
.rdata:00388F82                 db    0
.rdata:00388F83                 db    0
.rdata:00388F84                 db    0
.rdata:00388F85                 db    0
.rdata:00388F86                 db    0
.rdata:00388F87                 db    0
.rdata:00388F88                 db    0
.rdata:00388F89                 db    0
.rdata:00388F8A                 db    0
.rdata:00388F8B                 db    0
.rdata:00388F8C                 db    0
.rdata:00388F8D                 db    0
.rdata:00388F8E                 db    0
.rdata:00388F8F                 db    0
.rdata:00388F90                 db    0
.rdata:00388F91                 db    0
.rdata:00388F92                 db    0
.rdata:00388F93                 db    0
.rdata:00388F94                 db    0
.rdata:00388F95                 db    0
.rdata:00388F96                 db    0
.rdata:00388F97                 db    0
.rdata:00388F98                 db    0
.rdata:00388F99                 db    0
.rdata:00388F9A                 db    0
.rdata:00388F9B                 db    0
.rdata:00388F9C                 db    0
.rdata:00388F9D                 db    0
.rdata:00388F9E                 db    0
.rdata:00388F9F                 db    0
.rdata:00388FA0                 db    0
.rdata:00388FA1                 db    0
.rdata:00388FA2                 db    0
.rdata:00388FA3                 db    0
.rdata:00388FA4                 db    0
.rdata:00388FA5                 db    0
.rdata:00388FA6                 db    0
.rdata:00388FA7                 db    0
.rdata:00388FA8                 db    0
.rdata:00388FA9                 db    0
.rdata:00388FAA                 db    0
.rdata:00388FAB                 db    0
.rdata:00388FAC unk_388FAC      db    0                 ; DATA XREF: sub_384150+8↑o
.rdata:00388FAC                                         ; sub_384150+23↑o
.rdata:00388FAD                 db    0
.rdata:00388FAE                 db    0
.rdata:00388FAF                 db    0
.rdata:00388FB0                 db    0
.rdata:00388FB1                 db    0
.rdata:00388FB2                 db    0
.rdata:00388FB3                 db    0
.rdata:00388FB4                 db    0
.rdata:00388FB5                 db    0
.rdata:00388FB6                 db    0
.rdata:00388FB7                 db    0
.rdata:00388FB8                 db    0
.rdata:00388FB9                 db    0
.rdata:00388FBA                 db    0
.rdata:00388FBB                 db    0
.rdata:00388FBC                 db    0
.rdata:00388FBD                 db    0
.rdata:00388FBE                 db    0
.rdata:00388FBF                 db    0
.rdata:00388FC0                 db    0
.rdata:00388FC1                 db    0
.rdata:00388FC2                 db    0
.rdata:00388FC3                 db    0
.rdata:00388FC4                 db    0
.rdata:00388FC5                 db    0
.rdata:00388FC6                 db    0
.rdata:00388FC7                 db    0
.rdata:00388FC8                 db    0
.rdata:00388FC9                 db    0
.rdata:00388FCA                 db    0
.rdata:00388FCB                 db    0
.rdata:00388FCC                 db    0
.rdata:00388FCD                 db    0
.rdata:00388FCE                 db    0
.rdata:00388FCF                 db    0
.rdata:00388FD0                 db    0
.rdata:00388FD1                 db    0
.rdata:00388FD2                 db    0
.rdata:00388FD3                 db    0
.rdata:00388FD4                 db    0
.rdata:00388FD5                 db    0
.rdata:00388FD6                 db    0
.rdata:00388FD7                 db    0
.rdata:00388FD8                 db    0
.rdata:00388FD9                 db    0
.rdata:00388FDA                 db    0
.rdata:00388FDB                 db    0
.rdata:00388FDC                 db    0
.rdata:00388FDD                 db    0
.rdata:00388FDE                 db    0
.rdata:00388FDF                 db    0
.rdata:00388FE0                 db    0
.rdata:00388FE1                 db    0
.rdata:00388FE2                 db    0
.rdata:00388FE3                 db    0
.rdata:00388FE4                 db    0
.rdata:00388FE5                 db    0
.rdata:00388FE6                 db    0
.rdata:00388FE7                 db    0
.rdata:00388FE8                 db    0
.rdata:00388FE9                 db    0
.rdata:00388FEA                 db    0
.rdata:00388FEB                 db    0
.rdata:00388FEC                 db    0
.rdata:00388FED                 db    0
.rdata:00388FEE                 db    0
.rdata:00388FEF                 db    0
.rdata:00388FF0                 db    0
.rdata:00388FF1                 db    0
.rdata:00388FF2                 db    0
.rdata:00388FF3                 db    0
.rdata:00388FF4                 db    0
.rdata:00388FF5                 db    0
.rdata:00388FF6                 db    0
.rdata:00388FF7                 db    0
.rdata:00388FF8                 db    0
.rdata:00388FF9                 db    0
.rdata:00388FFA                 db    0
.rdata:00388FFB                 db    0
.rdata:00388FFC                 db    0
.rdata:00388FFD                 db    0
.rdata:00388FFE                 db    0
.rdata:00388FFF                 db    0
.rdata:00389000                 db    0
.rdata:00389001                 db    0
.rdata:00389002                 db    0
.rdata:00389003                 db    0
.rdata:00389004                 db    0
.rdata:00389005                 db    0
.rdata:00389006                 db    0
.rdata:00389007                 db    0
.rdata:00389008                 db    0
.rdata:00389009                 db    0
.rdata:0038900A                 db    0
.rdata:0038900B                 db    0
.rdata:0038900C                 db    0
.rdata:0038900D                 db    0
.rdata:0038900E                 db    0
.rdata:0038900F                 db    0
.rdata:00389010                 db    0
.rdata:00389011                 db    0
.rdata:00389012                 db    0
.rdata:00389013                 db    0
.rdata:00389014                 db    0
.rdata:00389015                 db    0
.rdata:00389016                 db    0
.rdata:00389017                 db    0
.rdata:00389018                 db    0
.rdata:00389019                 db    0
.rdata:0038901A                 db    0
.rdata:0038901B                 db    0
.rdata:0038901C                 db    0
.rdata:0038901D                 db    0
.rdata:0038901E                 db    0
.rdata:0038901F                 db    0
.rdata:00389020                 db    0
.rdata:00389021                 db    0
.rdata:00389022                 db    0
.rdata:00389023                 db    0
.rdata:00389024                 db    0
.rdata:00389025                 db    0
.rdata:00389026                 db    0
.rdata:00389027                 db    0
.rdata:00389028                 db    0
.rdata:00389029                 db    0
.rdata:0038902A                 db    0
.rdata:0038902B                 db    0
.rdata:0038902C                 db    0
.rdata:0038902D                 db    0
.rdata:0038902E                 db    0
.rdata:0038902F                 db    0
.rdata:00389030                 db    0
.rdata:00389031                 db    0
.rdata:00389032                 db    0
.rdata:00389033                 db    0
.rdata:00389034                 db    0
.rdata:00389035                 db    0
.rdata:00389036                 db    0
.rdata:00389037                 db    0
.rdata:00389038                 db    0
.rdata:00389039                 db    0
.rdata:0038903A                 db    0
.rdata:0038903B                 db    0
.rdata:0038903C                 db    0
.rdata:0038903D                 db    0
.rdata:0038903E                 db    0
.rdata:0038903F                 db    0
.rdata:00389040                 db    0
.rdata:00389041                 db    0
.rdata:00389042                 db    0
.rdata:00389043                 db    0
.rdata:00389044                 db    0
.rdata:00389045                 db    0
.rdata:00389046                 db    0
.rdata:00389047                 db    0
.rdata:00389048                 db    0
.rdata:00389049                 db    0
.rdata:0038904A                 db    0
.rdata:0038904B                 db    0
.rdata:0038904C                 db    0
.rdata:0038904D                 db    0
.rdata:0038904E                 db    0
.rdata:0038904F                 db    0
.rdata:00389050                 db    0
.rdata:00389051                 db    0
.rdata:00389052                 db    0
.rdata:00389053                 db    0
.rdata:00389054                 db    0
.rdata:00389055                 db    0
.rdata:00389056                 db    0
.rdata:00389057                 db    0
.rdata:00389058                 db    0
.rdata:00389059                 db    0
.rdata:0038905A                 db    0
.rdata:0038905B                 db    0
.rdata:0038905C                 db    0
.rdata:0038905D                 db    0
.rdata:0038905E                 db    0
.rdata:0038905F                 db    0
.rdata:00389060                 db    0
.rdata:00389061                 db    0
.rdata:00389062                 db    0
.rdata:00389063                 db    0
.rdata:00389064                 db    0
.rdata:00389065                 db    0
.rdata:00389066                 db    0
.rdata:00389067                 db    0
.rdata:00389068                 db    0
.rdata:00389069                 db    0
.rdata:0038906A                 db    0
.rdata:0038906B                 db    0
.rdata:0038906C                 db    0
.rdata:0038906D                 db    0
.rdata:0038906E                 db    0
.rdata:0038906F                 db    0
.rdata:00389070                 db    0
.rdata:00389071                 db    0
.rdata:00389072                 db    0
.rdata:00389073                 db    0
.rdata:00389074                 db    0
.rdata:00389075                 db    0
.rdata:00389076                 db    0
.rdata:00389077                 db    0
.rdata:00389078                 db    0
.rdata:00389079                 db    0
.rdata:0038907A                 db    0
.rdata:0038907B                 db    0
.rdata:0038907C                 db    0
.rdata:0038907D                 db    0
.rdata:0038907E                 db    0
.rdata:0038907F                 db    0
.rdata:00389080                 db    0
.rdata:00389081                 db    0
.rdata:00389082                 db    0
.rdata:00389083                 db    0
.rdata:00389084                 db    0
.rdata:00389085                 db    0
.rdata:00389086                 db    0
.rdata:00389087                 db    0
.rdata:00389088                 db    0
.rdata:00389089                 db    0
.rdata:0038908A                 db    0
.rdata:0038908B                 db    0
.rdata:0038908C                 db    0
.rdata:0038908D                 db    0
.rdata:0038908E                 db    0
.rdata:0038908F                 db    0
.rdata:00389090                 db    0
.rdata:00389091                 db    0
.rdata:00389092                 db    0
.rdata:00389093                 db    0
.rdata:00389094                 db    0
.rdata:00389095                 db    0
.rdata:00389096                 db    0
.rdata:00389097                 db    0
.rdata:00389098                 db    0
.rdata:00389099                 db    0
.rdata:0038909A                 db    0
.rdata:0038909B                 db    0
.rdata:0038909C                 db    0
.rdata:0038909D                 db    0
.rdata:0038909E                 db    0
.rdata:0038909F                 db    0
.rdata:003890A0                 db    0
.rdata:003890A1                 db    0
.rdata:003890A2                 db    0
.rdata:003890A3                 db    0
.rdata:003890A4                 db    0
.rdata:003890A5                 db    0
.rdata:003890A6                 db    0
.rdata:003890A7                 db    0
.rdata:003890A8                 db    0
.rdata:003890A9                 db    0
.rdata:003890AA                 db    0
.rdata:003890AB                 db    0
.rdata:003890AC                 db    0
.rdata:003890AD                 db    0
.rdata:003890AE                 db    0
.rdata:003890AF                 db    0
.rdata:003890B0                 db    0
.rdata:003890B1                 db    0
.rdata:003890B2                 db    0
.rdata:003890B3                 db    0
.rdata:003890B4 unk_3890B4      db    0                 ; DATA XREF: sub_384190+1↑o
.rdata:003890B5                 db    0
.rdata:003890B6                 db    0
.rdata:003890B7                 db    0
.rdata:003890B8                 db    0
.rdata:003890B9                 db    0
.rdata:003890BA                 db    0
.rdata:003890BB                 db    0
.rdata:003890BC                 db    0
.rdata:003890BD                 db    0
.rdata:003890BE                 db    0
.rdata:003890BF                 db    0
.rdata:003890C0                 db    0
.rdata:003890C1                 db    0
.rdata:003890C2                 db    0
.rdata:003890C3                 db    0
.rdata:003890C4                 db    0
.rdata:003890C5                 db    0
.rdata:003890C6                 db    0
.rdata:003890C7                 db    0
.rdata:003890C8                 db    0
.rdata:003890C9                 db    0
.rdata:003890CA                 db    0
.rdata:003890CB                 db    0
.rdata:003890CC                 db    0
.rdata:003890CD                 db    0
.rdata:003890CE                 db    0
.rdata:003890CF                 db    0
.rdata:003890D0                 db    0
.rdata:003890D1                 db    0
.rdata:003890D2                 db    0
.rdata:003890D3                 db    0
.rdata:003890D4                 db    0
.rdata:003890D5                 db    0
.rdata:003890D6                 db    0
.rdata:003890D7                 db    0
.rdata:003890D8                 db    0
.rdata:003890D9                 db    0
.rdata:003890DA                 db    0
.rdata:003890DB                 db    0
.rdata:003890DC                 db    0
.rdata:003890DD                 db    0
.rdata:003890DE                 db    0
.rdata:003890DF                 db    0
.rdata:003890E0                 db    0
.rdata:003890E1                 db    0
.rdata:003890E2                 db    0
.rdata:003890E3                 db    0
.rdata:003890E4                 db    0
.rdata:003890E5                 db    0
.rdata:003890E6                 db    0
.rdata:003890E7                 db    0
.rdata:003890E8                 db    0
.rdata:003890E9                 db    0
.rdata:003890EA                 db    0
.rdata:003890EB                 db    0
.rdata:003890EC                 db    0
.rdata:003890ED                 db    0
.rdata:003890EE                 db    0
.rdata:003890EF                 db    0
.rdata:003890F0                 db    0
.rdata:003890F1                 db    0
.rdata:003890F2                 db    0
.rdata:003890F3                 db    0
.rdata:003890F4                 db    0
.rdata:003890F5                 db    0
.rdata:003890F6                 db    0
.rdata:003890F7                 db    0
.rdata:003890F8                 db    0
.rdata:003890F9                 db    0
.rdata:003890FA                 db    0
.rdata:003890FB                 db    0
.rdata:003890FC                 db    0
.rdata:003890FD                 db    0
.rdata:003890FE                 db    0
.rdata:003890FF                 db    0
.rdata:00389100                 db    0
.rdata:00389101                 db    0
.rdata:00389102                 db    0
.rdata:00389103                 db    0
.rdata:00389104                 db    0
.rdata:00389105                 db    0
.rdata:00389106                 db    0
.rdata:00389107                 db    0
.rdata:00389108                 db    0
.rdata:00389109                 db    0
.rdata:0038910A                 db    0
.rdata:0038910B                 db    0
.rdata:0038910C                 db    0
.rdata:0038910D                 db    0
.rdata:0038910E                 db    0
.rdata:0038910F                 db    0
.rdata:00389110                 db    0
.rdata:00389111                 db    0
.rdata:00389112                 db    0
.rdata:00389113                 db    0
.rdata:00389114                 db    0
.rdata:00389115                 db    0
.rdata:00389116                 db    0
.rdata:00389117                 db    0
.rdata:00389118                 db    0
.rdata:00389119                 db    0
.rdata:0038911A                 db    0
.rdata:0038911B                 db    0
.rdata:0038911C                 db    0
.rdata:0038911D                 db    0
.rdata:0038911E                 db    0
.rdata:0038911F                 db    0
.rdata:00389120                 db    0
.rdata:00389121                 db    0
.rdata:00389122                 db    0
.rdata:00389123                 db    0
.rdata:00389124                 db    0
.rdata:00389125                 db    0
.rdata:00389126                 db    0
.rdata:00389127                 db    0
.rdata:00389128                 db    0
.rdata:00389129                 db    0
.rdata:0038912A                 db    0
.rdata:0038912B                 db    0
.rdata:0038912C                 db    0
.rdata:0038912D                 db    0
.rdata:0038912E                 db    0
.rdata:0038912F                 db    0
.rdata:00389130                 db    0
.rdata:00389131                 db    0
.rdata:00389132                 db    0
.rdata:00389133                 db    0
.rdata:00389134                 db    0
.rdata:00389135                 db    0
.rdata:00389136                 db    0
.rdata:00389137                 db    0
.rdata:00389138                 db    0
.rdata:00389139                 db    0
.rdata:0038913A                 db    0
.rdata:0038913B                 db    0
.rdata:0038913C                 db    0
.rdata:0038913D                 db    0
.rdata:0038913E                 db    0
.rdata:0038913F                 db    0
.rdata:00389140                 db    0
.rdata:00389141                 db    0
.rdata:00389142                 db    0
.rdata:00389143                 db    0
.rdata:00389144                 db    0
.rdata:00389145                 db    0
.rdata:00389146                 db    0
.rdata:00389147                 db    0
.rdata:00389148                 db    0
.rdata:00389149                 db    0
.rdata:0038914A                 db    0
.rdata:0038914B                 db    0
.rdata:0038914C                 db    0
.rdata:0038914D                 db    0
.rdata:0038914E                 db    0
.rdata:0038914F                 db    0
.rdata:00389150                 db    0
.rdata:00389151                 db    0
.rdata:00389152                 db    0
.rdata:00389153                 db    0
.rdata:00389154                 db    0
.rdata:00389155                 db    0
.rdata:00389156                 db    0
.rdata:00389157                 db    0
.rdata:00389158                 db    0
.rdata:00389159                 db    0
.rdata:0038915A                 db    0
.rdata:0038915B                 db    0
.rdata:0038915C                 db    0
.rdata:0038915D                 db    0
.rdata:0038915E                 db    0
.rdata:0038915F                 db    0
.rdata:00389160                 db    0
.rdata:00389161                 db    0
.rdata:00389162                 db    0
.rdata:00389163                 db    0
.rdata:00389164                 db    0
.rdata:00389165                 db    0
.rdata:00389166                 db    0
.rdata:00389167                 db    0
.rdata:00389168                 db    0
.rdata:00389169                 db    0
.rdata:0038916A                 db    0
.rdata:0038916B                 db    0
.rdata:0038916C                 db    0
.rdata:0038916D                 db    0
.rdata:0038916E                 db    0
.rdata:0038916F                 db    0
.rdata:00389170                 db    0
.rdata:00389171                 db    0
.rdata:00389172                 db    0
.rdata:00389173                 db    0
.rdata:00389174                 db    0
.rdata:00389175                 db    0
.rdata:00389176                 db    0
.rdata:00389177                 db    0
.rdata:00389178                 db    0
.rdata:00389179                 db    0
.rdata:0038917A                 db    0
.rdata:0038917B                 db    0
.rdata:0038917C                 db    0
.rdata:0038917D                 db    0
.rdata:0038917E                 db    0
.rdata:0038917F                 db    0
.rdata:00389180                 db    0
.rdata:00389181                 db    0
.rdata:00389182                 db    0
.rdata:00389183                 db    0
.rdata:00389184                 db    0
.rdata:00389185                 db    0
.rdata:00389186                 db    0
.rdata:00389187                 db    0
.rdata:00389188                 db    0
.rdata:00389189                 db    0
.rdata:0038918A                 db    0
.rdata:0038918B                 db    0
.rdata:0038918C                 db    0
.rdata:0038918D                 db    0
.rdata:0038918E                 db    0
.rdata:0038918F                 db    0
.rdata:00389190                 db    0
.rdata:00389191                 db    0
.rdata:00389192                 db    0
.rdata:00389193                 db    0
.rdata:00389194                 db    0
.rdata:00389195                 db    0
.rdata:00389196                 db    0
.rdata:00389197                 db    0
.rdata:00389198                 db    0
.rdata:00389199                 db    0
.rdata:0038919A                 db    0
.rdata:0038919B                 db    0
.rdata:0038919C                 db    0
.rdata:0038919D                 db    0
.rdata:0038919E                 db    0
.rdata:0038919F                 db    0
.rdata:003891A0                 db    0
.rdata:003891A1                 db    0
.rdata:003891A2                 db    0
.rdata:003891A3                 db    0
.rdata:003891A4                 db    0
.rdata:003891A5                 db    0
.rdata:003891A6                 db    0
.rdata:003891A7                 db    0
.rdata:003891A8                 db    0
.rdata:003891A9                 db    0
.rdata:003891AA                 db    0
.rdata:003891AB                 db    0
.rdata:003891AC                 db    0
.rdata:003891AD                 db    0
.rdata:003891AE                 db    0
.rdata:003891AF                 db    0
.rdata:003891B0                 db    0
.rdata:003891B1                 db    0
.rdata:003891B2                 db    0
.rdata:003891B3                 db    0
.rdata:003891B4                 dd offset sub_381311
.rdata:003891B8                 db    0
.rdata:003891B9                 db    0
.rdata:003891BA                 db    0
.rdata:003891BB                 db    0
.rdata:003891BC                 db    0
.rdata:003891BD                 db    0
.rdata:003891BE                 db    0
.rdata:003891BF                 db    0
.rdata:003891C0                 db    0
.rdata:003891C1                 db    0
.rdata:003891C2                 db    0
.rdata:003891C3                 db    0
.rdata:003891C4                 db    0
.rdata:003891C5                 db    0
.rdata:003891C6                 db    0
.rdata:003891C7                 db    0
.rdata:003891C8                 db    0
.rdata:003891C9                 db    0
.rdata:003891CA                 db    0
.rdata:003891CB                 db    0
.rdata:003891CC                 db    0
.rdata:003891CD                 db    0
.rdata:003891CE                 db    0
.rdata:003891CF                 db    0
.rdata:003891D0                 db    0
.rdata:003891D1                 db    0
.rdata:003891D2                 db    0
.rdata:003891D3                 db    0
.rdata:003891D4                 db    0
.rdata:003891D5                 db    0
.rdata:003891D6                 db    0
.rdata:003891D7                 db    0
.rdata:003891D8                 db    0
.rdata:003891D9                 db    0
.rdata:003891DA                 db    0
.rdata:003891DB                 db    0
.rdata:003891DC                 db    0
.rdata:003891DD                 db    0
.rdata:003891DE                 db    0
.rdata:003891DF                 db    0
.rdata:003891E0                 db    0
.rdata:003891E1                 db    0
.rdata:003891E2                 db    0
.rdata:003891E3                 db    0
.rdata:003891E4                 db    0
.rdata:003891E5                 db    0
.rdata:003891E6                 db    0
.rdata:003891E7                 db    0
.rdata:003891E8                 db    0
.rdata:003891E9                 db    0
.rdata:003891EA                 db    0
.rdata:003891EB                 db    0
.rdata:003891EC                 db    0
.rdata:003891ED                 db    0
.rdata:003891EE                 db    0
.rdata:003891EF                 db    0
.rdata:003891F0                 db    0
.rdata:003891F1                 db    0
.rdata:003891F2                 db    0
.rdata:003891F3                 db    0
.rdata:003891F4                 db    0
.rdata:003891F5                 db    0
.rdata:003891F6                 db    0
.rdata:003891F7                 db    0
.rdata:003891F8                 db    0
.rdata:003891F9                 db    0
.rdata:003891FA                 db    0
.rdata:003891FB                 db    0
.rdata:003891FC                 db    0
.rdata:003891FD                 db    0
.rdata:003891FE                 db    0
.rdata:003891FF                 db    0
.rdata:00389200                 db    0
.rdata:00389201                 db    0
.rdata:00389202                 db    0
.rdata:00389203                 db    0
.rdata:00389204                 db    0
.rdata:00389205                 db    0
.rdata:00389206                 db    0
.rdata:00389207                 db    0
.rdata:00389208                 db    0
.rdata:00389209                 db    0
.rdata:0038920A                 db    0
.rdata:0038920B                 db    0
.rdata:0038920C                 db    0
.rdata:0038920D                 db    0
.rdata:0038920E                 db    0
.rdata:0038920F                 db    0
.rdata:00389210                 db    0
.rdata:00389211                 db    0
.rdata:00389212                 db    0
.rdata:00389213                 db    0
.rdata:00389214                 db    0
.rdata:00389215                 db    0
.rdata:00389216                 db    0
.rdata:00389217                 db    0
.rdata:00389218                 db    0
.rdata:00389219                 db    0
.rdata:0038921A                 db    0
.rdata:0038921B                 db    0
.rdata:0038921C                 db    0
.rdata:0038921D                 db    0
.rdata:0038921E                 db    0
.rdata:0038921F                 db    0
.rdata:00389220                 db    0
.rdata:00389221                 db    0
.rdata:00389222                 db    0
.rdata:00389223                 db    0
.rdata:00389224                 db    0
.rdata:00389225                 db    0
.rdata:00389226                 db    0
.rdata:00389227                 db    0
.rdata:00389228                 db    0
.rdata:00389229                 db    0
.rdata:0038922A                 db    0
.rdata:0038922B                 db    0
.rdata:0038922C                 db    0
.rdata:0038922D                 db    0
.rdata:0038922E                 db    0
.rdata:0038922F                 db    0
.rdata:00389230                 db    0
.rdata:00389231                 db    0
.rdata:00389232                 db    0
.rdata:00389233                 db    0
.rdata:00389234                 db    0
.rdata:00389235                 db    0
.rdata:00389236                 db    0
.rdata:00389237                 db    0
.rdata:00389238                 db    0
.rdata:00389239                 db    0
.rdata:0038923A                 db    0
.rdata:0038923B                 db    0
.rdata:0038923C                 db    0
.rdata:0038923D                 db    0
.rdata:0038923E                 db    0
.rdata:0038923F                 db    0
.rdata:00389240                 db    0
.rdata:00389241                 db    0
.rdata:00389242                 db    0
.rdata:00389243                 db    0
.rdata:00389244                 db    0
.rdata:00389245                 db    0
.rdata:00389246                 db    0
.rdata:00389247                 db    0
.rdata:00389248                 db    0
.rdata:00389249                 db    0
.rdata:0038924A                 db    0
.rdata:0038924B                 db    0
.rdata:0038924C                 db    0
.rdata:0038924D                 db    0
.rdata:0038924E                 db    0
.rdata:0038924F                 db    0
.rdata:00389250                 db    0
.rdata:00389251                 db    0
.rdata:00389252                 db    0
.rdata:00389253                 db    0
.rdata:00389254                 db    0
.rdata:00389255                 db    0
.rdata:00389256                 db    0
.rdata:00389257                 db    0
.rdata:00389258                 db    0
.rdata:00389259                 db    0
.rdata:0038925A                 db    0
.rdata:0038925B                 db    0
.rdata:0038925C                 db    0
.rdata:0038925D                 db    0
.rdata:0038925E                 db    0
.rdata:0038925F                 db    0
.rdata:00389260                 db    0
.rdata:00389261                 db    0
.rdata:00389262                 db    0
.rdata:00389263                 db    0
.rdata:00389264                 db    0
.rdata:00389265                 db    0
.rdata:00389266                 db    0
.rdata:00389267                 db    0
.rdata:00389268                 db    0
.rdata:00389269                 db    0
.rdata:0038926A                 db    0
.rdata:0038926B                 db    0
.rdata:0038926C                 db    0
.rdata:0038926D                 db    0
.rdata:0038926E                 db    0
.rdata:0038926F                 db    0
.rdata:00389270                 db    0
.rdata:00389271                 db    0
.rdata:00389272                 db    0
.rdata:00389273                 db    0
.rdata:00389274                 db    0
.rdata:00389275                 db    0
.rdata:00389276                 db    0
.rdata:00389277                 db    0
.rdata:00389278                 db    0
.rdata:00389279                 db    0
.rdata:0038927A                 db    0
.rdata:0038927B                 db    0
.rdata:0038927C                 db    0
.rdata:0038927D                 db    0
.rdata:0038927E                 db    0
.rdata:0038927F                 db    0
.rdata:00389280                 db    0
.rdata:00389281                 db    0
.rdata:00389282                 db    0
.rdata:00389283                 db    0
.rdata:00389284                 db    0
.rdata:00389285                 db    0
.rdata:00389286                 db    0
.rdata:00389287                 db    0
.rdata:00389288                 db    0
.rdata:00389289                 db    0
.rdata:0038928A                 db    0
.rdata:0038928B                 db    0
.rdata:0038928C                 db    0
.rdata:0038928D                 db    0
.rdata:0038928E                 db    0
.rdata:0038928F                 db    0
.rdata:00389290                 db    0
.rdata:00389291                 db    0
.rdata:00389292                 db    0
.rdata:00389293                 db    0
.rdata:00389294                 db    0
.rdata:00389295                 db    0
.rdata:00389296                 db    0
.rdata:00389297                 db    0
.rdata:00389298                 db    0
.rdata:00389299                 db    0
.rdata:0038929A                 db    0
.rdata:0038929B                 db    0
.rdata:0038929C                 db    0
.rdata:0038929D                 db    0
.rdata:0038929E                 db    0
.rdata:0038929F                 db    0
.rdata:003892A0                 db    0
.rdata:003892A1                 db    0
.rdata:003892A2                 db    0
.rdata:003892A3                 db    0
.rdata:003892A4                 db    0
.rdata:003892A5                 db    0
.rdata:003892A6                 db    0
.rdata:003892A7                 db    0
.rdata:003892A8                 db    0
.rdata:003892A9                 db    0
.rdata:003892AA                 db    0
.rdata:003892AB                 db    0
.rdata:003892AC                 db    0
.rdata:003892AD                 db    0
.rdata:003892AE                 db    0
.rdata:003892AF                 db    0
.rdata:003892B0                 db    0
.rdata:003892B1                 db    0
.rdata:003892B2                 db    0
.rdata:003892B3                 db    0
.rdata:003892B4                 db    0
.rdata:003892B5                 db    0
.rdata:003892B6                 db    0
.rdata:003892B7                 db    0
.rdata:003892B8 unk_3892B8      db    0                 ; DATA XREF: sub_384190+8↑o
.rdata:003892B8                                         ; sub_384190+23↑o
.rdata:003892B9                 db    0
.rdata:003892BA                 db    0
.rdata:003892BB                 db    0
.rdata:003892BC                 db    0
.rdata:003892BD                 db    0
.rdata:003892BE                 db    0
.rdata:003892BF                 db    0
.rdata:003892C0                 db    0
.rdata:003892C1                 db    0
.rdata:003892C2                 db    0
.rdata:003892C3                 db    0
.rdata:003892C4                 db    0
.rdata:003892C5                 db    0
.rdata:003892C6                 db    0
.rdata:003892C7                 db    0
.rdata:003892C8                 db    0
.rdata:003892C9                 db    0
.rdata:003892CA                 db    0
.rdata:003892CB                 db    0
.rdata:003892CC                 db    0
.rdata:003892CD                 db    0
.rdata:003892CE                 db    0
.rdata:003892CF                 db    0
.rdata:003892D0                 db    0
.rdata:003892D1                 db    0
.rdata:003892D2                 db    0
.rdata:003892D3                 db    0
.rdata:003892D4                 db    0
.rdata:003892D5                 db    0
.rdata:003892D6                 db    0
.rdata:003892D7                 db    0
.rdata:003892D8                 db    0
.rdata:003892D9                 db    0
.rdata:003892DA                 db    0
.rdata:003892DB                 db    0
.rdata:003892DC                 db    0
.rdata:003892DD                 db    0
.rdata:003892DE                 db    0
.rdata:003892DF                 db    0
.rdata:003892E0                 db    0
.rdata:003892E1                 db    0
.rdata:003892E2                 db    0
.rdata:003892E3                 db    0
.rdata:003892E4                 db    0
.rdata:003892E5                 db    0
.rdata:003892E6                 db    0
.rdata:003892E7                 db    0
.rdata:003892E8                 db    0
.rdata:003892E9                 db    0
.rdata:003892EA                 db    0
.rdata:003892EB                 db    0
.rdata:003892EC                 db    0
.rdata:003892ED                 db    0
.rdata:003892EE                 db    0
.rdata:003892EF                 db    0
.rdata:003892F0                 db    0
.rdata:003892F1                 db    0
.rdata:003892F2                 db    0
.rdata:003892F3                 db    0
.rdata:003892F4                 db    0
.rdata:003892F5                 db    0
.rdata:003892F6                 db    0
.rdata:003892F7                 db    0
.rdata:003892F8                 db    0
.rdata:003892F9                 db    0
.rdata:003892FA                 db    0
.rdata:003892FB                 db    0
.rdata:003892FC                 db    0
.rdata:003892FD                 db    0
.rdata:003892FE                 db    0
.rdata:003892FF                 db    0
.rdata:00389300                 db    0
.rdata:00389301                 db    0
.rdata:00389302                 db    0
.rdata:00389303                 db    0
.rdata:00389304                 db    0
.rdata:00389305                 db    0
.rdata:00389306                 db    0
.rdata:00389307                 db    0
.rdata:00389308                 db    0
.rdata:00389309                 db    0
.rdata:0038930A                 db    0
.rdata:0038930B                 db    0
.rdata:0038930C                 db    0
.rdata:0038930D                 db    0
.rdata:0038930E                 db    0
.rdata:0038930F                 db    0
.rdata:00389310                 db    0
.rdata:00389311                 db    0
.rdata:00389312                 db    0
.rdata:00389313                 db    0
.rdata:00389314                 db    0
.rdata:00389315                 db    0
.rdata:00389316                 db    0
.rdata:00389317                 db    0
.rdata:00389318                 db    0
.rdata:00389319                 db    0
.rdata:0038931A                 db    0
.rdata:0038931B                 db    0
.rdata:0038931C                 db    0
.rdata:0038931D                 db    0
.rdata:0038931E                 db    0
.rdata:0038931F                 db    0
.rdata:00389320                 db    0
.rdata:00389321                 db    0
.rdata:00389322                 db    0
.rdata:00389323                 db    0
.rdata:00389324                 db    0
.rdata:00389325                 db    0
.rdata:00389326                 db    0
.rdata:00389327                 db    0
.rdata:00389328                 db    0
.rdata:00389329                 db    0
.rdata:0038932A                 db    0
.rdata:0038932B                 db    0
.rdata:0038932C                 db    0
.rdata:0038932D                 db    0
.rdata:0038932E                 db    0
.rdata:0038932F                 db    0
.rdata:00389330                 db    0
.rdata:00389331                 db    0
.rdata:00389332                 db    0
.rdata:00389333                 db    0
.rdata:00389334                 db    0
.rdata:00389335                 db    0
.rdata:00389336                 db    0
.rdata:00389337                 db    0
.rdata:00389338                 db    0
.rdata:00389339                 db    0
.rdata:0038933A                 db    0
.rdata:0038933B                 db    0
.rdata:0038933C                 db    0
.rdata:0038933D                 db    0
.rdata:0038933E                 db    0
.rdata:0038933F                 db    0
.rdata:00389340                 db    0
.rdata:00389341                 db    0
.rdata:00389342                 db    0
.rdata:00389343                 db    0
.rdata:00389344                 db    0
.rdata:00389345                 db    0
.rdata:00389346                 db    0
.rdata:00389347                 db    0
.rdata:00389348                 db    0
.rdata:00389349                 db    0
.rdata:0038934A                 db    0
.rdata:0038934B                 db    0
.rdata:0038934C                 db    0
.rdata:0038934D                 db    0
.rdata:0038934E                 db    0
.rdata:0038934F                 db    0
.rdata:00389350                 db    0
.rdata:00389351                 db    0
.rdata:00389352                 db    0
.rdata:00389353                 db    0
.rdata:00389354                 db    0
.rdata:00389355                 db    0
.rdata:00389356                 db    0
.rdata:00389357                 db    0
.rdata:00389358                 db    0
.rdata:00389359                 db    0
.rdata:0038935A                 db    0
.rdata:0038935B                 db    0
.rdata:0038935C                 db    0
.rdata:0038935D                 db    0
.rdata:0038935E                 db    0
.rdata:0038935F                 db    0
.rdata:00389360                 db    0
.rdata:00389361                 db    0
.rdata:00389362                 db    0
.rdata:00389363                 db    0
.rdata:00389364                 db    0
.rdata:00389365                 db    0
.rdata:00389366                 db    0
.rdata:00389367                 db    0
.rdata:00389368                 db    0
.rdata:00389369                 db    0
.rdata:0038936A                 db    0
.rdata:0038936B                 db    0
.rdata:0038936C                 db    0
.rdata:0038936D                 db    0
.rdata:0038936E                 db    0
.rdata:0038936F                 db    0
.rdata:00389370                 db    0
.rdata:00389371                 db    0
.rdata:00389372                 db    0
.rdata:00389373                 db    0
.rdata:00389374                 db    0
.rdata:00389375                 db    0
.rdata:00389376                 db    0
.rdata:00389377                 db    0
.rdata:00389378                 db    0
.rdata:00389379                 db    0
.rdata:0038937A                 db    0
.rdata:0038937B                 db    0
.rdata:0038937C                 db    0
.rdata:0038937D                 db    0
.rdata:0038937E                 db    0
.rdata:0038937F                 db    0
.rdata:00389380                 db    0
.rdata:00389381                 db    0
.rdata:00389382                 db    0
.rdata:00389383                 db    0
.rdata:00389384                 db    0
.rdata:00389385                 db    0
.rdata:00389386                 db    0
.rdata:00389387                 db    0
.rdata:00389388                 db    0
.rdata:00389389                 db    0
.rdata:0038938A                 db    0
.rdata:0038938B                 db    0
.rdata:0038938C                 db    0
.rdata:0038938D                 db    0
.rdata:0038938E                 db    0
.rdata:0038938F                 db    0
.rdata:00389390                 db    0
.rdata:00389391                 db    0
.rdata:00389392                 db    0
.rdata:00389393                 db    0
.rdata:00389394                 db    0
.rdata:00389395                 db    0
.rdata:00389396                 db    0
.rdata:00389397                 db    0
.rdata:00389398                 db    0
.rdata:00389399                 db    0
.rdata:0038939A                 db    0
.rdata:0038939B                 db    0
.rdata:0038939C                 db    0
.rdata:0038939D                 db    0
.rdata:0038939E                 db    0
.rdata:0038939F                 db    0
.rdata:003893A0                 db    0
.rdata:003893A1                 db    0
.rdata:003893A2                 db    0
.rdata:003893A3                 db    0
.rdata:003893A4                 db    0
.rdata:003893A5                 db    0
.rdata:003893A6                 db    0
.rdata:003893A7                 db    0
.rdata:003893A8                 db    0
.rdata:003893A9                 db    0
.rdata:003893AA                 db    0
.rdata:003893AB                 db    0
.rdata:003893AC                 db    0
.rdata:003893AD                 db    0
.rdata:003893AE                 db    0
.rdata:003893AF                 db    0
.rdata:003893B0                 db    0
.rdata:003893B1                 db    0
.rdata:003893B2                 db    0
.rdata:003893B3                 db    0
.rdata:003893B4                 db    0
.rdata:003893B5                 db    0
.rdata:003893B6                 db    0
.rdata:003893B7                 db    0
.rdata:003893B8                 db    0
.rdata:003893B9                 db    0
.rdata:003893BA                 db    0
.rdata:003893BB                 db    0
.rdata:003893BC                 db    0
.rdata:003893BD                 db    0
.rdata:003893BE                 db    0
.rdata:003893BF                 db    0
.rdata:003893C0 stru_3893C0     dd 0FFFFFFFEh           ; GSCookieOffset
.rdata:003893C0                                         ; DATA XREF: sub_382240+5↑o
.rdata:003893C4                 dd 0                    ; GSCookieXOROffset
.rdata:003893C8                 dd 0FFFFFFACh           ; EHCookieOffset
.rdata:003893CC                 dd 0                    ; EHCookieXOROffset
.rdata:003893D0                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.rdata:003893D4                 dd offset loc_3823E3    ; ScopeRecord.FilterFunc
.rdata:003893D8                 dd offset loc_3823FE    ; ScopeRecord.HandlerFunc
.rdata:003893DC                 align 10h
.rdata:003893E0 stru_3893E0     dd 0FFFFFFFEh           ; GSCookieOffset
.rdata:003893E0                                         ; DATA XREF: sub_382C20+5↑o
.rdata:003893E4                 dd 0                    ; GSCookieXOROffset
.rdata:003893E8                 dd 0FFFFFFD8h           ; EHCookieOffset
.rdata:003893EC                 dd 0                    ; EHCookieXOROffset
.rdata:003893F0                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.rdata:003893F4                 dd offset loc_382C6E    ; ScopeRecord.FilterFunc
.rdata:003893F8                 dd offset loc_382C81    ; ScopeRecord.HandlerFunc
.rdata:003893FC                 align 10h
.rdata:00389400 stru_389400     dd 0FFFFFFFEh           ; GSCookieOffset
.rdata:00389400                                         ; DATA XREF: sub_3837C0+5↑o
.rdata:00389404                 dd 0                    ; GSCookieXOROffset
.rdata:00389408                 dd 0FFFFFFB8h           ; EHCookieOffset
.rdata:0038940C                 dd 0                    ; EHCookieXOROffset
.rdata:00389410                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.rdata:00389414                 dd offset loc_383896    ; ScopeRecord.FilterFunc
.rdata:00389418                 dd offset loc_3838BD    ; ScopeRecord.HandlerFunc
.rdata:0038941C                 align 1000h
.rdata:0038941C _rdata          ends
.rdata:0038941C
.data:0038A000 ; Section 4. (virtual address 0001A000)
.data:0038A000 ; Virtual size                  : 000006D0 (   1744.)
.data:0038A000 ; Section size in file          : 00000200 (    512.)
.data:0038A000 ; Offset to raw data for section: 00008600
.data:0038A000 ; Flags C0000040: Data Readable Writable
.data:0038A000 ; Alignment     : default
.data:0038A000 ; ===========================================================================
.data:0038A000
.data:0038A000 ; Segment type: Pure data
.data:0038A000 ; Segment permissions: Read/Write
.data:0038A000 _data           segment para public 'DATA' use32
.data:0038A000                 assume cs:_data
.data:0038A000                 ;org 38A000h
.data:0038A000 ; uintptr_t __security_cookie
.data:0038A000 ___security_cookie dd 0BB40E64Eh        ; DATA XREF: sub_3818A0+1E↑r
.data:0038A000                                         ; _main_0+1E↑r ...
.data:0038A004 dword_38A004    dd 44BF19B1h            ; DATA XREF: sub_382E50+EC↑r
.data:0038A004                                         ; sub_383B60+24↑w ...
.data:0038A008                 db    0
.data:0038A009                 db    0
.data:0038A00A                 db    0
.data:0038A00B                 db    0
.data:0038A00C ; int dword_38A00C
.data:0038A00C dword_38A00C    dd 1                    ; DATA XREF: sub_3827A0+B↑r
.data:0038A00C                                         ; .text:003832EB↑r ...
.data:0038A010                 db    1
.data:0038A011                 db    0
.data:0038A012                 db    0
.data:0038A013                 db    0
.data:0038A014 ; int dword_38A014
.data:0038A014 dword_38A014    dd 1                    ; DATA XREF: sub_382810+1C↑r
.data:0038A018 dword_38A018    dd 1                    ; DATA XREF: .text:00382CD8↑r
.data:0038A01C ; int dword_38A01C
.data:0038A01C dword_38A01C    dd 1                    ; DATA XREF: sub_382680+1B↑r
.data:0038A020                 db    0
.data:0038A021                 db    0
.data:0038A022                 db    0
.data:0038A023                 db    0
.data:0038A024                 db 0FFh
.data:0038A025                 db 0FFh
.data:0038A026                 db 0FFh
.data:0038A027                 db 0FFh
.data:0038A028 dword_38A028    dd 1                    ; DATA XREF: sub_383D60+4↑r
.data:0038A02C dword_38A02C    dd 1                    ; DATA XREF: sub_384F80+1C↑r
.data:0038A02C                                         ; sub_384F80+24↑w ...
.data:0038A030 dword_38A030    dd 1                    ; DATA XREF: sub_385380+4↑r
.data:0038A034                 db    0
.data:0038A035                 db    0
.data:0038A036                 db    0
.data:0038A037                 db    0
.data:0038A038                 db    0
.data:0038A039                 db    0
.data:0038A03A                 db    0
.data:0038A03B                 db    0
.data:0038A03C                 db    0
.data:0038A03D                 db    0
.data:0038A03E                 db    0
.data:0038A03F                 db    0
.data:0038A040                 db    0
.data:0038A041                 db    0
.data:0038A042                 db    0
.data:0038A043                 db    0
.data:0038A044                 db    0
.data:0038A045                 db    0
.data:0038A046                 db    0
.data:0038A047                 db    0
.data:0038A048                 db    0
.data:0038A049                 db    0
.data:0038A04A                 db    0
.data:0038A04B                 db    0
.data:0038A04C                 db    0
.data:0038A04D                 db    0
.data:0038A04E                 db    0
.data:0038A04F                 db    0
.data:0038A050                 db    0
.data:0038A051                 db    0
.data:0038A052                 db    0
.data:0038A053                 db    0
.data:0038A054                 db    0
.data:0038A055                 db    0
.data:0038A056                 db    0
.data:0038A057                 db    0
.data:0038A058                 db    0
.data:0038A059                 db    0
.data:0038A05A                 db    0
.data:0038A05B                 db    0
.data:0038A05C                 db    0
.data:0038A05D                 db    0
.data:0038A05E                 db    0
.data:0038A05F                 db    0
.data:0038A060                 db    0
.data:0038A061                 db    0
.data:0038A062                 db    0
.data:0038A063                 db    0
.data:0038A064                 db    0
.data:0038A065                 db    0
.data:0038A066                 db    0
.data:0038A067                 db    0
.data:0038A068                 db    0
.data:0038A069                 db    0
.data:0038A06A                 db    0
.data:0038A06B                 db    0
.data:0038A06C                 db    0
.data:0038A06D                 db    0
.data:0038A06E                 db    0
.data:0038A06F                 db    0
.data:0038A070                 db    0
.data:0038A071                 db    0
.data:0038A072                 db    0
.data:0038A073                 db    0
.data:0038A074                 db    0
.data:0038A075                 db    0
.data:0038A076                 db    0
.data:0038A077                 db    0
.data:0038A078                 db    0
.data:0038A079                 db    0
.data:0038A07A                 db    0
.data:0038A07B                 db    0
.data:0038A07C                 db    0
.data:0038A07D                 db    0
.data:0038A07E                 db    0
.data:0038A07F                 db    0
.data:0038A080                 db    0
.data:0038A081                 db    0
.data:0038A082                 db    0
.data:0038A083                 db    0
.data:0038A084                 db    0
.data:0038A085                 db    0
.data:0038A086                 db    0
.data:0038A087                 db    0
.data:0038A088                 db    0
.data:0038A089                 db    0
.data:0038A08A                 db    0
.data:0038A08B                 db    0
.data:0038A08C                 db    0
.data:0038A08D                 db    0
.data:0038A08E                 db    0
.data:0038A08F                 db    0
.data:0038A090                 db    0
.data:0038A091                 db    0
.data:0038A092                 db    0
.data:0038A093                 db    0
.data:0038A094                 db    0
.data:0038A095                 db    0
.data:0038A096                 db    0
.data:0038A097                 db    0
.data:0038A098                 db    0
.data:0038A099                 db    0
.data:0038A09A                 db    0
.data:0038A09B                 db    0
.data:0038A09C                 db    0
.data:0038A09D                 db    0
.data:0038A09E                 db    0
.data:0038A09F                 db    0
.data:0038A0A0                 db    0
.data:0038A0A1                 db    0
.data:0038A0A2                 db    0
.data:0038A0A3                 db    0
.data:0038A0A4                 db    0
.data:0038A0A5                 db    0
.data:0038A0A6                 db    0
.data:0038A0A7                 db    0
.data:0038A0A8                 db    0
.data:0038A0A9                 db    0
.data:0038A0AA                 db    0
.data:0038A0AB                 db    0
.data:0038A0AC                 db    0
.data:0038A0AD                 db    0
.data:0038A0AE                 db    0
.data:0038A0AF                 db    0
.data:0038A0B0                 db    0
.data:0038A0B1                 db    0
.data:0038A0B2                 db    0
.data:0038A0B3                 db    0
.data:0038A0B4                 db    0
.data:0038A0B5                 db    0
.data:0038A0B6                 db    0
.data:0038A0B7                 db    0
.data:0038A0B8                 db    0
.data:0038A0B9                 db    0
.data:0038A0BA                 db    0
.data:0038A0BB                 db    0
.data:0038A0BC                 db    0
.data:0038A0BD                 db    0
.data:0038A0BE                 db    0
.data:0038A0BF                 db    0
.data:0038A0C0                 db    0
.data:0038A0C1                 db    0
.data:0038A0C2                 db    0
.data:0038A0C3                 db    0
.data:0038A0C4                 db    0
.data:0038A0C5                 db    0
.data:0038A0C6                 db    0
.data:0038A0C7                 db    0
.data:0038A0C8                 db    0
.data:0038A0C9                 db    0
.data:0038A0CA                 db    0
.data:0038A0CB                 db    0
.data:0038A0CC                 db    0
.data:0038A0CD                 db    0
.data:0038A0CE                 db    0
.data:0038A0CF                 db    0
.data:0038A0D0                 db    0
.data:0038A0D1                 db    0
.data:0038A0D2                 db    0
.data:0038A0D3                 db    0
.data:0038A0D4                 db    0
.data:0038A0D5                 db    0
.data:0038A0D6                 db    0
.data:0038A0D7                 db    0
.data:0038A0D8                 db    0
.data:0038A0D9                 db    0
.data:0038A0DA                 db    0
.data:0038A0DB                 db    0
.data:0038A0DC                 db    0
.data:0038A0DD                 db    0
.data:0038A0DE                 db    0
.data:0038A0DF                 db    0
.data:0038A0E0                 db    0
.data:0038A0E1                 db    0
.data:0038A0E2                 db    0
.data:0038A0E3                 db    0
.data:0038A0E4                 db    0
.data:0038A0E5                 db    0
.data:0038A0E6                 db    0
.data:0038A0E7                 db    0
.data:0038A0E8                 db    0
.data:0038A0E9                 db    0
.data:0038A0EA                 db    0
.data:0038A0EB                 db    0
.data:0038A0EC                 db    0
.data:0038A0ED                 db    0
.data:0038A0EE                 db    0
.data:0038A0EF                 db    0
.data:0038A0F0                 db    0
.data:0038A0F1                 db    0
.data:0038A0F2                 db    0
.data:0038A0F3                 db    0
.data:0038A0F4                 db    0
.data:0038A0F5                 db    0
.data:0038A0F6                 db    0
.data:0038A0F7                 db    0
.data:0038A0F8                 db    0
.data:0038A0F9                 db    0
.data:0038A0FA                 db    0
.data:0038A0FB                 db    0
.data:0038A0FC                 db    0
.data:0038A0FD                 db    0
.data:0038A0FE                 db    0
.data:0038A0FF                 db    0
.data:0038A100                 db    0
.data:0038A101                 db    0
.data:0038A102                 db    0
.data:0038A103                 db    0
.data:0038A104                 db    0
.data:0038A105                 db    0
.data:0038A106                 db    0
.data:0038A107                 db    0
.data:0038A108                 db    0
.data:0038A109                 db    0
.data:0038A10A                 db    0
.data:0038A10B                 db    0
.data:0038A10C                 db    0
.data:0038A10D                 db    0
.data:0038A10E                 db    0
.data:0038A10F                 db    0
.data:0038A110                 db    0
.data:0038A111                 db    0
.data:0038A112                 db    0
.data:0038A113                 db    0
.data:0038A114                 db    0
.data:0038A115                 db    0
.data:0038A116                 db    0
.data:0038A117                 db    0
.data:0038A118                 db    0
.data:0038A119                 db    0
.data:0038A11A                 db    0
.data:0038A11B                 db    0
.data:0038A11C                 db    0
.data:0038A11D                 db    0
.data:0038A11E                 db    0
.data:0038A11F                 db    0
.data:0038A120                 db    0
.data:0038A121                 db    0
.data:0038A122                 db    0
.data:0038A123                 db    0
.data:0038A124                 db    0
.data:0038A125                 db    0
.data:0038A126                 db    0
.data:0038A127                 db    0
.data:0038A128                 db    0
.data:0038A129                 db    0
.data:0038A12A                 db    0
.data:0038A12B                 db    0
.data:0038A12C                 db    0
.data:0038A12D                 db    0
.data:0038A12E                 db    0
.data:0038A12F                 db    0
.data:0038A130                 db    0
.data:0038A131                 db    0
.data:0038A132                 db    0
.data:0038A133                 db    0
.data:0038A134                 db    0
.data:0038A135                 db    0
.data:0038A136                 db    0
.data:0038A137                 db    0
.data:0038A138 unk_38A138      db    0                 ; DATA XREF: sub_381A70+21↑o
.data:0038A139                 db    0
.data:0038A13A                 db    0
.data:0038A13B                 db    0
.data:0038A13C                 db    0
.data:0038A13D                 db    0
.data:0038A13E                 db    0
.data:0038A13F                 db    0
.data:0038A140 ; char Str2[320]
.data:0038A140 Str2            db 0C0h dup(0), 80h dup(?)
.data:0038A140                                         ; DATA XREF: _main_0+68↑o
.data:0038A140                                         ; _main_0+7D↑o ...
.data:0038A280 dword_38A280    dd ?                    ; DATA XREF: sub_382E50+A2↑w
.data:0038A280                                         ; sub_382FB0+96↑w ...
.data:0038A284 dword_38A284    dd ?                    ; DATA XREF: sub_382E50+AC↑w
.data:0038A284                                         ; sub_382FB0+A0↑w ...
.data:0038A288                 db    ? ;
.data:0038A289                 db    ? ;
.data:0038A28A                 db    ? ;
.data:0038A28B                 db    ? ;
.data:0038A28C dword_38A28C    dd ?                    ; DATA XREF: sub_382E50+9D↑w
.data:0038A28C                                         ; sub_382FB0+91↑w ...
.data:0038A290 dword_38A290    dd ?                    ; DATA XREF: sub_382E50+B6↑w
.data:0038A290                                         ; sub_382FB0+AA↑w ...
.data:0038A294 dword_38A294    dd ?                    ; DATA XREF: sub_382E50+C8↑w
.data:0038A294                                         ; sub_382FB0+BF↑w ...
.data:0038A298 dword_38A298    dd ?                    ; DATA XREF: .text:003831CF↑w
.data:0038A29C                 db    ? ;
.data:0038A29D                 db    ? ;
.data:0038A29E                 db    ? ;
.data:0038A29F                 db    ? ;
.data:0038A2A0                 db    ? ;
.data:0038A2A1                 db    ? ;
.data:0038A2A2                 db    ? ;
.data:0038A2A3                 db    ? ;
.data:0038A2A4                 db    ? ;
.data:0038A2A5                 db    ? ;
.data:0038A2A6                 db    ? ;
.data:0038A2A7                 db    ? ;
.data:0038A2A8                 db    ? ;
.data:0038A2A9                 db    ? ;
.data:0038A2AA                 db    ? ;
.data:0038A2AB                 db    ? ;
.data:0038A2AC                 db    ? ;
.data:0038A2AD                 db    ? ;
.data:0038A2AE                 db    ? ;
.data:0038A2AF                 db    ? ;
.data:0038A2B0                 db    ? ;
.data:0038A2B1                 db    ? ;
.data:0038A2B2                 db    ? ;
.data:0038A2B3                 db    ? ;
.data:0038A2B4                 db    ? ;
.data:0038A2B5                 db    ? ;
.data:0038A2B6                 db    ? ;
.data:0038A2B7                 db    ? ;
.data:0038A2B8                 db    ? ;
.data:0038A2B9                 db    ? ;
.data:0038A2BA                 db    ? ;
.data:0038A2BB                 db    ? ;
.data:0038A2BC                 db    ? ;
.data:0038A2BD                 db    ? ;
.data:0038A2BE                 db    ? ;
.data:0038A2BF                 db    ? ;
.data:0038A2C0                 db    ? ;
.data:0038A2C1                 db    ? ;
.data:0038A2C2                 db    ? ;
.data:0038A2C3                 db    ? ;
.data:0038A2C4                 db    ? ;
.data:0038A2C5                 db    ? ;
.data:0038A2C6                 db    ? ;
.data:0038A2C7                 db    ? ;
.data:0038A2C8                 db    ? ;
.data:0038A2C9                 db    ? ;
.data:0038A2CA                 db    ? ;
.data:0038A2CB                 db    ? ;
.data:0038A2CC                 db    ? ;
.data:0038A2CD                 db    ? ;
.data:0038A2CE                 db    ? ;
.data:0038A2CF                 db    ? ;
.data:0038A2D0 dword_38A2D0    dd ?                    ; DATA XREF: sub_382E50+8E↑w
.data:0038A2D0                                         ; .rdata:ExceptionInfo↑o
.data:0038A2D4                 db    ? ;
.data:0038A2D5                 db    ? ;
.data:0038A2D6                 db    ? ;
.data:0038A2D7                 db    ? ;
.data:0038A2D8                 db    ? ;
.data:0038A2D9                 db    ? ;
.data:0038A2DA                 db    ? ;
.data:0038A2DB                 db    ? ;
.data:0038A2DC                 db    ? ;
.data:0038A2DD                 db    ? ;
.data:0038A2DE                 db    ? ;
.data:0038A2DF                 db    ? ;
.data:0038A2E0                 db    ? ;
.data:0038A2E1                 db    ? ;
.data:0038A2E2                 db    ? ;
.data:0038A2E3                 db    ? ;
.data:0038A2E4                 db    ? ;
.data:0038A2E5                 db    ? ;
.data:0038A2E6                 db    ? ;
.data:0038A2E7                 db    ? ;
.data:0038A2E8                 db    ? ;
.data:0038A2E9                 db    ? ;
.data:0038A2EA                 db    ? ;
.data:0038A2EB                 db    ? ;
.data:0038A2EC                 db    ? ;
.data:0038A2ED                 db    ? ;
.data:0038A2EE                 db    ? ;
.data:0038A2EF                 db    ? ;
.data:0038A2F0                 db    ? ;
.data:0038A2F1                 db    ? ;
.data:0038A2F2                 db    ? ;
.data:0038A2F3                 db    ? ;
.data:0038A2F4                 db    ? ;
.data:0038A2F5                 db    ? ;
.data:0038A2F6                 db    ? ;
.data:0038A2F7                 db    ? ;
.data:0038A2F8                 db    ? ;
.data:0038A2F9                 db    ? ;
.data:0038A2FA                 db    ? ;
.data:0038A2FB                 db    ? ;
.data:0038A2FC                 db    ? ;
.data:0038A2FD                 db    ? ;
.data:0038A2FE                 db    ? ;
.data:0038A2FF                 db    ? ;
.data:0038A300                 db    ? ;
.data:0038A301                 db    ? ;
.data:0038A302                 db    ? ;
.data:0038A303                 db    ? ;
.data:0038A304                 db    ? ;
.data:0038A305                 db    ? ;
.data:0038A306                 db    ? ;
.data:0038A307                 db    ? ;
.data:0038A308                 db    ? ;
.data:0038A309                 db    ? ;
.data:0038A30A                 db    ? ;
.data:0038A30B                 db    ? ;
.data:0038A30C                 db    ? ;
.data:0038A30D                 db    ? ;
.data:0038A30E                 db    ? ;
.data:0038A30F                 db    ? ;
.data:0038A310                 db    ? ;
.data:0038A311                 db    ? ;
.data:0038A312                 db    ? ;
.data:0038A313                 db    ? ;
.data:0038A314                 db    ? ;
.data:0038A315                 db    ? ;
.data:0038A316                 db    ? ;
.data:0038A317                 db    ? ;
.data:0038A318                 db    ? ;
.data:0038A319                 db    ? ;
.data:0038A31A                 db    ? ;
.data:0038A31B                 db    ? ;
.data:0038A31C                 db    ? ;
.data:0038A31D                 db    ? ;
.data:0038A31E                 db    ? ;
.data:0038A31F                 db    ? ;
.data:0038A320                 db    ? ;
.data:0038A321                 db    ? ;
.data:0038A322                 db    ? ;
.data:0038A323                 db    ? ;
.data:0038A324                 db    ? ;
.data:0038A325                 db    ? ;
.data:0038A326                 db    ? ;
.data:0038A327                 db    ? ;
.data:0038A328                 db    ? ;
.data:0038A329                 db    ? ;
.data:0038A32A                 db    ? ;
.data:0038A32B                 db    ? ;
.data:0038A32C                 db    ? ;
.data:0038A32D                 db    ? ;
.data:0038A32E                 db    ? ;
.data:0038A32F                 db    ? ;
.data:0038A330                 db    ? ;
.data:0038A331                 db    ? ;
.data:0038A332                 db    ? ;
.data:0038A333                 db    ? ;
.data:0038A334                 db    ? ;
.data:0038A335                 db    ? ;
.data:0038A336                 db    ? ;
.data:0038A337                 db    ? ;
.data:0038A338                 db    ? ;
.data:0038A339                 db    ? ;
.data:0038A33A                 db    ? ;
.data:0038A33B                 db    ? ;
.data:0038A33C                 db    ? ;
.data:0038A33D                 db    ? ;
.data:0038A33E                 db    ? ;
.data:0038A33F                 db    ? ;
.data:0038A340                 db    ? ;
.data:0038A341                 db    ? ;
.data:0038A342                 db    ? ;
.data:0038A343                 db    ? ;
.data:0038A344                 db    ? ;
.data:0038A345                 db    ? ;
.data:0038A346                 db    ? ;
.data:0038A347                 db    ? ;
.data:0038A348                 db    ? ;
.data:0038A349                 db    ? ;
.data:0038A34A                 db    ? ;
.data:0038A34B                 db    ? ;
.data:0038A34C                 db    ? ;
.data:0038A34D                 db    ? ;
.data:0038A34E                 db    ? ;
.data:0038A34F                 db    ? ;
.data:0038A350                 db    ? ;
.data:0038A351                 db    ? ;
.data:0038A352                 db    ? ;
.data:0038A353                 db    ? ;
.data:0038A354                 db    ? ;
.data:0038A355                 db    ? ;
.data:0038A356                 db    ? ;
.data:0038A357                 db    ? ;
.data:0038A358                 db    ? ;
.data:0038A359                 db    ? ;
.data:0038A35A                 db    ? ;
.data:0038A35B                 db    ? ;
.data:0038A35C word_38A35C     dw ?                    ; DATA XREF: sub_382E50+62↑w
.data:0038A35C                                         ; sub_382FB0+60↑w ...
.data:0038A35E                 align 10h
.data:0038A360 word_38A360     dw ?                    ; DATA XREF: sub_382E50+5B↑w
.data:0038A360                                         ; sub_382FB0+59↑w ...
.data:0038A362                 align 4
.data:0038A364 word_38A364     dw ?                    ; DATA XREF: sub_382E50+54↑w
.data:0038A364                                         ; sub_382FB0+52↑w ...
.data:0038A366                 align 4
.data:0038A368 word_38A368     dw ?                    ; DATA XREF: sub_382E50+4D↑w
.data:0038A368                                         ; sub_382FB0+4B↑w ...
.data:0038A36A                 align 4
.data:0038A36C dword_38A36C    dd ?                    ; DATA XREF: sub_382E50+39↑w
.data:0038A36C                                         ; sub_382FB0+37↑w ...
.data:0038A370 dword_38A370    dd ?                    ; DATA XREF: sub_382E50+33↑w
.data:0038A370                                         ; sub_382FB0+31↑w ...
.data:0038A374 dword_38A374    dd ?                    ; DATA XREF: sub_382E50+2D↑w
.data:0038A374                                         ; sub_382FB0+2B↑w ...
.data:0038A378 dword_38A378    dd ?                    ; DATA XREF: sub_382E50+27↑w
.data:0038A378                                         ; sub_382FB0+25↑w ...
.data:0038A37C dword_38A37C    dd ?                    ; DATA XREF: sub_382E50+21↑w
.data:0038A37C                                         ; sub_382FB0+1F↑w ...
.data:0038A380 dword_38A380    dd ?                    ; DATA XREF: sub_382E50:loc_382E6C↑w
.data:0038A380                                         ; sub_382FB0:loc_382FCA↑w ...
.data:0038A384 dword_38A384    dd ?                    ; DATA XREF: sub_382E50+73↑w
.data:0038A384                                         ; sub_382FB0+71↑w ...
.data:0038A388 dword_38A388    dd ?                    ; DATA XREF: sub_382E50+7B↑w
.data:0038A388                                         ; sub_382E50+98↑r ...
.data:0038A38C word_38A38C     dw ?                    ; DATA XREF: sub_382E50+46↑w
.data:0038A38C                                         ; sub_382FB0+44↑w ...
.data:0038A38E                 align 10h
.data:0038A390 dword_38A390    dd ?                    ; DATA XREF: sub_382E50+6A↑w
.data:0038A390                                         ; sub_382FB0+68↑w ...
.data:0038A394 dword_38A394    dd ?                    ; DATA XREF: sub_382E50+83↑w
.data:0038A394                                         ; sub_382FB0+81↑w ...
.data:0038A398 word_38A398     dw ?                    ; DATA XREF: sub_382E50+3F↑w
.data:0038A398                                         ; sub_382FB0+3D↑w ...
.data:0038A39A                 db    ? ;
.data:0038A39B                 db    ? ;
.data:0038A39C                 db    ? ;
.data:0038A39D                 db    ? ;
.data:0038A39E                 db    ? ;
.data:0038A39F                 db    ? ;
.data:0038A3A0                 db    ? ;
.data:0038A3A1                 db    ? ;
.data:0038A3A2                 db    ? ;
.data:0038A3A3                 db    ? ;
.data:0038A3A4                 db    ? ;
.data:0038A3A5                 db    ? ;
.data:0038A3A6                 db    ? ;
.data:0038A3A7                 db    ? ;
.data:0038A3A8                 db    ? ;
.data:0038A3A9                 db    ? ;
.data:0038A3AA                 db    ? ;
.data:0038A3AB                 db    ? ;
.data:0038A3AC                 db    ? ;
.data:0038A3AD                 db    ? ;
.data:0038A3AE                 db    ? ;
.data:0038A3AF                 db    ? ;
.data:0038A3B0                 db    ? ;
.data:0038A3B1                 db    ? ;
.data:0038A3B2                 db    ? ;
.data:0038A3B3                 db    ? ;
.data:0038A3B4                 db    ? ;
.data:0038A3B5                 db    ? ;
.data:0038A3B6                 db    ? ;
.data:0038A3B7                 db    ? ;
.data:0038A3B8                 db    ? ;
.data:0038A3B9                 db    ? ;
.data:0038A3BA                 db    ? ;
.data:0038A3BB                 db    ? ;
.data:0038A3BC                 db    ? ;
.data:0038A3BD                 db    ? ;
.data:0038A3BE                 db    ? ;
.data:0038A3BF                 db    ? ;
.data:0038A3C0                 db    ? ;
.data:0038A3C1                 db    ? ;
.data:0038A3C2                 db    ? ;
.data:0038A3C3                 db    ? ;
.data:0038A3C4                 db    ? ;
.data:0038A3C5                 db    ? ;
.data:0038A3C6                 db    ? ;
.data:0038A3C7                 db    ? ;
.data:0038A3C8                 db    ? ;
.data:0038A3C9                 db    ? ;
.data:0038A3CA                 db    ? ;
.data:0038A3CB                 db    ? ;
.data:0038A3CC                 db    ? ;
.data:0038A3CD                 db    ? ;
.data:0038A3CE                 db    ? ;
.data:0038A3CF                 db    ? ;
.data:0038A3D0                 db    ? ;
.data:0038A3D1                 db    ? ;
.data:0038A3D2                 db    ? ;
.data:0038A3D3                 db    ? ;
.data:0038A3D4                 db    ? ;
.data:0038A3D5                 db    ? ;
.data:0038A3D6                 db    ? ;
.data:0038A3D7                 db    ? ;
.data:0038A3D8                 db    ? ;
.data:0038A3D9                 db    ? ;
.data:0038A3DA                 db    ? ;
.data:0038A3DB                 db    ? ;
.data:0038A3DC                 db    ? ;
.data:0038A3DD                 db    ? ;
.data:0038A3DE                 db    ? ;
.data:0038A3DF                 db    ? ;
.data:0038A3E0                 db    ? ;
.data:0038A3E1                 db    ? ;
.data:0038A3E2                 db    ? ;
.data:0038A3E3                 db    ? ;
.data:0038A3E4                 db    ? ;
.data:0038A3E5                 db    ? ;
.data:0038A3E6                 db    ? ;
.data:0038A3E7                 db    ? ;
.data:0038A3E8                 db    ? ;
.data:0038A3E9                 db    ? ;
.data:0038A3EA                 db    ? ;
.data:0038A3EB                 db    ? ;
.data:0038A3EC                 db    ? ;
.data:0038A3ED                 db    ? ;
.data:0038A3EE                 db    ? ;
.data:0038A3EF                 db    ? ;
.data:0038A3F0                 db    ? ;
.data:0038A3F1                 db    ? ;
.data:0038A3F2                 db    ? ;
.data:0038A3F3                 db    ? ;
.data:0038A3F4                 db    ? ;
.data:0038A3F5                 db    ? ;
.data:0038A3F6                 db    ? ;
.data:0038A3F7                 db    ? ;
.data:0038A3F8                 db    ? ;
.data:0038A3F9                 db    ? ;
.data:0038A3FA                 db    ? ;
.data:0038A3FB                 db    ? ;
.data:0038A3FC                 db    ? ;
.data:0038A3FD                 db    ? ;
.data:0038A3FE                 db    ? ;
.data:0038A3FF                 db    ? ;
.data:0038A400                 db    ? ;
.data:0038A401                 db    ? ;
.data:0038A402                 db    ? ;
.data:0038A403                 db    ? ;
.data:0038A404                 db    ? ;
.data:0038A405                 db    ? ;
.data:0038A406                 db    ? ;
.data:0038A407                 db    ? ;
.data:0038A408                 db    ? ;
.data:0038A409                 db    ? ;
.data:0038A40A                 db    ? ;
.data:0038A40B                 db    ? ;
.data:0038A40C                 db    ? ;
.data:0038A40D                 db    ? ;
.data:0038A40E                 db    ? ;
.data:0038A40F                 db    ? ;
.data:0038A410                 db    ? ;
.data:0038A411                 db    ? ;
.data:0038A412                 db    ? ;
.data:0038A413                 db    ? ;
.data:0038A414                 db    ? ;
.data:0038A415                 db    ? ;
.data:0038A416                 db    ? ;
.data:0038A417                 db    ? ;
.data:0038A418                 db    ? ;
.data:0038A419                 db    ? ;
.data:0038A41A                 db    ? ;
.data:0038A41B                 db    ? ;
.data:0038A41C                 db    ? ;
.data:0038A41D                 db    ? ;
.data:0038A41E                 db    ? ;
.data:0038A41F                 db    ? ;
.data:0038A420                 db    ? ;
.data:0038A421                 db    ? ;
.data:0038A422                 db    ? ;
.data:0038A423                 db    ? ;
.data:0038A424                 db    ? ;
.data:0038A425                 db    ? ;
.data:0038A426                 db    ? ;
.data:0038A427                 db    ? ;
.data:0038A428                 db    ? ;
.data:0038A429                 db    ? ;
.data:0038A42A                 db    ? ;
.data:0038A42B                 db    ? ;
.data:0038A42C                 db    ? ;
.data:0038A42D                 db    ? ;
.data:0038A42E                 db    ? ;
.data:0038A42F                 db    ? ;
.data:0038A430                 db    ? ;
.data:0038A431                 db    ? ;
.data:0038A432                 db    ? ;
.data:0038A433                 db    ? ;
.data:0038A434                 db    ? ;
.data:0038A435                 db    ? ;
.data:0038A436                 db    ? ;
.data:0038A437                 db    ? ;
.data:0038A438                 db    ? ;
.data:0038A439                 db    ? ;
.data:0038A43A                 db    ? ;
.data:0038A43B                 db    ? ;
.data:0038A43C                 db    ? ;
.data:0038A43D                 db    ? ;
.data:0038A43E                 db    ? ;
.data:0038A43F                 db    ? ;
.data:0038A440                 db    ? ;
.data:0038A441                 db    ? ;
.data:0038A442                 db    ? ;
.data:0038A443                 db    ? ;
.data:0038A444                 db    ? ;
.data:0038A445                 db    ? ;
.data:0038A446                 db    ? ;
.data:0038A447                 db    ? ;
.data:0038A448                 db    ? ;
.data:0038A449                 db    ? ;
.data:0038A44A                 db    ? ;
.data:0038A44B                 db    ? ;
.data:0038A44C                 db    ? ;
.data:0038A44D                 db    ? ;
.data:0038A44E                 db    ? ;
.data:0038A44F                 db    ? ;
.data:0038A450                 db    ? ;
.data:0038A451                 db    ? ;
.data:0038A452                 db    ? ;
.data:0038A453                 db    ? ;
.data:0038A454                 db    ? ;
.data:0038A455                 db    ? ;
.data:0038A456                 db    ? ;
.data:0038A457                 db    ? ;
.data:0038A458                 db    ? ;
.data:0038A459                 db    ? ;
.data:0038A45A                 db    ? ;
.data:0038A45B                 db    ? ;
.data:0038A45C                 db    ? ;
.data:0038A45D                 db    ? ;
.data:0038A45E                 db    ? ;
.data:0038A45F                 db    ? ;
.data:0038A460                 db    ? ;
.data:0038A461                 db    ? ;
.data:0038A462                 db    ? ;
.data:0038A463                 db    ? ;
.data:0038A464                 db    ? ;
.data:0038A465                 db    ? ;
.data:0038A466                 db    ? ;
.data:0038A467                 db    ? ;
.data:0038A468                 db    ? ;
.data:0038A469                 db    ? ;
.data:0038A46A                 db    ? ;
.data:0038A46B                 db    ? ;
.data:0038A46C                 db    ? ;
.data:0038A46D                 db    ? ;
.data:0038A46E                 db    ? ;
.data:0038A46F                 db    ? ;
.data:0038A470                 db    ? ;
.data:0038A471                 db    ? ;
.data:0038A472                 db    ? ;
.data:0038A473                 db    ? ;
.data:0038A474                 db    ? ;
.data:0038A475                 db    ? ;
.data:0038A476                 db    ? ;
.data:0038A477                 db    ? ;
.data:0038A478                 db    ? ;
.data:0038A479                 db    ? ;
.data:0038A47A                 db    ? ;
.data:0038A47B                 db    ? ;
.data:0038A47C                 db    ? ;
.data:0038A47D                 db    ? ;
.data:0038A47E                 db    ? ;
.data:0038A47F                 db    ? ;
.data:0038A480                 db    ? ;
.data:0038A481                 db    ? ;
.data:0038A482                 db    ? ;
.data:0038A483                 db    ? ;
.data:0038A484                 db    ? ;
.data:0038A485                 db    ? ;
.data:0038A486                 db    ? ;
.data:0038A487                 db    ? ;
.data:0038A488                 db    ? ;
.data:0038A489                 db    ? ;
.data:0038A48A                 db    ? ;
.data:0038A48B                 db    ? ;
.data:0038A48C                 db    ? ;
.data:0038A48D                 db    ? ;
.data:0038A48E                 db    ? ;
.data:0038A48F                 db    ? ;
.data:0038A490                 db    ? ;
.data:0038A491                 db    ? ;
.data:0038A492                 db    ? ;
.data:0038A493                 db    ? ;
.data:0038A494                 db    ? ;
.data:0038A495                 db    ? ;
.data:0038A496                 db    ? ;
.data:0038A497                 db    ? ;
.data:0038A498                 db    ? ;
.data:0038A499                 db    ? ;
.data:0038A49A                 db    ? ;
.data:0038A49B                 db    ? ;
.data:0038A49C                 db    ? ;
.data:0038A49D                 db    ? ;
.data:0038A49E                 db    ? ;
.data:0038A49F                 db    ? ;
.data:0038A4A0                 db    ? ;
.data:0038A4A1                 db    ? ;
.data:0038A4A2                 db    ? ;
.data:0038A4A3                 db    ? ;
.data:0038A4A4                 db    ? ;
.data:0038A4A5                 db    ? ;
.data:0038A4A6                 db    ? ;
.data:0038A4A7                 db    ? ;
.data:0038A4A8                 db    ? ;
.data:0038A4A9                 db    ? ;
.data:0038A4AA                 db    ? ;
.data:0038A4AB                 db    ? ;
.data:0038A4AC                 db    ? ;
.data:0038A4AD                 db    ? ;
.data:0038A4AE                 db    ? ;
.data:0038A4AF                 db    ? ;
.data:0038A4B0                 db    ? ;
.data:0038A4B1                 db    ? ;
.data:0038A4B2                 db    ? ;
.data:0038A4B3                 db    ? ;
.data:0038A4B4                 db    ? ;
.data:0038A4B5                 db    ? ;
.data:0038A4B6                 db    ? ;
.data:0038A4B7                 db    ? ;
.data:0038A4B8                 db    ? ;
.data:0038A4B9                 db    ? ;
.data:0038A4BA                 db    ? ;
.data:0038A4BB                 db    ? ;
.data:0038A4BC                 db    ? ;
.data:0038A4BD                 db    ? ;
.data:0038A4BE                 db    ? ;
.data:0038A4BF                 db    ? ;
.data:0038A4C0                 db    ? ;
.data:0038A4C1                 db    ? ;
.data:0038A4C2                 db    ? ;
.data:0038A4C3                 db    ? ;
.data:0038A4C4                 db    ? ;
.data:0038A4C5                 db    ? ;
.data:0038A4C6                 db    ? ;
.data:0038A4C7                 db    ? ;
.data:0038A4C8                 db    ? ;
.data:0038A4C9                 db    ? ;
.data:0038A4CA                 db    ? ;
.data:0038A4CB                 db    ? ;
.data:0038A4CC                 db    ? ;
.data:0038A4CD                 db    ? ;
.data:0038A4CE                 db    ? ;
.data:0038A4CF                 db    ? ;
.data:0038A4D0                 db    ? ;
.data:0038A4D1                 db    ? ;
.data:0038A4D2                 db    ? ;
.data:0038A4D3                 db    ? ;
.data:0038A4D4                 db    ? ;
.data:0038A4D5                 db    ? ;
.data:0038A4D6                 db    ? ;
.data:0038A4D7                 db    ? ;
.data:0038A4D8                 db    ? ;
.data:0038A4D9                 db    ? ;
.data:0038A4DA                 db    ? ;
.data:0038A4DB                 db    ? ;
.data:0038A4DC                 db    ? ;
.data:0038A4DD                 db    ? ;
.data:0038A4DE                 db    ? ;
.data:0038A4DF                 db    ? ;
.data:0038A4E0                 db    ? ;
.data:0038A4E1                 db    ? ;
.data:0038A4E2                 db    ? ;
.data:0038A4E3                 db    ? ;
.data:0038A4E4                 db    ? ;
.data:0038A4E5                 db    ? ;
.data:0038A4E6                 db    ? ;
.data:0038A4E7                 db    ? ;
.data:0038A4E8                 db    ? ;
.data:0038A4E9                 db    ? ;
.data:0038A4EA                 db    ? ;
.data:0038A4EB                 db    ? ;
.data:0038A4EC                 db    ? ;
.data:0038A4ED                 db    ? ;
.data:0038A4EE                 db    ? ;
.data:0038A4EF                 db    ? ;
.data:0038A4F0                 db    ? ;
.data:0038A4F1                 db    ? ;
.data:0038A4F2                 db    ? ;
.data:0038A4F3                 db    ? ;
.data:0038A4F4                 db    ? ;
.data:0038A4F5                 db    ? ;
.data:0038A4F6                 db    ? ;
.data:0038A4F7                 db    ? ;
.data:0038A4F8                 db    ? ;
.data:0038A4F9                 db    ? ;
.data:0038A4FA                 db    ? ;
.data:0038A4FB                 db    ? ;
.data:0038A4FC                 db    ? ;
.data:0038A4FD                 db    ? ;
.data:0038A4FE                 db    ? ;
.data:0038A4FF                 db    ? ;
.data:0038A500                 db    ? ;
.data:0038A501                 db    ? ;
.data:0038A502                 db    ? ;
.data:0038A503                 db    ? ;
.data:0038A504                 db    ? ;
.data:0038A505                 db    ? ;
.data:0038A506                 db    ? ;
.data:0038A507                 db    ? ;
.data:0038A508                 db    ? ;
.data:0038A509                 db    ? ;
.data:0038A50A                 db    ? ;
.data:0038A50B                 db    ? ;
.data:0038A50C                 db    ? ;
.data:0038A50D                 db    ? ;
.data:0038A50E                 db    ? ;
.data:0038A50F                 db    ? ;
.data:0038A510                 db    ? ;
.data:0038A511                 db    ? ;
.data:0038A512                 db    ? ;
.data:0038A513                 db    ? ;
.data:0038A514                 db    ? ;
.data:0038A515                 db    ? ;
.data:0038A516                 db    ? ;
.data:0038A517                 db    ? ;
.data:0038A518                 db    ? ;
.data:0038A519                 db    ? ;
.data:0038A51A                 db    ? ;
.data:0038A51B                 db    ? ;
.data:0038A51C                 db    ? ;
.data:0038A51D                 db    ? ;
.data:0038A51E                 db    ? ;
.data:0038A51F                 db    ? ;
.data:0038A520                 db    ? ;
.data:0038A521                 db    ? ;
.data:0038A522                 db    ? ;
.data:0038A523                 db    ? ;
.data:0038A524                 db    ? ;
.data:0038A525                 db    ? ;
.data:0038A526                 db    ? ;
.data:0038A527                 db    ? ;
.data:0038A528                 db    ? ;
.data:0038A529                 db    ? ;
.data:0038A52A                 db    ? ;
.data:0038A52B                 db    ? ;
.data:0038A52C                 db    ? ;
.data:0038A52D                 db    ? ;
.data:0038A52E                 db    ? ;
.data:0038A52F                 db    ? ;
.data:0038A530                 db    ? ;
.data:0038A531                 db    ? ;
.data:0038A532                 db    ? ;
.data:0038A533                 db    ? ;
.data:0038A534                 db    ? ;
.data:0038A535                 db    ? ;
.data:0038A536                 db    ? ;
.data:0038A537                 db    ? ;
.data:0038A538                 db    ? ;
.data:0038A539                 db    ? ;
.data:0038A53A                 db    ? ;
.data:0038A53B                 db    ? ;
.data:0038A53C                 db    ? ;
.data:0038A53D                 db    ? ;
.data:0038A53E                 db    ? ;
.data:0038A53F                 db    ? ;
.data:0038A540                 db    ? ;
.data:0038A541                 db    ? ;
.data:0038A542                 db    ? ;
.data:0038A543                 db    ? ;
.data:0038A544                 db    ? ;
.data:0038A545                 db    ? ;
.data:0038A546                 db    ? ;
.data:0038A547                 db    ? ;
.data:0038A548                 db    ? ;
.data:0038A549                 db    ? ;
.data:0038A54A                 db    ? ;
.data:0038A54B                 db    ? ;
.data:0038A54C                 db    ? ;
.data:0038A54D                 db    ? ;
.data:0038A54E                 db    ? ;
.data:0038A54F                 db    ? ;
.data:0038A550                 db    ? ;
.data:0038A551                 db    ? ;
.data:0038A552                 db    ? ;
.data:0038A553                 db    ? ;
.data:0038A554                 db    ? ;
.data:0038A555                 db    ? ;
.data:0038A556                 db    ? ;
.data:0038A557                 db    ? ;
.data:0038A558                 db    ? ;
.data:0038A559                 db    ? ;
.data:0038A55A                 db    ? ;
.data:0038A55B                 db    ? ;
.data:0038A55C                 db    ? ;
.data:0038A55D                 db    ? ;
.data:0038A55E                 db    ? ;
.data:0038A55F                 db    ? ;
.data:0038A560                 db    ? ;
.data:0038A561                 db    ? ;
.data:0038A562                 db    ? ;
.data:0038A563                 db    ? ;
.data:0038A564                 db    ? ;
.data:0038A565                 db    ? ;
.data:0038A566                 db    ? ;
.data:0038A567                 db    ? ;
.data:0038A568                 db    ? ;
.data:0038A569                 db    ? ;
.data:0038A56A                 db    ? ;
.data:0038A56B                 db    ? ;
.data:0038A56C                 db    ? ;
.data:0038A56D                 db    ? ;
.data:0038A56E                 db    ? ;
.data:0038A56F                 db    ? ;
.data:0038A570                 db    ? ;
.data:0038A571                 db    ? ;
.data:0038A572                 db    ? ;
.data:0038A573                 db    ? ;
.data:0038A574                 db    ? ;
.data:0038A575                 db    ? ;
.data:0038A576                 db    ? ;
.data:0038A577                 db    ? ;
.data:0038A578                 db    ? ;
.data:0038A579                 db    ? ;
.data:0038A57A                 db    ? ;
.data:0038A57B                 db    ? ;
.data:0038A57C                 db    ? ;
.data:0038A57D                 db    ? ;
.data:0038A57E                 db    ? ;
.data:0038A57F                 db    ? ;
.data:0038A580                 db    ? ;
.data:0038A581                 db    ? ;
.data:0038A582                 db    ? ;
.data:0038A583                 db    ? ;
.data:0038A584                 db    ? ;
.data:0038A585                 db    ? ;
.data:0038A586                 db    ? ;
.data:0038A587                 db    ? ;
.data:0038A588                 db    ? ;
.data:0038A589                 db    ? ;
.data:0038A58A                 db    ? ;
.data:0038A58B                 db    ? ;
.data:0038A58C                 db    ? ;
.data:0038A58D                 db    ? ;
.data:0038A58E                 db    ? ;
.data:0038A58F                 db    ? ;
.data:0038A590                 db    ? ;
.data:0038A591                 db    ? ;
.data:0038A592                 db    ? ;
.data:0038A593                 db    ? ;
.data:0038A594                 db    ? ;
.data:0038A595                 db    ? ;
.data:0038A596                 db    ? ;
.data:0038A597                 db    ? ;
.data:0038A598                 db    ? ;
.data:0038A599                 db    ? ;
.data:0038A59A                 db    ? ;
.data:0038A59B                 db    ? ;
.data:0038A59C                 db    ? ;
.data:0038A59D                 db    ? ;
.data:0038A59E                 db    ? ;
.data:0038A59F                 db    ? ;
.data:0038A5A0                 db    ? ;
.data:0038A5A1                 db    ? ;
.data:0038A5A2                 db    ? ;
.data:0038A5A3                 db    ? ;
.data:0038A5A4                 db    ? ;
.data:0038A5A5                 db    ? ;
.data:0038A5A6                 db    ? ;
.data:0038A5A7                 db    ? ;
.data:0038A5A8                 db    ? ;
.data:0038A5A9                 db    ? ;
.data:0038A5AA                 db    ? ;
.data:0038A5AB                 db    ? ;
.data:0038A5AC                 db    ? ;
.data:0038A5AD                 db    ? ;
.data:0038A5AE                 db    ? ;
.data:0038A5AF                 db    ? ;
.data:0038A5B0                 db    ? ;
.data:0038A5B1                 db    ? ;
.data:0038A5B2                 db    ? ;
.data:0038A5B3                 db    ? ;
.data:0038A5B4                 db    ? ;
.data:0038A5B5                 db    ? ;
.data:0038A5B6                 db    ? ;
.data:0038A5B7                 db    ? ;
.data:0038A5B8                 db    ? ;
.data:0038A5B9                 db    ? ;
.data:0038A5BA                 db    ? ;
.data:0038A5BB                 db    ? ;
.data:0038A5BC                 db    ? ;
.data:0038A5BD                 db    ? ;
.data:0038A5BE                 db    ? ;
.data:0038A5BF                 db    ? ;
.data:0038A5C0                 db    ? ;
.data:0038A5C1                 db    ? ;
.data:0038A5C2                 db    ? ;
.data:0038A5C3                 db    ? ;
.data:0038A5C4                 db    ? ;
.data:0038A5C5                 db    ? ;
.data:0038A5C6                 db    ? ;
.data:0038A5C7                 db    ? ;
.data:0038A5C8                 db    ? ;
.data:0038A5C9                 db    ? ;
.data:0038A5CA                 db    ? ;
.data:0038A5CB                 db    ? ;
.data:0038A5CC                 db    ? ;
.data:0038A5CD                 db    ? ;
.data:0038A5CE                 db    ? ;
.data:0038A5CF                 db    ? ;
.data:0038A5D0                 db    ? ;
.data:0038A5D1                 db    ? ;
.data:0038A5D2                 db    ? ;
.data:0038A5D3                 db    ? ;
.data:0038A5D4                 db    ? ;
.data:0038A5D5                 db    ? ;
.data:0038A5D6                 db    ? ;
.data:0038A5D7                 db    ? ;
.data:0038A5D8                 db    ? ;
.data:0038A5D9                 db    ? ;
.data:0038A5DA                 db    ? ;
.data:0038A5DB                 db    ? ;
.data:0038A5DC                 db    ? ;
.data:0038A5DD                 db    ? ;
.data:0038A5DE                 db    ? ;
.data:0038A5DF                 db    ? ;
.data:0038A5E0                 db    ? ;
.data:0038A5E1                 db    ? ;
.data:0038A5E2                 db    ? ;
.data:0038A5E3                 db    ? ;
.data:0038A5E4                 db    ? ;
.data:0038A5E5                 db    ? ;
.data:0038A5E6                 db    ? ;
.data:0038A5E7                 db    ? ;
.data:0038A5E8                 db    ? ;
.data:0038A5E9                 db    ? ;
.data:0038A5EA                 db    ? ;
.data:0038A5EB                 db    ? ;
.data:0038A5EC                 db    ? ;
.data:0038A5ED                 db    ? ;
.data:0038A5EE                 db    ? ;
.data:0038A5EF                 db    ? ;
.data:0038A5F0                 db    ? ;
.data:0038A5F1                 db    ? ;
.data:0038A5F2                 db    ? ;
.data:0038A5F3                 db    ? ;
.data:0038A5F4                 db    ? ;
.data:0038A5F5                 db    ? ;
.data:0038A5F6                 db    ? ;
.data:0038A5F7                 db    ? ;
.data:0038A5F8                 db    ? ;
.data:0038A5F9                 db    ? ;
.data:0038A5FA                 db    ? ;
.data:0038A5FB                 db    ? ;
.data:0038A5FC                 db    ? ;
.data:0038A5FD                 db    ? ;
.data:0038A5FE                 db    ? ;
.data:0038A5FF                 db    ? ;
.data:0038A600                 db    ? ;
.data:0038A601                 db    ? ;
.data:0038A602                 db    ? ;
.data:0038A603                 db    ? ;
.data:0038A604                 db    ? ;
.data:0038A605                 db    ? ;
.data:0038A606                 db    ? ;
.data:0038A607                 db    ? ;
.data:0038A608                 db    ? ;
.data:0038A609                 db    ? ;
.data:0038A60A                 db    ? ;
.data:0038A60B                 db    ? ;
.data:0038A60C                 db    ? ;
.data:0038A60D                 db    ? ;
.data:0038A60E                 db    ? ;
.data:0038A60F                 db    ? ;
.data:0038A610                 db    ? ;
.data:0038A611                 db    ? ;
.data:0038A612                 db    ? ;
.data:0038A613                 db    ? ;
.data:0038A614                 db    ? ;
.data:0038A615                 db    ? ;
.data:0038A616                 db    ? ;
.data:0038A617                 db    ? ;
.data:0038A618                 db    ? ;
.data:0038A619                 db    ? ;
.data:0038A61A                 db    ? ;
.data:0038A61B                 db    ? ;
.data:0038A61C                 db    ? ;
.data:0038A61D                 db    ? ;
.data:0038A61E                 db    ? ;
.data:0038A61F                 db    ? ;
.data:0038A620                 db    ? ;
.data:0038A621                 db    ? ;
.data:0038A622                 db    ? ;
.data:0038A623                 db    ? ;
.data:0038A624                 db    ? ;
.data:0038A625                 db    ? ;
.data:0038A626                 db    ? ;
.data:0038A627                 db    ? ;
.data:0038A628                 db    ? ;
.data:0038A629                 db    ? ;
.data:0038A62A                 db    ? ;
.data:0038A62B                 db    ? ;
.data:0038A62C                 db    ? ;
.data:0038A62D                 db    ? ;
.data:0038A62E                 db    ? ;
.data:0038A62F                 db    ? ;
.data:0038A630                 db    ? ;
.data:0038A631                 db    ? ;
.data:0038A632                 db    ? ;
.data:0038A633                 db    ? ;
.data:0038A634                 db    ? ;
.data:0038A635                 db    ? ;
.data:0038A636                 db    ? ;
.data:0038A637                 db    ? ;
.data:0038A638                 db    ? ;
.data:0038A639                 db    ? ;
.data:0038A63A                 db    ? ;
.data:0038A63B                 db    ? ;
.data:0038A63C dword_38A63C    dd ?                    ; DATA XREF: sub_383230↑r
.data:0038A63C                                         ; .text:00383283↑r ...
.data:0038A640 dword_38A640    dd ?                    ; DATA XREF: sub_383240↑r
.data:0038A640                                         ; .text:00383291↑w ...
.data:0038A644                 align 8
.data:0038A648 dword_38A648    dd ?                    ; DATA XREF: sub_382240+5E↑r
.data:0038A648                                         ; sub_382240:loc_3822B0↑r ...
.data:0038A64C unk_38A64C      db    ? ;               ; DATA XREF: sub_383460+21↑o
.data:0038A64C                                         ; sub_383940+1A↑o
.data:0038A64D                 db    ? ;
.data:0038A64E                 db    ? ;
.data:0038A64F                 db    ? ;
.data:0038A650 byte_38A650     db ?                    ; DATA XREF: sub_383650+9↑w
.data:0038A650                                         ; sub_383970+3↑r
.data:0038A651 byte_38A651     db ?                    ; DATA XREF: sub_3836B0+6↑r
.data:0038A651                                         ; sub_3836B0:loc_383775↑w
.data:0038A652                 align 4
.data:0038A654 ; _onexit_table_t Table
.data:0038A654 Table           _onexit_table_t <?>     ; DATA XREF: .text:003835FC↑o
.data:0038A654                                         ; sub_3836B0+3A↑o ...
.data:0038A660 ; _onexit_table_t stru_38A660
.data:0038A660 stru_38A660     _onexit_table_t <?>     ; DATA XREF: sub_3836B0:loc_3836FF↑o
.data:0038A660                                         ; sub_3836B0+AE↑w ...
.data:0038A66C                 db    ? ;
.data:0038A66D                 db    ? ;
.data:0038A66E                 db    ? ;
.data:0038A66F                 db    ? ;
.data:0038A670                 db    ? ;
.data:0038A671                 db    ? ;
.data:0038A672                 db    ? ;
.data:0038A673                 db    ? ;
.data:0038A674                 db    ? ;
.data:0038A675                 db    ? ;
.data:0038A676                 db    ? ;
.data:0038A677                 db    ? ;
.data:0038A678 ; union _SLIST_HEADER ListHead
.data:0038A678 ListHead        _SLIST_HEADER <?>       ; DATA XREF: sub_383C60+3↑o
.data:0038A678                                         ; .text:00383C83↑o
.data:0038A680                 db    ? ;
.data:0038A681                 db    ? ;
.data:0038A682                 db    ? ;
.data:0038A683                 db    ? ;
.data:0038A684                 db    ? ;
.data:0038A685                 db    ? ;
.data:0038A686                 db    ? ;
.data:0038A687                 db    ? ;
.data:0038A688 unk_38A688      db    ? ;               ; DATA XREF: sub_383D00+3↑o
.data:0038A689                 db    ? ;
.data:0038A68A                 db    ? ;
.data:0038A68B                 db    ? ;
.data:0038A68C                 db    ? ;
.data:0038A68D                 db    ? ;
.data:0038A68E                 db    ? ;
.data:0038A68F                 db    ? ;
.data:0038A690                 db    ? ;
.data:0038A691                 db    ? ;
.data:0038A692                 db    ? ;
.data:0038A693                 db    ? ;
.data:0038A694 dword_38A694    dd ?                    ; DATA XREF: sub_384130+3↑w
.data:0038A698 dword_38A698    dd ?                    ; DATA XREF: sub_384AA0+BC↑r
.data:0038A698                                         ; sub_384AA0+CE↑w ...
.data:0038A69C byte_38A69C     db ?                    ; DATA XREF: sub_384500+13↑r
.data:0038A69C                                         ; sub_384500+20↑w
.data:0038A69D byte_38A69D     db ?                    ; DATA XREF: sub_384AA0+B0↑r
.data:0038A69D                                         ; sub_384AA0+DB↑w
.data:0038A69E                 align 10h
.data:0038A6A0 dword_38A6A0    dd ?                    ; DATA XREF: sub_384F80+12↑w
.data:0038A6A0                                         ; sub_384F80:loc_385166↑w ...
.data:0038A6A4 dword_38A6A4    dd ?                    ; DATA XREF: sub_384F80:loc_3850D3↑r
.data:0038A6A4                                         ; sub_384F80+15B↑w ...
.data:0038A6A8                 db    ? ;
.data:0038A6A9                 db    ? ;
.data:0038A6AA                 db    ? ;
.data:0038A6AB                 db    ? ;
.data:0038A6AC unk_38A6AC      db    ? ;               ; DATA XREF: sub_383DA0+3↑o
.data:0038A6AD                 db    ? ;
.data:0038A6AE                 db    ? ;
.data:0038A6AF                 db    ? ;
.data:0038A6B0                 db    ? ;
.data:0038A6B1                 db    ? ;
.data:0038A6B2                 db    ? ;
.data:0038A6B3                 db    ? ;
.data:0038A6B4                 db    ? ;
.data:0038A6B5                 db    ? ;
.data:0038A6B6                 db    ? ;
.data:0038A6B7                 db    ? ;
.data:0038A6B8 unk_38A6B8      db    ? ;               ; DATA XREF: sub_383D90+3↑o
.data:0038A6B9                 db    ? ;
.data:0038A6BA                 db    ? ;
.data:0038A6BB                 db    ? ;
.data:0038A6BC                 db    ? ;
.data:0038A6BD                 db    ? ;
.data:0038A6BE                 db    ? ;
.data:0038A6BF                 db    ? ;
.data:0038A6C0                 db    ? ;
.data:0038A6C1                 db    ? ;
.data:0038A6C2                 db    ? ;
.data:0038A6C3                 db    ? ;
.data:0038A6C4 dword_38A6C4    dd ?                    ; DATA XREF: sub_382020+19↑r
.data:0038A6C4                                         ; sub_382020+28↑r
.data:0038A6C8                 align 1000h
.data:0038A6C8 _data           ends
.data:0038A6C8
.idata:0038B000 ; Section 5. (virtual address 0001B000)
.idata:0038B000 ; Virtual size                  : 00000BD4 (   3028.)
.idata:0038B000 ; Section size in file          : 00000C00 (   3072.)
.idata:0038B000 ; Offset to raw data for section: 00008800
.idata:0038B000 ; Flags 40000040: Data Readable
.idata:0038B000 ; Alignment     : default
.idata:0038B000 ;
.idata:0038B000 ; Imports from KERNEL32.dll
.idata:0038B000 ;
.idata:0038B000 ; ===========================================================================
.idata:0038B000
.idata:0038B000 ; Segment type: Externs
.idata:0038B000 ; _idata
.idata:0038B000 ; BOOL (__stdcall *CloseHandle)(HANDLE hObject)
.idata:0038B000                 extrn CloseHandle:dword ; CODE XREF: sub_3817D0+79↑p
.idata:0038B000                                         ; sub_3818A0+78↑p ...
.idata:0038B004 ; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
.idata:0038B004                 extrn TerminateProcess:dword
.idata:0038B004                                         ; CODE XREF: sub_3817D0+63↑p
.idata:0038B004                                         ; sub_382E10+21↑p
.idata:0038B004                                         ; DATA XREF: ...
.idata:0038B008 ; HANDLE (__stdcall *OpenProcess)(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)
.idata:0038B008                 extrn OpenProcess:dword ; CODE XREF: sub_3817D0+41↑p
.idata:0038B008                                         ; DATA XREF: sub_3817D0+41↑r ...
.idata:0038B00C ; HANDLE (__stdcall *CreateToolhelp32Snapshot)(DWORD dwFlags, DWORD th32ProcessID)
.idata:0038B00C                 extrn __imp_CreateToolhelp32Snapshot:dword
.idata:0038B00C                                         ; DATA XREF: CreateToolhelp32Snapshot↑r
.idata:0038B010 ; BOOL (__stdcall *Process32FirstW)(HANDLE hSnapshot, LPPROCESSENTRY32W lppe)
.idata:0038B010                 extrn __imp_Process32FirstW:dword
.idata:0038B010                                         ; DATA XREF: Process32FirstW↑r
.idata:0038B014 ; BOOL (__stdcall *Process32NextW)(HANDLE hSnapshot, LPPROCESSENTRY32W lppe)
.idata:0038B014                 extrn __imp_Process32NextW:dword
.idata:0038B014                                         ; DATA XREF: Process32NextW↑r
.idata:0038B018 ; BOOL (__stdcall *Module32FirstW)(HANDLE hSnapshot, LPMODULEENTRY32W lpme)
.idata:0038B018                 extrn __imp_Module32FirstW:dword
.idata:0038B018                                         ; DATA XREF: Module32FirstW↑r
.idata:0038B01C ; BOOL (__stdcall *Module32NextW)(HANDLE hSnapshot, LPMODULEENTRY32W lpme)
.idata:0038B01C                 extrn __imp_Module32NextW:dword
.idata:0038B01C                                         ; DATA XREF: Module32NextW↑r
.idata:0038B020 ; BOOL (__stdcall *FreeLibrary)(HMODULE hLibModule)
.idata:0038B020                 extrn FreeLibrary:dword ; CODE XREF: sub_3846A0+C7↑p
.idata:0038B020                                         ; sub_3846A0+12F↑p
.idata:0038B020                                         ; DATA XREF: ...
.idata:0038B024 ; SIZE_T (__stdcall *VirtualQuery)(LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
.idata:0038B024                 extrn VirtualQuery:dword
.idata:0038B024                                         ; CODE XREF: sub_384AA0+25↑p
.idata:0038B024                                         ; DATA XREF: sub_384AA0+25↑r ...
.idata:0038B028 ; HANDLE (__stdcall *GetProcessHeap)()
.idata:0038B028                 extrn GetProcessHeap:dword
.idata:0038B028                                         ; CODE XREF: sub_384AA0+24C↑p
.idata:0038B028                                         ; sub_384AA0+2C4↑p
.idata:0038B028                                         ; DATA XREF: ...
.idata:0038B02C ; BOOL (__stdcall *HeapFree)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
.idata:0038B02C                 extrn HeapFree:dword    ; CODE XREF: sub_384AA0+253↑p
.idata:0038B02C                                         ; DATA XREF: sub_384AA0+253↑r ...
.idata:0038B030 ; LPVOID (__stdcall *HeapAlloc)(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
.idata:0038B030                 extrn HeapAlloc:dword   ; CODE XREF: sub_384AA0+2CE↑p
.idata:0038B030                                         ; DATA XREF: sub_384AA0+2CE↑r ...
.idata:0038B034 ; DWORD (__stdcall *GetLastError)()
.idata:0038B034                 extrn GetLastError:dword
.idata:0038B034                                         ; CODE XREF: sub_384500+9B↑p
.idata:0038B034                                         ; sub_384500+D5↑p ...
.idata:0038B038 ; HMODULE (__stdcall *GetModuleHandleW)(LPCWSTR lpModuleName)
.idata:0038B038                 extrn GetModuleHandleW:dword
.idata:0038B038                                         ; CODE XREF: sub_383FB0+8↑p
.idata:0038B038                                         ; DATA XREF: sub_383FB0+8↑r ...
.idata:0038B03C ; void (__stdcall *GetStartupInfoW)(LPSTARTUPINFOW lpStartupInfo)
.idata:0038B03C                 extrn GetStartupInfoW:dword
.idata:0038B03C                                         ; CODE XREF: .text:00383F5A↑p
.idata:0038B03C                                         ; DATA XREF: .text:00383F5A↑r ...
.idata:0038B040 ; void (__stdcall *InitializeSListHead)(PSLIST_HEADER ListHead)
.idata:0038B040                 extrn InitializeSListHead:dword
.idata:0038B040                                         ; CODE XREF: sub_383C60+8↑p
.idata:0038B040                                         ; DATA XREF: sub_383C60+8↑r ...
.idata:0038B044 ; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
.idata:0038B044                 extrn GetSystemTimeAsFileTime:dword
.idata:0038B044                                         ; CODE XREF: sub_383AD0+12↑p
.idata:0038B044                                         ; DATA XREF: sub_383AD0+12↑r ...
.idata:0038B048 ; DWORD (__stdcall *GetCurrentProcessId)()
.idata:0038B048                 extrn GetCurrentProcessId:dword
.idata:0038B048                                         ; CODE XREF: sub_383AD0+33↑p
.idata:0038B048                                         ; DATA XREF: sub_383AD0+33↑r ...
.idata:0038B04C ; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
.idata:0038B04C                 extrn QueryPerformanceCounter:dword
.idata:0038B04C                                         ; CODE XREF: sub_383AD0+43↑p
.idata:0038B04C                                         ; DATA XREF: sub_383AD0+43↑r ...
.idata:0038B050 ; BOOL (__stdcall *IsProcessorFeaturePresent)(DWORD ProcessorFeature)
.idata:0038B050                 extrn IsProcessorFeaturePresent:dword
.idata:0038B050                                         ; CODE XREF: sub_382E50+B↑p
.idata:0038B050                                         ; sub_382FB0+B↑p ...
.idata:0038B054 ; HANDLE (__stdcall *GetCurrentProcess)()
.idata:0038B054                 extrn GetCurrentProcess:dword
.idata:0038B054                                         ; CODE XREF: sub_382E10+1A↑p
.idata:0038B054                                         ; DATA XREF: sub_382E10+1A↑r ...
.idata:0038B058 ; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.idata:0038B058                 extrn SetUnhandledExceptionFilter:dword
.idata:0038B058                                         ; CODE XREF: sub_382E10+5↑p
.idata:0038B058                                         ; sub_383DB0+107↑p ...
.idata:0038B05C ; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
.idata:0038B05C                 extrn UnhandledExceptionFilter:dword
.idata:0038B05C                                         ; CODE XREF: sub_382E10+F↑p
.idata:0038B05C                                         ; sub_383DB0+111↑p
.idata:0038B05C                                         ; DATA XREF: ...
.idata:0038B060 ; int (__stdcall *WideCharToMultiByte)(UINT CodePage, DWORD dwFlags, LPCWCH lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCCH lpDefaultChar, LPBOOL lpUsedDefaultChar)
.idata:0038B060                 extrn WideCharToMultiByte:dword
.idata:0038B060                                         ; CODE XREF: sub_3829A0+173↑p
.idata:0038B060                                         ; sub_3829A0+1A8↑p
.idata:0038B060                                         ; DATA XREF: ...
.idata:0038B064 ; int (__stdcall *MultiByteToWideChar)(UINT CodePage, DWORD dwFlags, LPCCH lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
.idata:0038B064                 extrn MultiByteToWideChar:dword
.idata:0038B064                                         ; CODE XREF: sub_3829A0+61↑p
.idata:0038B064                                         ; sub_3829A0+80↑p
.idata:0038B064                                         ; DATA XREF: ...
.idata:0038B068 ; void (__stdcall *RaiseException)(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, const ULONG_PTR *lpArguments)
.idata:0038B068                 extrn RaiseException:dword
.idata:0038B068                                         ; CODE XREF: sub_382C20+46↑p
.idata:0038B068                                         ; DATA XREF: sub_382C20+46↑r ...
.idata:0038B06C ; BOOL (__stdcall *IsDebuggerPresent)()
.idata:0038B06C                 extrn IsDebuggerPresent:dword
.idata:0038B06C                                         ; CODE XREF: sub_3829A0+DF↑p
.idata:0038B06C                                         ; sub_383DB0+DB↑p
.idata:0038B06C                                         ; DATA XREF: ...
.idata:0038B070 ; DWORD (__stdcall *GetCurrentThreadId)()
.idata:0038B070                 extrn GetCurrentThreadId:dword
.idata:0038B070                                         ; CODE XREF: sub_382020+22↑p
.idata:0038B070                                         ; sub_383AD0+27↑p
.idata:0038B070                                         ; DATA XREF: ...
.idata:0038B074 ; FARPROC (__stdcall *GetProcAddress)(HMODULE hModule, LPCSTR lpProcName)
.idata:0038B074                 extrn GetProcAddress:dword
.idata:0038B074                                         ; CODE XREF: sub_3846A0+6F↑p
.idata:0038B074                                         ; sub_3846A0+81↑p ...
.idata:0038B078
.idata:0038B0BC ;
.idata:0038B0BC ; Imports from VCRUNTIME140D.dll
.idata:0038B0BC ;
.idata:0038B0BC ; void *(__cdecl *memset)(void *, int Val, size_t Size)
.idata:0038B0BC                 extrn __imp_memset:dword
.idata:0038B0BC                                         ; DATA XREF: memset↑r
.idata:0038B0BC                                         ; .idata:0038B214↓o
.idata:0038B0C0                 extrn __imp__except_handler4_common:dword
.idata:0038B0C0                                         ; DATA XREF: _except_handler4_common↑r
.idata:0038B0C4                 extrn __imp___vcrt_GetModuleFileNameW:dword
.idata:0038B0C4                                         ; DATA XREF: __vcrt_GetModuleFileNameW↑r
.idata:0038B0C8                 extrn __imp___vcrt_GetModuleHandleW:dword
.idata:0038B0C8                                         ; DATA XREF: __vcrt_GetModuleHandleW↑r
.idata:0038B0CC                 extrn __imp___vcrt_LoadLibraryExW:dword
.idata:0038B0CC                                         ; DATA XREF: __vcrt_LoadLibraryExW↑r
.idata:0038B0D0                 extrn __imp___current_exception_context:dword
.idata:0038B0D0                                         ; DATA XREF: __current_exception_context↑r
.idata:0038B0D4                 extrn __imp___std_type_info_destroy_list:dword
.idata:0038B0D4                                         ; DATA XREF: __std_type_info_destroy_list↑r
.idata:0038B0D8                 extrn __imp___current_exception:dword
.idata:0038B0D8                                         ; DATA XREF: __current_exception↑r
.idata:0038B0DC
.idata:0038B10C ;
.idata:0038B10C ; Imports from ucrtbased.dll
.idata:0038B10C ;
.idata:0038B10C ; int (__cdecl *_initialize_narrow_environment)()
.idata:0038B10C                 extrn __imp__initialize_narrow_environment:dword
.idata:0038B10C                                         ; DATA XREF: _initialize_narrow_environment↑r
.idata:0038B10C                                         ; .idata:0038B228↓o
.idata:0038B110 ; int (__cdecl *_set_new_mode)(int NewMode)
.idata:0038B110                 extrn __imp__set_new_mode:dword
.idata:0038B110                                         ; DATA XREF: _set_new_mode↑r
.idata:0038B114 ; int *(__cdecl *__p__commode)()
.idata:0038B114                 extrn __imp___p__commode:dword
.idata:0038B114                                         ; DATA XREF: __p__commode↑r
.idata:0038B118 ; errno_t (__cdecl *strcpy_s)(char *Destination, rsize_t SizeInBytes, const char *Source)
.idata:0038B118                 extrn __imp_strcpy_s:dword
.idata:0038B118                                         ; DATA XREF: strcpy_s↑r
.idata:0038B11C ; errno_t (__cdecl *strcat_s)(char *Destination, rsize_t SizeInBytes, const char *Source)
.idata:0038B11C                 extrn __imp_strcat_s:dword
.idata:0038B11C                                         ; DATA XREF: strcat_s↑r
.idata:0038B120 ; int (__cdecl *__stdio_common_vsprintf_s)(unsigned __int64 Options, char *Buffer, size_t BufferCount, const char *Format, _locale_t Locale, va_list ArgList)
.idata:0038B120                 extrn __imp___stdio_common_vsprintf_s:dword
.idata:0038B120                                         ; DATA XREF: __stdio_common_vsprintf_s↑r
.idata:0038B124 ; int (__cdecl *_seh_filter_dll)(unsigned int ExceptionNum, struct _EXCEPTION_POINTERS *ExceptionPtr)
.idata:0038B124                 extrn __imp__seh_filter_dll:dword
.idata:0038B124                                         ; DATA XREF: _seh_filter_dll↑r
.idata:0038B128 ; int (__cdecl *_initialize_onexit_table)(_onexit_table_t *Table)
.idata:0038B128                 extrn __imp__initialize_onexit_table:dword
.idata:0038B128                                         ; DATA XREF: _initialize_onexit_table↑r
.idata:0038B12C ; int (__cdecl *_register_onexit_function)(_onexit_table_t *Table, _onexit_t Function)
.idata:0038B12C                 extrn __imp__register_onexit_function:dword
.idata:0038B12C                                         ; DATA XREF: _register_onexit_function↑r
.idata:0038B130 ; int (__cdecl *_execute_onexit_table)(_onexit_table_t *Table)
.idata:0038B130                 extrn __imp__execute_onexit_table:dword
.idata:0038B130                                         ; DATA XREF: _execute_onexit_table↑r
.idata:0038B134 ; int (__cdecl *_crt_atexit)(_PVFV Function)
.idata:0038B134                 extrn __imp__crt_atexit:dword
.idata:0038B134                                         ; DATA XREF: _crt_atexit↑r
.idata:0038B138 ; int (__cdecl *_crt_at_quick_exit)(_PVFV Function)
.idata:0038B138                 extrn __imp__crt_at_quick_exit:dword
.idata:0038B138                                         ; DATA XREF: _crt_at_quick_exit↑r
.idata:0038B13C ; errno_t (__cdecl *_controlfp_s)(unsigned int *CurrentState, unsigned int NewValue, unsigned int Mask)
.idata:0038B13C                 extrn __imp__controlfp_s:dword
.idata:0038B13C                                         ; DATA XREF: _controlfp_s↑r
.idata:0038B140 ; void (__cdecl *_c_exit)()
.idata:0038B140                 extrn __imp__c_exit:dword
.idata:0038B140                                         ; DATA XREF: _c_exit↑r
.idata:0038B144 ; errno_t (__cdecl *_wmakepath_s)(wchar_t *Buffer, size_t BufferCount, const wchar_t *Drive, const wchar_t *Dir, const wchar_t *Filename, const wchar_t *Ext)
.idata:0038B144                 extrn __imp__wmakepath_s:dword
.idata:0038B144                                         ; DATA XREF: _wmakepath_s↑r
.idata:0038B148 ; errno_t (__cdecl *_wsplitpath_s)(const wchar_t *FullPath, wchar_t *Drive, size_t DriveCount, wchar_t *Dir, size_t DirCount, wchar_t *Filename, size_t FilenameCount, wchar_t *Ext, size_t ExtCount)
.idata:0038B148                 extrn __imp__wsplitpath_s:dword
.idata:0038B148                                         ; DATA XREF: _wsplitpath_s↑r
.idata:0038B14C ; errno_t (__cdecl *wcscpy_s)(wchar_t *Destination, rsize_t SizeInWords, const wchar_t *Source)
.idata:0038B14C                 extrn __imp_wcscpy_s:dword
.idata:0038B14C                                         ; DATA XREF: wcscpy_s↑r
.idata:0038B150 ; void (__cdecl *_cexit)()
.idata:0038B150                 extrn __imp__cexit:dword
.idata:0038B150                                         ; DATA XREF: _cexit↑r
.idata:0038B154 ; errno_t (__cdecl *_configure_narrow_argv)(_crt_argv_mode mode)
.idata:0038B154                 extrn __imp__configure_narrow_argv:dword
.idata:0038B154                                         ; DATA XREF: _configure_narrow_argv↑r
.idata:0038B158 ; void (__cdecl *__setusermatherr)(_UserMathErrorFunctionPointer UserMathErrorFunction)
.idata:0038B158                 extrn __imp___setusermatherr:dword
.idata:0038B158                                         ; DATA XREF: __setusermatherr↑r
.idata:0038B15C ; void (__cdecl *_set_app_type)(_crt_app_type Type)
.idata:0038B15C                 extrn __imp__set_app_type:dword
.idata:0038B15C                                         ; DATA XREF: _set_app_type↑r
.idata:0038B160 ; int (__cdecl *_seh_filter_exe)(unsigned int ExceptionNum, struct _EXCEPTION_POINTERS *ExceptionPtr)
.idata:0038B160                 extrn __imp__seh_filter_exe:dword
.idata:0038B160                                         ; DATA XREF: _seh_filter_exe↑r
.idata:0038B164                 extrn __imp__CrtDbgReportW:dword
.idata:0038B164                                         ; DATA XREF: _CrtDbgReportW↑r
.idata:0038B168                 extrn __imp__CrtDbgReport:dword
.idata:0038B168                                         ; DATA XREF: _CrtDbgReport↑r
.idata:0038B16C ; int (__cdecl *_stdio_common_vfprintf)(unsigned __int64 Options, FILE *Stream, const char *Format, _locale_t Locale, va_list ArgList)
.idata:0038B16C                 extrn __stdio_common_vfprintf:dword
.idata:0038B16C                                         ; CODE XREF: sub_381AC0+3F↑p
.idata:0038B16C                                         ; DATA XREF: sub_381AC0+3F↑r ...
.idata:0038B170 ; char *(__cdecl *fgets)(char *Buffer, int MaxCount, FILE *Stream)
.idata:0038B170                 extrn fgets:dword       ; CODE XREF: _main_0+6D↑p
.idata:0038B170                                         ; DATA XREF: _main_0+6D↑r ...
.idata:0038B174 ; FILE *(__cdecl *_acrt_iob_func)(unsigned int Ix)
.idata:0038B174                 extrn __acrt_iob_func:dword
.idata:0038B174                                         ; CODE XREF: _main_0+50↑p
.idata:0038B174                                         ; sub_381D70+39↑p
.idata:0038B174                                         ; DATA XREF: ...
.idata:0038B178 ; int (__cdecl *strcmp)(const char *Str1, const char *Str2)
.idata:0038B178                 extrn __imp_strcmp:dword
.idata:0038B178                                         ; DATA XREF: strcmp↑r
.idata:0038B17C ; void (__cdecl __noreturn *exit)(int Code)
.idata:0038B17C                 extrn __imp_exit:dword  ; CODE XREF: _main_0+B5↑p
.idata:0038B17C                                         ; DATA XREF: _main_0+B5↑r ...
.idata:0038B180 ; void (__cdecl *_register_thread_local_exe_atexit_callback)(_tls_callback_type Callback)
.idata:0038B180                 extrn __imp__register_thread_local_exe_atexit_callback:dword
.idata:0038B180                                         ; DATA XREF: _register_thread_local_exe_atexit_callback↑r
.idata:0038B184 ; char ***(__cdecl *__p___argv)()
.idata:0038B184                 extrn __imp___p___argv:dword
.idata:0038B184                                         ; DATA XREF: __p___argv↑r
.idata:0038B188 ; int *(__cdecl *__p___argc)()
.idata:0038B188                 extrn __imp___p___argc:dword
.idata:0038B188                                         ; DATA XREF: __p___argc↑r
.idata:0038B18C ; errno_t (__cdecl *_set_fmode)(int Mode)
.idata:0038B18C                 extrn __imp__set_fmode:dword
.idata:0038B18C                                         ; DATA XREF: _set_fmode↑r
.idata:0038B190 ; void (__cdecl __noreturn *_exit)(int Code)
.idata:0038B190                 extrn __imp__exit:dword ; DATA XREF: _exit↑r
.idata:0038B194 ; int (__cdecl *_initterm_e)(_PIFV *First, _PIFV *Last)
.idata:0038B194                 extrn __imp__initterm_e:dword
.idata:0038B194                                         ; DATA XREF: _initterm_e↑r
.idata:0038B198 ; void (__cdecl *_initterm)(_PVFV *First, _PVFV *Last)
.idata:0038B198                 extrn __imp__initterm:dword
.idata:0038B198                                         ; DATA XREF: _initterm↑r
.idata:0038B19C                 extrn __imp_terminate:dword
.idata:0038B19C                                         ; DATA XREF: terminate↑r
.idata:0038B1A0 ; char **(__cdecl *_get_initial_narrow_environment)()
.idata:0038B1A0                 extrn __imp__get_initial_narrow_environment:dword
.idata:0038B1A0                                         ; DATA XREF: _get_initial_narrow_environment↑r
.idata:0038B1A4 ; int (__cdecl *_configthreadlocale)(int Flag)
.idata:0038B1A4                 extrn __imp__configthreadlocale:dword
.idata:0038B1A4                                         ; DATA XREF: _configthreadlocale↑r
.idata:0038B1A8 ; int (__cdecl *strncmp)(const char *Str1, const char *Str2, size_t MaxCount)
.idata:0038B1A8                 extrn strncmp:dword     ; CODE XREF: _main_0+9D↑p
.idata:0038B1A8                                         ; DATA XREF: .text:loc_38186D↑r ...
.idata:0038B1AC
.idata:0038B1AC
.idata:0038B1F0 ; ===========================================================================
.idata:0038B1F0
.idata:0038B1F0 ; Segment type: Pure data
.idata:0038B1F0 ; Segment permissions: Read
.idata:0038B1F0 _idata          segment para public 'DATA' use32
.idata:0038B1F0                 assume cs:_idata
.idata:0038B1F0                 ;org 38B1F0h
.idata:0038B1F0 __IMPORT_DESCRIPTOR_KERNEL32 dd rva off_38B240 ; Import Name Table
.idata:0038B1F4                 dd 0                    ; Time stamp
.idata:0038B1F8                 dd 0                    ; Forwarder Chain
.idata:0038B1FC                 dd rva aKernel32Dll     ; DLL Name
.idata:0038B200                 dd rva CloseHandle      ; Import Address Table
.idata:0038B204 __IMPORT_DESCRIPTOR_VCRUNTIME140D dd rva off_38B2FC ; Import Name Table
.idata:0038B208                 dd 0                    ; Time stamp
.idata:0038B20C                 dd 0                    ; Forwarder Chain
.idata:0038B210                 dd rva aVcruntime140dD  ; DLL Name
.idata:0038B214                 dd rva __imp_memset     ; Import Address Table
.idata:0038B218 __IMPORT_DESCRIPTOR_ucrtbased dd rva off_38B34C ; Import Name Table
.idata:0038B21C                 dd 0                    ; Time stamp
.idata:0038B220                 dd 0                    ; Forwarder Chain
.idata:0038B224                 dd rva aUcrtbasedDll    ; DLL Name
.idata:0038B228                 dd rva __imp__initialize_narrow_environment ; Import Address Table
.idata:0038B22C                 align 20h
.idata:0038B240 ;
.idata:0038B240 ; Import names for KERNEL32.dll
.idata:0038B240 ;
.idata:0038B240 off_38B240      dd rva word_38B430      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_KERNEL32↑o
.idata:0038B244                 dd rva word_38B43E
.idata:0038B248                 dd rva word_38B452
.idata:0038B24C                 dd rva word_38B460
.idata:0038B250                 dd rva word_38B47C
.idata:0038B254                 dd rva word_38B48E
.idata:0038B258                 dd rva word_38B4A0
.idata:0038B25C                 dd rva word_38B4B2
.idata:0038B260                 dd rva word_38BA1A
.idata:0038B264                 dd rva word_38BA0A
.idata:0038B268                 dd rva word_38B9F8
.idata:0038B26C                 dd rva word_38B9EC
.idata:0038B270                 dd rva word_38B9E0
.idata:0038B274                 dd rva word_38B9D0
.idata:0038B278                 dd rva word_38B9BC
.idata:0038B27C                 dd rva word_38B9AA
.idata:0038B280                 dd rva word_38B994
.idata:0038B284                 dd rva word_38B97A
.idata:0038B288                 dd rva word_38B964
.idata:0038B28C                 dd rva word_38B94A
.idata:0038B290                 dd rva word_38B92E
.idata:0038B294                 dd rva word_38B91A
.idata:0038B298                 dd rva word_38B8FC
.idata:0038B29C                 dd rva word_38B8E0
.idata:0038B2A0                 dd rva word_38B8CA
.idata:0038B2A4                 dd rva word_38B8B4
.idata:0038B2A8                 dd rva word_38B8A2
.idata:0038B2AC                 dd rva word_38B88E
.idata:0038B2B0                 dd rva word_38B878
.idata:0038B2B4                 dd rva word_38BA28
.idata:0038B2B8                 dd 0
.idata:0038B2BC                 db    0
.idata:0038B2BD                 db    0
.idata:0038B2BE                 db    0
.idata:0038B2BF                 db    0
.idata:0038B2C0                 db    0
.idata:0038B2C1                 db    0
.idata:0038B2C2                 db    0
.idata:0038B2C3                 db    0
.idata:0038B2C4                 db    0
.idata:0038B2C5                 db    0
.idata:0038B2C6                 db    0
.idata:0038B2C7                 db    0
.idata:0038B2C8                 db    0
.idata:0038B2C9                 db    0
.idata:0038B2CA                 db    0
.idata:0038B2CB                 db    0
.idata:0038B2CC                 db    0
.idata:0038B2CD                 db    0
.idata:0038B2CE                 db    0
.idata:0038B2CF                 db    0
.idata:0038B2D0                 db    0
.idata:0038B2D1                 db    0
.idata:0038B2D2                 db    0
.idata:0038B2D3                 db    0
.idata:0038B2D4                 db    0
.idata:0038B2D5                 db    0
.idata:0038B2D6                 db    0
.idata:0038B2D7                 db    0
.idata:0038B2D8                 db    0
.idata:0038B2D9                 db    0
.idata:0038B2DA                 db    0
.idata:0038B2DB                 db    0
.idata:0038B2DC                 db    0
.idata:0038B2DD                 db    0
.idata:0038B2DE                 db    0
.idata:0038B2DF                 db    0
.idata:0038B2E0                 db    0
.idata:0038B2E1                 db    0
.idata:0038B2E2                 db    0
.idata:0038B2E3                 db    0
.idata:0038B2E4                 db    0
.idata:0038B2E5                 db    0
.idata:0038B2E6                 db    0
.idata:0038B2E7                 db    0
.idata:0038B2E8                 db    0
.idata:0038B2E9                 db    0
.idata:0038B2EA                 db    0
.idata:0038B2EB                 db    0
.idata:0038B2EC                 db    0
.idata:0038B2ED                 db    0
.idata:0038B2EE                 db    0
.idata:0038B2EF                 db    0
.idata:0038B2F0                 db    0
.idata:0038B2F1                 db    0
.idata:0038B2F2                 db    0
.idata:0038B2F3                 db    0
.idata:0038B2F4                 db    0
.idata:0038B2F5                 db    0
.idata:0038B2F6                 db    0
.idata:0038B2F7                 db    0
.idata:0038B2F8                 db    0
.idata:0038B2F9                 db    0
.idata:0038B2FA                 db    0
.idata:0038B2FB                 db    0
.idata:0038B2FC ;
.idata:0038B2FC ; Import names for VCRUNTIME140D.dll
.idata:0038B2FC ;
.idata:0038B2FC off_38B2FC      dd rva word_38B524      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_VCRUNTIME140D↑o
.idata:0038B300                 dd rva word_38B52E
.idata:0038B304                 dd rva word_38B548
.idata:0038B308                 dd rva word_38B564
.idata:0038B30C                 dd rva word_38B57E
.idata:0038B310                 dd rva word_38B506
.idata:0038B314                 dd rva word_38B4D0
.idata:0038B318                 dd rva word_38B4F0
.idata:0038B31C                 dd 0
.idata:0038B320                 db    0
.idata:0038B321                 db    0
.idata:0038B322                 db    0
.idata:0038B323                 db    0
.idata:0038B324                 db    0
.idata:0038B325                 db    0
.idata:0038B326                 db    0
.idata:0038B327                 db    0
.idata:0038B328                 db    0
.idata:0038B329                 db    0
.idata:0038B32A                 db    0
.idata:0038B32B                 db    0
.idata:0038B32C                 db    0
.idata:0038B32D                 db    0
.idata:0038B32E                 db    0
.idata:0038B32F                 db    0
.idata:0038B330                 db    0
.idata:0038B331                 db    0
.idata:0038B332                 db    0
.idata:0038B333                 db    0
.idata:0038B334                 db    0
.idata:0038B335                 db    0
.idata:0038B336                 db    0
.idata:0038B337                 db    0
.idata:0038B338                 db    0
.idata:0038B339                 db    0
.idata:0038B33A                 db    0
.idata:0038B33B                 db    0
.idata:0038B33C                 db    0
.idata:0038B33D                 db    0
.idata:0038B33E                 db    0
.idata:0038B33F                 db    0
.idata:0038B340                 db    0
.idata:0038B341                 db    0
.idata:0038B342                 db    0
.idata:0038B343                 db    0
.idata:0038B344                 db    0
.idata:0038B345                 db    0
.idata:0038B346                 db    0
.idata:0038B347                 db    0
.idata:0038B348                 db    0
.idata:0038B349                 db    0
.idata:0038B34A                 db    0
.idata:0038B34B                 db    0
.idata:0038B34C ;
.idata:0038B34C ; Import names for ucrtbased.dll
.idata:0038B34C ;
.idata:0038B34C off_38B34C      dd rva word_38B660      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_ucrtbased↑o
.idata:0038B350                 dd rva word_38B748
.idata:0038B354                 dd rva word_38B758
.idata:0038B358                 dd rva word_38B768
.idata:0038B35C                 dd rva word_38B774
.idata:0038B360                 dd rva word_38B780
.idata:0038B364                 dd rva word_38B79C
.idata:0038B368                 dd rva word_38B7AE
.idata:0038B36C                 dd rva word_38B7CA
.idata:0038B370                 dd rva word_38B7E6
.idata:0038B374                 dd rva word_38B7FE
.idata:0038B378                 dd rva word_38B80C
.idata:0038B37C                 dd rva word_38B822
.idata:0038B380                 dd rva word_38B6FA
.idata:0038B384                 dd rva word_38B83E
.idata:0038B388                 dd rva word_38B84E
.idata:0038B38C                 dd rva word_38B85E
.idata:0038B390                 dd rva word_38B6F0
.idata:0038B394                 dd rva word_38B646
.idata:0038B398                 dd rva word_38B632
.idata:0038B39C                 dd rva word_38B622
.idata:0038B3A0                 dd rva word_38B610
.idata:0038B3A4                 dd rva word_38B5FE
.idata:0038B3A8                 dd rva word_38B5EE
.idata:0038B3AC                 dd rva word_38B5D4
.idata:0038B3B0                 dd rva word_38B5CC
.idata:0038B3B4                 dd rva word_38B5BA
.idata:0038B3B8                 dd rva word_38B5B0
.idata:0038B3BC                 dd rva word_38B5A8
.idata:0038B3C0                 dd rva word_38B704
.idata:0038B3C4                 dd rva word_38B6E2
.idata:0038B3C8                 dd rva word_38B6D4
.idata:0038B3CC                 dd rva word_38B6C6
.idata:0038B3D0                 dd rva word_38B6BE
.idata:0038B3D4                 dd rva word_38B6B0
.idata:0038B3D8                 dd rva word_38B6A4
.idata:0038B3DC                 dd rva word_38B832
.idata:0038B3E0                 dd rva word_38B682
.idata:0038B3E4                 dd rva word_38B732
.idata:0038B3E8                 dd rva word_38BA3A
.idata:0038B3EC                 dd 0
.idata:0038B3F0                 db    0
.idata:0038B3F1                 db    0
.idata:0038B3F2                 db    0
.idata:0038B3F3                 db    0
.idata:0038B3F4                 db    0
.idata:0038B3F5                 db    0
.idata:0038B3F6                 db    0
.idata:0038B3F7                 db    0
.idata:0038B3F8                 db    0
.idata:0038B3F9                 db    0
.idata:0038B3FA                 db    0
.idata:0038B3FB                 db    0
.idata:0038B3FC                 db    0
.idata:0038B3FD                 db    0
.idata:0038B3FE                 db    0
.idata:0038B3FF                 db    0
.idata:0038B400                 db    0
.idata:0038B401                 db    0
.idata:0038B402                 db    0
.idata:0038B403                 db    0
.idata:0038B404                 db    0
.idata:0038B405                 db    0
.idata:0038B406                 db    0
.idata:0038B407                 db    0
.idata:0038B408                 db    0
.idata:0038B409                 db    0
.idata:0038B40A                 db    0
.idata:0038B40B                 db    0
.idata:0038B40C                 db    0
.idata:0038B40D                 db    0
.idata:0038B40E                 db    0
.idata:0038B40F                 db    0
.idata:0038B410                 db    0
.idata:0038B411                 db    0
.idata:0038B412                 db    0
.idata:0038B413                 db    0
.idata:0038B414                 db    0
.idata:0038B415                 db    0
.idata:0038B416                 db    0
.idata:0038B417                 db    0
.idata:0038B418                 db    0
.idata:0038B419                 db    0
.idata:0038B41A                 db    0
.idata:0038B41B                 db    0
.idata:0038B41C                 db    0
.idata:0038B41D                 db    0
.idata:0038B41E                 db    0
.idata:0038B41F                 db    0
.idata:0038B420                 db    0
.idata:0038B421                 db    0
.idata:0038B422                 db    0
.idata:0038B423                 db    0
.idata:0038B424                 db    0
.idata:0038B425                 db    0
.idata:0038B426                 db    0
.idata:0038B427                 db    0
.idata:0038B428                 db    0
.idata:0038B429                 db    0
.idata:0038B42A                 db    0
.idata:0038B42B                 db    0
.idata:0038B42C                 db    0
.idata:0038B42D                 db    0
.idata:0038B42E                 db    0
.idata:0038B42F                 db    0
.idata:0038B430 word_38B430     dw 89h                  ; DATA XREF: .idata:off_38B240↑o
.idata:0038B432                 db 'CloseHandle',0
.idata:0038B43E word_38B43E     dw 59Ch                 ; DATA XREF: .idata:0038B244↑o
.idata:0038B440                 db 'TerminateProcess',0
.idata:0038B451                 align 2
.idata:0038B452 word_38B452     dw 418h                 ; DATA XREF: .idata:0038B248↑o
.idata:0038B454                 db 'OpenProcess',0
.idata:0038B460 word_38B460     dw 0FFh                 ; DATA XREF: .idata:0038B24C↑o
.idata:0038B462                 db 'CreateToolhelp32Snapshot',0
.idata:0038B47B                 align 4
.idata:0038B47C word_38B47C     dw 437h                 ; DATA XREF: .idata:0038B250↑o
.idata:0038B47E                 db 'Process32FirstW',0
.idata:0038B48E word_38B48E     dw 439h                 ; DATA XREF: .idata:0038B254↑o
.idata:0038B490                 db 'Process32NextW',0
.idata:0038B49F                 align 10h
.idata:0038B4A0 word_38B4A0     dw 3F0h                 ; DATA XREF: .idata:0038B258↑o
.idata:0038B4A2                 db 'Module32FirstW',0
.idata:0038B4B1                 align 2
.idata:0038B4B2 word_38B4B2     dw 3F2h                 ; DATA XREF: .idata:0038B25C↑o
.idata:0038B4B4                 db 'Module32NextW',0
.idata:0038B4C2 aKernel32Dll    db 'KERNEL32.dll',0     ; DATA XREF: .idata:0038B1FC↑o
.idata:0038B4CF                 align 10h
.idata:0038B4D0 word_38B4D0     dw 25h                  ; DATA XREF: .idata:0038B314↑o
.idata:0038B4D2                 db '__std_type_info_destroy_list',0
.idata:0038B4EF                 align 10h
.idata:0038B4F0 word_38B4F0     dw 1Ch                  ; DATA XREF: .idata:0038B318↑o
.idata:0038B4F2                 db '__current_exception',0
.idata:0038B506 word_38B506     dw 1Dh                  ; DATA XREF: .idata:0038B310↑o
.idata:0038B508                 db '__current_exception_context',0
.idata:0038B524 word_38B524     dw 48h                  ; DATA XREF: .idata:off_38B2FC↑o
.idata:0038B526                 db 'memset',0
.idata:0038B52D                 align 2
.idata:0038B52E word_38B52E     dw 35h                  ; DATA XREF: .idata:0038B300↑o
.idata:0038B530                 db '_except_handler4_common',0
.idata:0038B548 word_38B548     dw 2Eh                  ; DATA XREF: .idata:0038B304↑o
.idata:0038B54A                 db '__vcrt_GetModuleFileNameW',0
.idata:0038B564 word_38B564     dw 2Fh                  ; DATA XREF: .idata:0038B308↑o
.idata:0038B566                 db '__vcrt_GetModuleHandleW',0
.idata:0038B57E word_38B57E     dw 31h                  ; DATA XREF: .idata:0038B30C↑o
.idata:0038B580                 db '__vcrt_LoadLibraryExW',0
.idata:0038B596 aVcruntime140dD db 'VCRUNTIME140D.dll',0
.idata:0038B596                                         ; DATA XREF: .idata:0038B210↑o
.idata:0038B5A8 word_38B5A8     dw 476h                 ; DATA XREF: .idata:0038B3BC↑o
.idata:0038B5AA                 db 'exit',0
.idata:0038B5AF                 align 10h
.idata:0038B5B0 word_38B5B0     dw 546h                 ; DATA XREF: .idata:0038B3B8↑o
.idata:0038B5B2                 db 'strcmp',0
.idata:0038B5B9                 align 2
.idata:0038B5BA word_38B5BA     dw 45h                  ; DATA XREF: .idata:0038B3B4↑o
.idata:0038B5BC                 db '__acrt_iob_func',0
.idata:0038B5CC word_38B5CC     dw 491h                 ; DATA XREF: .idata:0038B3B0↑o
.idata:0038B5CE                 db 'fgets',0
.idata:0038B5D4 word_38B5D4     dw 82h                  ; DATA XREF: .idata:0038B3AC↑o
.idata:0038B5D6                 db '__stdio_common_vfprintf',0
.idata:0038B5EE word_38B5EE     dw 14h                  ; DATA XREF: .idata:0038B3A8↑o
.idata:0038B5F0                 db '_CrtDbgReport',0
.idata:0038B5FE word_38B5FE     dw 15h                  ; DATA XREF: .idata:0038B3A4↑o
.idata:0038B600                 db '_CrtDbgReportW',0
.idata:0038B60F                 align 10h
.idata:0038B610 word_38B610     dw 2EFh                 ; DATA XREF: .idata:0038B3A0↑o
.idata:0038B612                 db '_seh_filter_exe',0
.idata:0038B622 word_38B622     dw 2F2h                 ; DATA XREF: .idata:0038B39C↑o
.idata:0038B624                 db '_set_app_type',0
.idata:0038B632 word_38B632     dw 81h                  ; DATA XREF: .idata:0038B398↑o
.idata:0038B634                 db '__setusermatherr',0
.idata:0038B645                 align 2
.idata:0038B646 word_38B646     dw 0DCh                 ; DATA XREF: .idata:0038B394↑o
.idata:0038B648                 db '_configure_narrow_argv',0
.idata:0038B65F                 align 10h
.idata:0038B660 word_38B660     dw 196h                 ; DATA XREF: .idata:off_38B34C↑o
.idata:0038B662                 db '_initialize_narrow_environment',0
.idata:0038B681                 align 2
.idata:0038B682 word_38B682     dw 162h                 ; DATA XREF: .idata:0038B3E0↑o
.idata:0038B684                 db '_get_initial_narrow_environment',0
.idata:0038B6A4 word_38B6A4     dw 199h                 ; DATA XREF: .idata:0038B3D8↑o
.idata:0038B6A6                 db '_initterm',0
.idata:0038B6B0 word_38B6B0     dw 19Ah                 ; DATA XREF: .idata:0038B3D4↑o
.idata:0038B6B2                 db '_initterm_e',0
.idata:0038B6BE word_38B6BE     dw 111h                 ; DATA XREF: .idata:0038B3D0↑o
.idata:0038B6C0                 db '_exit',0
.idata:0038B6C6 word_38B6C6     dw 2F7h                 ; DATA XREF: .idata:0038B3CC↑o
.idata:0038B6C8                 db '_set_fmode',0
.idata:0038B6D3                 align 4
.idata:0038B6D4 word_38B6D4     dw 6Fh                  ; DATA XREF: .idata:0038B3C8↑o
.idata:0038B6D6                 db '__p___argc',0
.idata:0038B6E1                 align 2
.idata:0038B6E2 word_38B6E2     dw 70h                  ; DATA XREF: .idata:0038B3C4↑o
.idata:0038B6E4                 db '__p___argv',0
.idata:0038B6EF                 align 10h
.idata:0038B6F0 word_38B6F0     dw 0CAh                 ; DATA XREF: .idata:0038B390↑o
.idata:0038B6F2                 db '_cexit',0
.idata:0038B6F9                 align 2
.idata:0038B6FA word_38B6FA     dw 0C5h                 ; DATA XREF: .idata:0038B380↑o
.idata:0038B6FC                 db '_c_exit',0
.idata:0038B704 word_38B704     dw 2E3h                 ; DATA XREF: .idata:0038B3C0↑o
.idata:0038B706                 db '_register_thread_local_exe_atexit_callback',0
.idata:0038B731                 align 2
.idata:0038B732 word_38B732     dw 0DBh                 ; DATA XREF: .idata:0038B3E4↑o
.idata:0038B734                 db '_configthreadlocale',0
.idata:0038B748 word_38B748     dw 2FAh                 ; DATA XREF: .idata:0038B350↑o
.idata:0038B74A                 db '_set_new_mode',0
.idata:0038B758 word_38B758     dw 73h                  ; DATA XREF: .idata:0038B354↑o
.idata:0038B75A                 db '__p__commode',0
.idata:0038B767                 align 4
.idata:0038B768 word_38B768     dw 549h                 ; DATA XREF: .idata:0038B358↑o
.idata:0038B76A                 db 'strcpy_s',0
.idata:0038B773                 align 4
.idata:0038B774 word_38B774     dw 545h                 ; DATA XREF: .idata:0038B35C↑o
.idata:0038B776                 db 'strcat_s',0
.idata:0038B77F                 align 10h
.idata:0038B780 word_38B780     dw 8Eh                  ; DATA XREF: .idata:0038B360↑o
.idata:0038B782                 db '__stdio_common_vsprintf_s',0
.idata:0038B79C word_38B79C     dw 2EEh                 ; DATA XREF: .idata:0038B364↑o
.idata:0038B79E                 db '_seh_filter_dll',0
.idata:0038B7AE word_38B7AE     dw 197h                 ; DATA XREF: .idata:0038B368↑o
.idata:0038B7B0                 db '_initialize_onexit_table',0
.idata:0038B7C9                 align 2
.idata:0038B7CA word_38B7CA     dw 2E2h                 ; DATA XREF: .idata:0038B36C↑o
.idata:0038B7CC                 db '_register_onexit_function',0
.idata:0038B7E6 word_38B7E6     dw 10Ch                 ; DATA XREF: .idata:0038B370↑o
.idata:0038B7E8                 db '_execute_onexit_table',0
.idata:0038B7FE word_38B7FE     dw 0E8h                 ; DATA XREF: .idata:0038B374↑o
.idata:0038B800                 db '_crt_atexit',0
.idata:0038B80C word_38B80C     dw 0E7h                 ; DATA XREF: .idata:0038B378↑o
.idata:0038B80E                 db '_crt_at_quick_exit',0
.idata:0038B821                 align 2
.idata:0038B822 word_38B822     dw 0E0h                 ; DATA XREF: .idata:0038B37C↑o
.idata:0038B824                 db '_controlfp_s',0
.idata:0038B831                 align 2
.idata:0038B832 word_38B832     dw 566h                 ; DATA XREF: .idata:0038B3DC↑o
.idata:0038B834                 db 'terminate',0
.idata:0038B83E word_38B83E     dw 3C9h                 ; DATA XREF: .idata:0038B384↑o
.idata:0038B840                 db '_wmakepath_s',0
.idata:0038B84D                 align 2
.idata:0038B84E word_38B84E     dw 3E5h                 ; DATA XREF: .idata:0038B388↑o
.idata:0038B850                 db '_wsplitpath_s',0
.idata:0038B85E word_38B85E     dw 57Fh                 ; DATA XREF: .idata:0038B38C↑o
.idata:0038B860                 db 'wcscpy_s',0
.idata:0038B869                 align 2
.idata:0038B86A aUcrtbasedDll   db 'ucrtbased.dll',0    ; DATA XREF: .idata:0038B224↑o
.idata:0038B878 word_38B878     dw 220h                 ; DATA XREF: .idata:0038B2B0↑o
.idata:0038B87A                 db 'GetCurrentThreadId',0
.idata:0038B88D                 align 2
.idata:0038B88E word_38B88E     dw 38Bh                 ; DATA XREF: .idata:0038B2AC↑o
.idata:0038B890                 db 'IsDebuggerPresent',0
.idata:0038B8A2 word_38B8A2     dw 46Eh                 ; DATA XREF: .idata:0038B2A8↑o
.idata:0038B8A4                 db 'RaiseException',0
.idata:0038B8B3                 align 4
.idata:0038B8B4 word_38B8B4     dw 3FCh                 ; DATA XREF: .idata:0038B2A4↑o
.idata:0038B8B6                 db 'MultiByteToWideChar',0
.idata:0038B8CA word_38B8CA     dw 60Eh                 ; DATA XREF: .idata:0038B2A0↑o
.idata:0038B8CC                 db 'WideCharToMultiByte',0
.idata:0038B8E0 word_38B8E0     dw 5BDh                 ; DATA XREF: .idata:0038B29C↑o
.idata:0038B8E2                 db 'UnhandledExceptionFilter',0
.idata:0038B8FB                 align 4
.idata:0038B8FC word_38B8FC     dw 57Dh                 ; DATA XREF: .idata:0038B298↑o
.idata:0038B8FE                 db 'SetUnhandledExceptionFilter',0
.idata:0038B91A word_38B91A     dw 21Bh                 ; DATA XREF: .idata:0038B294↑o
.idata:0038B91C                 db 'GetCurrentProcess',0
.idata:0038B92E word_38B92E     dw 392h                 ; DATA XREF: .idata:0038B290↑o
.idata:0038B930                 db 'IsProcessorFeaturePresent',0
.idata:0038B94A word_38B94A     dw 458h                 ; DATA XREF: .idata:0038B28C↑o
.idata:0038B94C                 db 'QueryPerformanceCounter',0
.idata:0038B964 word_38B964     dw 21Ch                 ; DATA XREF: .idata:0038B288↑o
.idata:0038B966                 db 'GetCurrentProcessId',0
.idata:0038B97A word_38B97A     dw 2F1h                 ; DATA XREF: .idata:0038B284↑o
.idata:0038B97C                 db 'GetSystemTimeAsFileTime',0
.idata:0038B994 word_38B994     dw 36Fh                 ; DATA XREF: .idata:0038B280↑o
.idata:0038B996                 db 'InitializeSListHead',0
.idata:0038B9AA word_38B9AA     dw 2D8h                 ; DATA XREF: .idata:0038B27C↑o
.idata:0038B9AC                 db 'GetStartupInfoW',0
.idata:0038B9BC word_38B9BC     dw 27Ch                 ; DATA XREF: .idata:0038B278↑o
.idata:0038B9BE                 db 'GetModuleHandleW',0
.idata:0038B9CF                 align 10h
.idata:0038B9D0 word_38B9D0     dw 265h                 ; DATA XREF: .idata:0038B274↑o
.idata:0038B9D2                 db 'GetLastError',0
.idata:0038B9DF                 align 10h
.idata:0038B9E0 word_38B9E0     dw 351h                 ; DATA XREF: .idata:0038B270↑o
.idata:0038B9E2                 db 'HeapAlloc',0
.idata:0038B9EC word_38B9EC     dw 355h                 ; DATA XREF: .idata:0038B26C↑o
.idata:0038B9EE                 db 'HeapFree',0
.idata:0038B9F7                 align 4
.idata:0038B9F8 word_38B9F8     dw 2BCh                 ; DATA XREF: .idata:0038B268↑o
.idata:0038B9FA                 db 'GetProcessHeap',0
.idata:0038BA09                 align 2
.idata:0038BA0A word_38BA0A     dw 5DEh                 ; DATA XREF: .idata:0038B264↑o
.idata:0038BA0C                 db 'VirtualQuery',0
.idata:0038BA19                 align 2
.idata:0038BA1A word_38BA1A     dw 1AFh                 ; DATA XREF: .idata:0038B260↑o
.idata:0038BA1C                 db 'FreeLibrary',0
.idata:0038BA28 word_38BA28     dw 2B5h                 ; DATA XREF: .idata:0038B2B4↑o
.idata:0038BA2A                 db 'GetProcAddress',0
.idata:0038BA39                 align 2
.idata:0038BA3A word_38BA3A     dw 551h                 ; DATA XREF: .idata:0038B3E8↑o
.idata:0038BA3C                 db 'strncmp',0
.idata:0038BA44                 align 800h
.idata:0038BA44 _idata          ends
.idata:0038BA44
.msvcjmc:0038C000 ; Section 6. (virtual address 0001C000)
.msvcjmc:0038C000 ; Virtual size                  : 000001D0 (    464.)
.msvcjmc:0038C000 ; Section size in file          : 00000200 (    512.)
.msvcjmc:0038C000 ; Offset to raw data for section: 00009400
.msvcjmc:0038C000 ; Flags C0000040: Data Readable Writable
.msvcjmc:0038C000 ; Alignment     : default
.msvcjmc:0038C000 ; ===========================================================================
.msvcjmc:0038C000
.msvcjmc:0038C000 ; Segment type: Pure data
.msvcjmc:0038C000 ; Segment permissions: Read/Write
.msvcjmc:0038C000 _msvcjmc        segment para public 'DATA' use32
.msvcjmc:0038C000                 assume cs:_msvcjmc
.msvcjmc:0038C000                 ;org 38C000h
.msvcjmc:0038C000                 db    1
.msvcjmc:0038C001                 db    1
.msvcjmc:0038C002                 db    1
.msvcjmc:0038C003                 db    1
.msvcjmc:0038C004                 db    1
.msvcjmc:0038C005                 db    1
.msvcjmc:0038C006                 db    1
.msvcjmc:0038C007                 db    1
.msvcjmc:0038C008                 db    1
.msvcjmc:0038C009                 db    1
.msvcjmc:0038C00A                 db    1
.msvcjmc:0038C00B                 db    1
.msvcjmc:0038C00C                 db    1
.msvcjmc:0038C00D                 db    1
.msvcjmc:0038C00E                 db    1
.msvcjmc:0038C00F                 db    1
.msvcjmc:0038C010                 db    1
.msvcjmc:0038C011                 db    1
.msvcjmc:0038C012                 db    1
.msvcjmc:0038C013                 db    1
.msvcjmc:0038C014                 db    1
.msvcjmc:0038C015                 db    1
.msvcjmc:0038C016                 db    1
.msvcjmc:0038C017                 db    1
.msvcjmc:0038C018                 db    1
.msvcjmc:0038C019                 db    1
.msvcjmc:0038C01A                 db    1
.msvcjmc:0038C01B                 db    1
.msvcjmc:0038C01C                 db    1
.msvcjmc:0038C01D                 db    1
.msvcjmc:0038C01E                 db    1
.msvcjmc:0038C01F                 db    1
.msvcjmc:0038C020                 db    1
.msvcjmc:0038C021                 db    1
.msvcjmc:0038C022                 db    1
.msvcjmc:0038C023                 db    1
.msvcjmc:0038C024                 db    1
.msvcjmc:0038C025                 db    1
.msvcjmc:0038C026                 db    1
.msvcjmc:0038C027                 db    1
.msvcjmc:0038C028                 db    1
.msvcjmc:0038C029                 db    1
.msvcjmc:0038C02A                 db    1
.msvcjmc:0038C02B                 db    1
.msvcjmc:0038C02C                 db    1
.msvcjmc:0038C02D                 db    1
.msvcjmc:0038C02E                 db    1
.msvcjmc:0038C02F                 db    1
.msvcjmc:0038C030                 db    1
.msvcjmc:0038C031                 db    1
.msvcjmc:0038C032                 db    1
.msvcjmc:0038C033                 db    1
.msvcjmc:0038C034                 db    1
.msvcjmc:0038C035                 db    1
.msvcjmc:0038C036                 db    1
.msvcjmc:0038C037                 db    1
.msvcjmc:0038C038                 db    1
.msvcjmc:0038C039                 db    1
.msvcjmc:0038C03A                 db    1
.msvcjmc:0038C03B                 db    1
.msvcjmc:0038C03C                 db    1
.msvcjmc:0038C03D                 db    1
.msvcjmc:0038C03E                 db    1
.msvcjmc:0038C03F                 db    1
.msvcjmc:0038C040                 db    1
.msvcjmc:0038C041                 db    1
.msvcjmc:0038C042                 db    1
.msvcjmc:0038C043                 db    1
.msvcjmc:0038C044                 db    1
.msvcjmc:0038C045                 db    1
.msvcjmc:0038C046                 db    1
.msvcjmc:0038C047                 db    1
.msvcjmc:0038C048                 db    1
.msvcjmc:0038C049                 db    1
.msvcjmc:0038C04A                 db    1
.msvcjmc:0038C04B                 db    1
.msvcjmc:0038C04C                 db    1
.msvcjmc:0038C04D                 db    1
.msvcjmc:0038C04E                 db    1
.msvcjmc:0038C04F                 db    1
.msvcjmc:0038C050                 db    1
.msvcjmc:0038C051                 db    1
.msvcjmc:0038C052                 db    1
.msvcjmc:0038C053                 db    1
.msvcjmc:0038C054                 db    1
.msvcjmc:0038C055                 db    1
.msvcjmc:0038C056                 db    1
.msvcjmc:0038C057                 db    1
.msvcjmc:0038C058                 db    1
.msvcjmc:0038C059                 db    1
.msvcjmc:0038C05A                 db    1
.msvcjmc:0038C05B                 db    1
.msvcjmc:0038C05C                 db    1
.msvcjmc:0038C05D                 db    1
.msvcjmc:0038C05E                 db    1
.msvcjmc:0038C05F                 db    1
.msvcjmc:0038C060                 db    1
.msvcjmc:0038C061                 db    1
.msvcjmc:0038C062                 db    1
.msvcjmc:0038C063                 db    1
.msvcjmc:0038C064                 db    1
.msvcjmc:0038C065                 db    1
.msvcjmc:0038C066                 db    1
.msvcjmc:0038C067                 db    1
.msvcjmc:0038C068                 db    1
.msvcjmc:0038C069                 db    1
.msvcjmc:0038C06A                 db    1
.msvcjmc:0038C06B                 db    1
.msvcjmc:0038C06C                 db    1
.msvcjmc:0038C06D                 db    1
.msvcjmc:0038C06E                 db    1
.msvcjmc:0038C06F                 db    1
.msvcjmc:0038C070                 db    1
.msvcjmc:0038C071                 db    1
.msvcjmc:0038C072                 db    1
.msvcjmc:0038C073                 db    1
.msvcjmc:0038C074                 db    1
.msvcjmc:0038C075                 db    1
.msvcjmc:0038C076                 db    1
.msvcjmc:0038C077                 db    1
.msvcjmc:0038C078                 db    1
.msvcjmc:0038C079                 db    1
.msvcjmc:0038C07A                 db    1
.msvcjmc:0038C07B                 db    1
.msvcjmc:0038C07C                 db    1
.msvcjmc:0038C07D                 db    1
.msvcjmc:0038C07E                 db    1
.msvcjmc:0038C07F                 db    1
.msvcjmc:0038C080                 db    1
.msvcjmc:0038C081                 db    1
.msvcjmc:0038C082                 db    1
.msvcjmc:0038C083                 db    1
.msvcjmc:0038C084                 db    1
.msvcjmc:0038C085                 db    1
.msvcjmc:0038C086                 db    1
.msvcjmc:0038C087                 db    1
.msvcjmc:0038C088                 db    1
.msvcjmc:0038C089                 db    1
.msvcjmc:0038C08A                 db    1
.msvcjmc:0038C08B                 db    1
.msvcjmc:0038C08C                 db    1
.msvcjmc:0038C08D                 db    1
.msvcjmc:0038C08E                 db    1
.msvcjmc:0038C08F                 db    1
.msvcjmc:0038C090                 db    1
.msvcjmc:0038C091                 db    1
.msvcjmc:0038C092                 db    1
.msvcjmc:0038C093                 db    1
.msvcjmc:0038C094                 db    1
.msvcjmc:0038C095                 db    1
.msvcjmc:0038C096                 db    1
.msvcjmc:0038C097                 db    1
.msvcjmc:0038C098                 db    1
.msvcjmc:0038C099                 db    1
.msvcjmc:0038C09A                 db    1
.msvcjmc:0038C09B                 db    1
.msvcjmc:0038C09C                 db    1
.msvcjmc:0038C09D                 db    1
.msvcjmc:0038C09E                 db    1
.msvcjmc:0038C09F                 db    1
.msvcjmc:0038C0A0 unk_38C0A0      db    1                 ; DATA XREF: sub_381A70+17↑o
.msvcjmc:0038C0A1                 db    1
.msvcjmc:0038C0A2 unk_38C0A2      db    1                 ; DATA XREF: sub_381AC0+17↑o
.msvcjmc:0038C0A2                                         ; sub_381D70+1B↑o
.msvcjmc:0038C0A3                 db    1
.msvcjmc:0038C0A4                 db    1
.msvcjmc:0038C0A5                 db    1
.msvcjmc:0038C0A6                 db    1
.msvcjmc:0038C0A7                 db    1
.msvcjmc:0038C0A8                 db    1
.msvcjmc:0038C0A9                 db    1
.msvcjmc:0038C0AA                 db    1
.msvcjmc:0038C0AB                 db    1
.msvcjmc:0038C0AC                 db    1
.msvcjmc:0038C0AD unk_38C0AD      db    1                 ; DATA XREF: sub_3817D0+1B↑o
.msvcjmc:0038C0AD                                         ; sub_3818A0+28↑o ...
.msvcjmc:0038C0AE                 db    0
.msvcjmc:0038C0AF                 db    0
.msvcjmc:0038C0B0                 db    0
.msvcjmc:0038C0B1                 db    0
.msvcjmc:0038C0B2                 db    0
.msvcjmc:0038C0B3                 db    0
.msvcjmc:0038C0B4                 db    0
.msvcjmc:0038C0B5                 db    0
.msvcjmc:0038C0B6                 db    0
.msvcjmc:0038C0B7                 db    0
.msvcjmc:0038C0B8                 db    0
.msvcjmc:0038C0B9                 db    0
.msvcjmc:0038C0BA                 db    0
.msvcjmc:0038C0BB                 db    0
.msvcjmc:0038C0BC                 db    0
.msvcjmc:0038C0BD                 db    0
.msvcjmc:0038C0BE                 db    0
.msvcjmc:0038C0BF                 db    0
.msvcjmc:0038C0C0                 db    0
.msvcjmc:0038C0C1                 db    0
.msvcjmc:0038C0C2                 db    0
.msvcjmc:0038C0C3                 db    0
.msvcjmc:0038C0C4                 db    0
.msvcjmc:0038C0C5                 db    0
.msvcjmc:0038C0C6                 db    0
.msvcjmc:0038C0C7                 db    0
.msvcjmc:0038C0C8                 db    0
.msvcjmc:0038C0C9                 db    0
.msvcjmc:0038C0CA                 db    0
.msvcjmc:0038C0CB                 db    0
.msvcjmc:0038C0CC                 db    0
.msvcjmc:0038C0CD                 db    0
.msvcjmc:0038C0CE                 db    0
.msvcjmc:0038C0CF                 db    0
.msvcjmc:0038C0D0                 db    0
.msvcjmc:0038C0D1                 db    0
.msvcjmc:0038C0D2                 db    0
.msvcjmc:0038C0D3                 db    0
.msvcjmc:0038C0D4                 db    0
.msvcjmc:0038C0D5                 db    0
.msvcjmc:0038C0D6                 db    0
.msvcjmc:0038C0D7                 db    0
.msvcjmc:0038C0D8                 db    0
.msvcjmc:0038C0D9                 db    0
.msvcjmc:0038C0DA                 db    0
.msvcjmc:0038C0DB                 db    0
.msvcjmc:0038C0DC                 db    0
.msvcjmc:0038C0DD                 db    0
.msvcjmc:0038C0DE                 db    0
.msvcjmc:0038C0DF                 db    0
.msvcjmc:0038C0E0                 db    0
.msvcjmc:0038C0E1                 db    0
.msvcjmc:0038C0E2                 db    0
.msvcjmc:0038C0E3                 db    0
.msvcjmc:0038C0E4                 db    0
.msvcjmc:0038C0E5                 db    0
.msvcjmc:0038C0E6                 db    0
.msvcjmc:0038C0E7                 db    0
.msvcjmc:0038C0E8                 db    0
.msvcjmc:0038C0E9                 db    0
.msvcjmc:0038C0EA                 db    0
.msvcjmc:0038C0EB                 db    0
.msvcjmc:0038C0EC                 db    0
.msvcjmc:0038C0ED                 db    0
.msvcjmc:0038C0EE                 db    0
.msvcjmc:0038C0EF                 db    0
.msvcjmc:0038C0F0                 db    0
.msvcjmc:0038C0F1                 db    0
.msvcjmc:0038C0F2                 db    0
.msvcjmc:0038C0F3                 db    0
.msvcjmc:0038C0F4                 db    0
.msvcjmc:0038C0F5                 db    0
.msvcjmc:0038C0F6                 db    0
.msvcjmc:0038C0F7                 db    0
.msvcjmc:0038C0F8                 db    0
.msvcjmc:0038C0F9                 db    0
.msvcjmc:0038C0FA                 db    0
.msvcjmc:0038C0FB                 db    0
.msvcjmc:0038C0FC                 db    0
.msvcjmc:0038C0FD                 db    0
.msvcjmc:0038C0FE                 db    0
.msvcjmc:0038C0FF                 db    0
.msvcjmc:0038C100                 db    0
.msvcjmc:0038C101                 db    0
.msvcjmc:0038C102                 db    0
.msvcjmc:0038C103                 db    0
.msvcjmc:0038C104                 db    0
.msvcjmc:0038C105                 db    0
.msvcjmc:0038C106                 db    0
.msvcjmc:0038C107                 db    0
.msvcjmc:0038C108                 db    0
.msvcjmc:0038C109                 db    0
.msvcjmc:0038C10A                 db    0
.msvcjmc:0038C10B                 db    0
.msvcjmc:0038C10C                 db    0
.msvcjmc:0038C10D                 db    0
.msvcjmc:0038C10E                 db    0
.msvcjmc:0038C10F                 db    0
.msvcjmc:0038C110                 db    0
.msvcjmc:0038C111                 db    0
.msvcjmc:0038C112                 db    0
.msvcjmc:0038C113                 db    0
.msvcjmc:0038C114                 db    0
.msvcjmc:0038C115                 db    0
.msvcjmc:0038C116                 db    0
.msvcjmc:0038C117                 db    0
.msvcjmc:0038C118                 db    0
.msvcjmc:0038C119                 db    0
.msvcjmc:0038C11A                 db    0
.msvcjmc:0038C11B                 db    0
.msvcjmc:0038C11C                 db    0
.msvcjmc:0038C11D                 db    0
.msvcjmc:0038C11E                 db    0
.msvcjmc:0038C11F                 db    0
.msvcjmc:0038C120                 db    0
.msvcjmc:0038C121                 db    0
.msvcjmc:0038C122                 db    0
.msvcjmc:0038C123                 db    0
.msvcjmc:0038C124                 db    0
.msvcjmc:0038C125                 db    0
.msvcjmc:0038C126                 db    0
.msvcjmc:0038C127                 db    0
.msvcjmc:0038C128                 db    0
.msvcjmc:0038C129                 db    0
.msvcjmc:0038C12A                 db    0
.msvcjmc:0038C12B                 db    0
.msvcjmc:0038C12C                 db    0
.msvcjmc:0038C12D                 db    0
.msvcjmc:0038C12E                 db    0
.msvcjmc:0038C12F                 db    0
.msvcjmc:0038C130                 db    0
.msvcjmc:0038C131                 db    0
.msvcjmc:0038C132                 db    0
.msvcjmc:0038C133                 db    0
.msvcjmc:0038C134                 db    0
.msvcjmc:0038C135                 db    0
.msvcjmc:0038C136                 db    0
.msvcjmc:0038C137                 db    0
.msvcjmc:0038C138                 db    0
.msvcjmc:0038C139                 db    0
.msvcjmc:0038C13A                 db    0
.msvcjmc:0038C13B                 db    0
.msvcjmc:0038C13C                 db    0
.msvcjmc:0038C13D                 db    0
.msvcjmc:0038C13E                 db    0
.msvcjmc:0038C13F                 db    0
.msvcjmc:0038C140                 db    0
.msvcjmc:0038C141                 db    0
.msvcjmc:0038C142                 db    0
.msvcjmc:0038C143                 db    0
.msvcjmc:0038C144                 db    0
.msvcjmc:0038C145                 db    0
.msvcjmc:0038C146                 db    0
.msvcjmc:0038C147                 db    0
.msvcjmc:0038C148                 db    0
.msvcjmc:0038C149                 db    0
.msvcjmc:0038C14A                 db    0
.msvcjmc:0038C14B                 db    0
.msvcjmc:0038C14C                 db    0
.msvcjmc:0038C14D                 db    0
.msvcjmc:0038C14E                 db    0
.msvcjmc:0038C14F                 db    0
.msvcjmc:0038C150                 db    0
.msvcjmc:0038C151                 db    0
.msvcjmc:0038C152                 db    0
.msvcjmc:0038C153                 db    0
.msvcjmc:0038C154                 db    0
.msvcjmc:0038C155                 db    0
.msvcjmc:0038C156                 db    0
.msvcjmc:0038C157                 db    0
.msvcjmc:0038C158                 db    0
.msvcjmc:0038C159                 db    0
.msvcjmc:0038C15A                 db    0
.msvcjmc:0038C15B                 db    0
.msvcjmc:0038C15C                 db    0
.msvcjmc:0038C15D                 db    0
.msvcjmc:0038C15E                 db    0
.msvcjmc:0038C15F                 db    0
.msvcjmc:0038C160                 db    0
.msvcjmc:0038C161                 db    0
.msvcjmc:0038C162                 db    0
.msvcjmc:0038C163                 db    0
.msvcjmc:0038C164                 db    0
.msvcjmc:0038C165                 db    0
.msvcjmc:0038C166                 db    0
.msvcjmc:0038C167                 db    0
.msvcjmc:0038C168                 db    0
.msvcjmc:0038C169                 db    0
.msvcjmc:0038C16A                 db    0
.msvcjmc:0038C16B                 db    0
.msvcjmc:0038C16C                 db    0
.msvcjmc:0038C16D                 db    0
.msvcjmc:0038C16E                 db    0
.msvcjmc:0038C16F                 db    0
.msvcjmc:0038C170                 db    0
.msvcjmc:0038C171                 db    0
.msvcjmc:0038C172                 db    0
.msvcjmc:0038C173                 db    0
.msvcjmc:0038C174                 db    0
.msvcjmc:0038C175                 db    0
.msvcjmc:0038C176                 db    0
.msvcjmc:0038C177                 db    0
.msvcjmc:0038C178                 db    0
.msvcjmc:0038C179                 db    0
.msvcjmc:0038C17A                 db    0
.msvcjmc:0038C17B                 db    0
.msvcjmc:0038C17C                 db    0
.msvcjmc:0038C17D                 db    0
.msvcjmc:0038C17E                 db    0
.msvcjmc:0038C17F                 db    0
.msvcjmc:0038C180                 db    0
.msvcjmc:0038C181                 db    0
.msvcjmc:0038C182                 db    0
.msvcjmc:0038C183                 db    0
.msvcjmc:0038C184                 db    0
.msvcjmc:0038C185                 db    0
.msvcjmc:0038C186                 db    0
.msvcjmc:0038C187                 db    0
.msvcjmc:0038C188                 db    0
.msvcjmc:0038C189                 db    0
.msvcjmc:0038C18A                 db    0
.msvcjmc:0038C18B                 db    0
.msvcjmc:0038C18C                 db    0
.msvcjmc:0038C18D                 db    0
.msvcjmc:0038C18E                 db    0
.msvcjmc:0038C18F                 db    0
.msvcjmc:0038C190                 db    0
.msvcjmc:0038C191                 db    0
.msvcjmc:0038C192                 db    0
.msvcjmc:0038C193                 db    0
.msvcjmc:0038C194                 db    0
.msvcjmc:0038C195                 db    0
.msvcjmc:0038C196                 db    0
.msvcjmc:0038C197                 db    0
.msvcjmc:0038C198                 db    0
.msvcjmc:0038C199                 db    0
.msvcjmc:0038C19A                 db    0
.msvcjmc:0038C19B                 db    0
.msvcjmc:0038C19C                 db    0
.msvcjmc:0038C19D                 db    0
.msvcjmc:0038C19E                 db    0
.msvcjmc:0038C19F                 db    0
.msvcjmc:0038C1A0                 db    0
.msvcjmc:0038C1A1                 db    0
.msvcjmc:0038C1A2                 db    0
.msvcjmc:0038C1A3                 db    0
.msvcjmc:0038C1A4                 db    0
.msvcjmc:0038C1A5                 db    0
.msvcjmc:0038C1A6                 db    0
.msvcjmc:0038C1A7                 db    0
.msvcjmc:0038C1A8                 db    0
.msvcjmc:0038C1A9                 db    0
.msvcjmc:0038C1AA                 db    0
.msvcjmc:0038C1AB                 db    0
.msvcjmc:0038C1AC                 db    0
.msvcjmc:0038C1AD                 db    0
.msvcjmc:0038C1AE                 db    0
.msvcjmc:0038C1AF                 db    0
.msvcjmc:0038C1B0                 db    0
.msvcjmc:0038C1B1                 db    0
.msvcjmc:0038C1B2                 db    0
.msvcjmc:0038C1B3                 db    0
.msvcjmc:0038C1B4                 db    0
.msvcjmc:0038C1B5                 db    0
.msvcjmc:0038C1B6                 db    0
.msvcjmc:0038C1B7                 db    0
.msvcjmc:0038C1B8                 db    0
.msvcjmc:0038C1B9                 db    0
.msvcjmc:0038C1BA                 db    0
.msvcjmc:0038C1BB                 db    0
.msvcjmc:0038C1BC                 db    0
.msvcjmc:0038C1BD                 db    0
.msvcjmc:0038C1BE                 db    0
.msvcjmc:0038C1BF                 db    0
.msvcjmc:0038C1C0                 db    0
.msvcjmc:0038C1C1                 db    0
.msvcjmc:0038C1C2                 db    0
.msvcjmc:0038C1C3                 db    0
.msvcjmc:0038C1C4                 db    0
.msvcjmc:0038C1C5                 db    0
.msvcjmc:0038C1C6                 db    0
.msvcjmc:0038C1C7                 db    0
.msvcjmc:0038C1C8                 db    0
.msvcjmc:0038C1C9                 db    0
.msvcjmc:0038C1CA                 db    0
.msvcjmc:0038C1CB                 db    0
.msvcjmc:0038C1CC                 db    0
.msvcjmc:0038C1CD                 db    0
.msvcjmc:0038C1CE                 db    0
.msvcjmc:0038C1CF                 db    0
.msvcjmc:0038C1D0                 db    0
.msvcjmc:0038C1D1                 db    0
.msvcjmc:0038C1D2                 db    0
.msvcjmc:0038C1D3                 db    0
.msvcjmc:0038C1D4                 db    0
.msvcjmc:0038C1D5                 db    0
.msvcjmc:0038C1D6                 db    0
.msvcjmc:0038C1D7                 db    0
.msvcjmc:0038C1D8                 db    0
.msvcjmc:0038C1D9                 db    0
.msvcjmc:0038C1DA                 db    0
.msvcjmc:0038C1DB                 db    0
.msvcjmc:0038C1DC                 db    0
.msvcjmc:0038C1DD                 db    0
.msvcjmc:0038C1DE                 db    0
.msvcjmc:0038C1DF                 db    0
.msvcjmc:0038C1E0                 db    0
.msvcjmc:0038C1E1                 db    0
.msvcjmc:0038C1E2                 db    0
.msvcjmc:0038C1E3                 db    0
.msvcjmc:0038C1E4                 db    0
.msvcjmc:0038C1E5                 db    0
.msvcjmc:0038C1E6                 db    0
.msvcjmc:0038C1E7                 db    0
.msvcjmc:0038C1E8                 db    0
.msvcjmc:0038C1E9                 db    0
.msvcjmc:0038C1EA                 db    0
.msvcjmc:0038C1EB                 db    0
.msvcjmc:0038C1EC                 db    0
.msvcjmc:0038C1ED                 db    0
.msvcjmc:0038C1EE                 db    0
.msvcjmc:0038C1EF                 db    0
.msvcjmc:0038C1F0                 db    0
.msvcjmc:0038C1F1                 db    0
.msvcjmc:0038C1F2                 db    0
.msvcjmc:0038C1F3                 db    0
.msvcjmc:0038C1F4                 db    0
.msvcjmc:0038C1F5                 db    0
.msvcjmc:0038C1F6                 db    0
.msvcjmc:0038C1F7                 db    0
.msvcjmc:0038C1F8                 db    0
.msvcjmc:0038C1F9                 db    0
.msvcjmc:0038C1FA                 db    0
.msvcjmc:0038C1FB                 db    0
.msvcjmc:0038C1FC                 db    0
.msvcjmc:0038C1FD                 db    0
.msvcjmc:0038C1FE                 db    0
.msvcjmc:0038C1FF                 db    0
.msvcjmc:0038C200                 align 1000h
.msvcjmc:0038C200 _msvcjmc        ends
.msvcjmc:0038C200
.00cfg:0038D000 ; Section 7. (virtual address 0001D000)
.00cfg:0038D000 ; Virtual size                  : 0000010E (    270.)
.00cfg:0038D000 ; Section size in file          : 00000200 (    512.)
.00cfg:0038D000 ; Offset to raw data for section: 00009600
.00cfg:0038D000 ; Flags 40000040: Data Readable
.00cfg:0038D000 ; Alignment     : default
.00cfg:0038D000 ; ===========================================================================
.00cfg:0038D000
.00cfg:0038D000 ; Segment type: Pure data
.00cfg:0038D000 ; Segment permissions: Read
.00cfg:0038D000 _00cfg          segment para public 'DATA' use32
.00cfg:0038D000                 assume cs:_00cfg
.00cfg:0038D000                 ;org 38D000h
.00cfg:0038D000 ___guard_check_icall_fptr dd offset sub_38128F
.00cfg:0038D000                                         ; DATA XREF: sub_382240+118↑r
.00cfg:0038D000                                         ; sub_3829A0+141↑r ...
.00cfg:0038D004                 dd offset sub_38128F
.00cfg:0038D008 ___castguard_check_failure_os_handled_fptr dd 0
.00cfg:0038D008                                         ; DATA XREF: sub_384300+3↑r
.00cfg:0038D008                                         ; sub_384300+10↑r ...
.00cfg:0038D00C                 align 1000h
.00cfg:0038D00C _00cfg          ends
.00cfg:0038D00C
.00cfg:0038D00C
.00cfg:0038D00C                 end start
